//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Cox.DataAccess.CustomerAccount {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CustomerAccountProfileSchema")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CustomerAccountProfileSchema : global::System.Data.DataSet {
        
        private CustomerAccountDataTable tableCustomerAccount;
        
        private CustomerCampaignDataTable tableCustomerCampaign;
        
        private CustomerContractDataTable tableCustomerContract;
        
        private CustomerPhoneDataTable tableCustomerPhone;
        
        private CustomerPrivacyDataTable tableCustomerPrivacy;
        
        private CustomerMonthlyServiceAmountDataTable tableCustomerMonthlyServiceAmount;
        
        private CustomerEmailDataTable tableCustomerEmail;
        
        private CustomerServicesDataTable tableCustomerServices;
        
        private AccountMatchesDataTable tableAccountMatches;
        
        private CustomerPriceLockInfoDataTable tableCustomerPriceLockInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomerAccountProfileSchema() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CustomerAccountProfileSchema(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomerAccount"] != null)) {
                    base.Tables.Add(new CustomerAccountDataTable(ds.Tables["CustomerAccount"]));
                }
                if ((ds.Tables["CustomerCampaign"] != null)) {
                    base.Tables.Add(new CustomerCampaignDataTable(ds.Tables["CustomerCampaign"]));
                }
                if ((ds.Tables["CustomerContract"] != null)) {
                    base.Tables.Add(new CustomerContractDataTable(ds.Tables["CustomerContract"]));
                }
                if ((ds.Tables["CustomerPhone"] != null)) {
                    base.Tables.Add(new CustomerPhoneDataTable(ds.Tables["CustomerPhone"]));
                }
                if ((ds.Tables["CustomerPrivacy"] != null)) {
                    base.Tables.Add(new CustomerPrivacyDataTable(ds.Tables["CustomerPrivacy"]));
                }
                if ((ds.Tables["CustomerMonthlyServiceAmount"] != null)) {
                    base.Tables.Add(new CustomerMonthlyServiceAmountDataTable(ds.Tables["CustomerMonthlyServiceAmount"]));
                }
                if ((ds.Tables["CustomerEmail"] != null)) {
                    base.Tables.Add(new CustomerEmailDataTable(ds.Tables["CustomerEmail"]));
                }
                if ((ds.Tables["CustomerServices"] != null)) {
                    base.Tables.Add(new CustomerServicesDataTable(ds.Tables["CustomerServices"]));
                }
                if ((ds.Tables["AccountMatches"] != null)) {
                    base.Tables.Add(new AccountMatchesDataTable(ds.Tables["AccountMatches"]));
                }
                if ((ds.Tables["CustomerPriceLockInfo"] != null)) {
                    base.Tables.Add(new CustomerPriceLockInfoDataTable(ds.Tables["CustomerPriceLockInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerAccountDataTable CustomerAccount {
            get {
                return this.tableCustomerAccount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerCampaignDataTable CustomerCampaign {
            get {
                return this.tableCustomerCampaign;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerContractDataTable CustomerContract {
            get {
                return this.tableCustomerContract;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerPhoneDataTable CustomerPhone {
            get {
                return this.tableCustomerPhone;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerPrivacyDataTable CustomerPrivacy {
            get {
                return this.tableCustomerPrivacy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerMonthlyServiceAmountDataTable CustomerMonthlyServiceAmount {
            get {
                return this.tableCustomerMonthlyServiceAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerEmailDataTable CustomerEmail {
            get {
                return this.tableCustomerEmail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerServicesDataTable CustomerServices {
            get {
                return this.tableCustomerServices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccountMatchesDataTable AccountMatches {
            get {
                return this.tableAccountMatches;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerPriceLockInfoDataTable CustomerPriceLockInfo {
            get {
                return this.tableCustomerPriceLockInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CustomerAccountProfileSchema cln = ((CustomerAccountProfileSchema)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomerAccount"] != null)) {
                    base.Tables.Add(new CustomerAccountDataTable(ds.Tables["CustomerAccount"]));
                }
                if ((ds.Tables["CustomerCampaign"] != null)) {
                    base.Tables.Add(new CustomerCampaignDataTable(ds.Tables["CustomerCampaign"]));
                }
                if ((ds.Tables["CustomerContract"] != null)) {
                    base.Tables.Add(new CustomerContractDataTable(ds.Tables["CustomerContract"]));
                }
                if ((ds.Tables["CustomerPhone"] != null)) {
                    base.Tables.Add(new CustomerPhoneDataTable(ds.Tables["CustomerPhone"]));
                }
                if ((ds.Tables["CustomerPrivacy"] != null)) {
                    base.Tables.Add(new CustomerPrivacyDataTable(ds.Tables["CustomerPrivacy"]));
                }
                if ((ds.Tables["CustomerMonthlyServiceAmount"] != null)) {
                    base.Tables.Add(new CustomerMonthlyServiceAmountDataTable(ds.Tables["CustomerMonthlyServiceAmount"]));
                }
                if ((ds.Tables["CustomerEmail"] != null)) {
                    base.Tables.Add(new CustomerEmailDataTable(ds.Tables["CustomerEmail"]));
                }
                if ((ds.Tables["CustomerServices"] != null)) {
                    base.Tables.Add(new CustomerServicesDataTable(ds.Tables["CustomerServices"]));
                }
                if ((ds.Tables["AccountMatches"] != null)) {
                    base.Tables.Add(new AccountMatchesDataTable(ds.Tables["AccountMatches"]));
                }
                if ((ds.Tables["CustomerPriceLockInfo"] != null)) {
                    base.Tables.Add(new CustomerPriceLockInfoDataTable(ds.Tables["CustomerPriceLockInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomerAccount = ((CustomerAccountDataTable)(base.Tables["CustomerAccount"]));
            if ((initTable == true)) {
                if ((this.tableCustomerAccount != null)) {
                    this.tableCustomerAccount.InitVars();
                }
            }
            this.tableCustomerCampaign = ((CustomerCampaignDataTable)(base.Tables["CustomerCampaign"]));
            if ((initTable == true)) {
                if ((this.tableCustomerCampaign != null)) {
                    this.tableCustomerCampaign.InitVars();
                }
            }
            this.tableCustomerContract = ((CustomerContractDataTable)(base.Tables["CustomerContract"]));
            if ((initTable == true)) {
                if ((this.tableCustomerContract != null)) {
                    this.tableCustomerContract.InitVars();
                }
            }
            this.tableCustomerPhone = ((CustomerPhoneDataTable)(base.Tables["CustomerPhone"]));
            if ((initTable == true)) {
                if ((this.tableCustomerPhone != null)) {
                    this.tableCustomerPhone.InitVars();
                }
            }
            this.tableCustomerPrivacy = ((CustomerPrivacyDataTable)(base.Tables["CustomerPrivacy"]));
            if ((initTable == true)) {
                if ((this.tableCustomerPrivacy != null)) {
                    this.tableCustomerPrivacy.InitVars();
                }
            }
            this.tableCustomerMonthlyServiceAmount = ((CustomerMonthlyServiceAmountDataTable)(base.Tables["CustomerMonthlyServiceAmount"]));
            if ((initTable == true)) {
                if ((this.tableCustomerMonthlyServiceAmount != null)) {
                    this.tableCustomerMonthlyServiceAmount.InitVars();
                }
            }
            this.tableCustomerEmail = ((CustomerEmailDataTable)(base.Tables["CustomerEmail"]));
            if ((initTable == true)) {
                if ((this.tableCustomerEmail != null)) {
                    this.tableCustomerEmail.InitVars();
                }
            }
            this.tableCustomerServices = ((CustomerServicesDataTable)(base.Tables["CustomerServices"]));
            if ((initTable == true)) {
                if ((this.tableCustomerServices != null)) {
                    this.tableCustomerServices.InitVars();
                }
            }
            this.tableAccountMatches = ((AccountMatchesDataTable)(base.Tables["AccountMatches"]));
            if ((initTable == true)) {
                if ((this.tableAccountMatches != null)) {
                    this.tableAccountMatches.InitVars();
                }
            }
            this.tableCustomerPriceLockInfo = ((CustomerPriceLockInfoDataTable)(base.Tables["CustomerPriceLockInfo"]));
            if ((initTable == true)) {
                if ((this.tableCustomerPriceLockInfo != null)) {
                    this.tableCustomerPriceLockInfo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CustomerAccountProfileSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CustomerAccountProfileSchema.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomerAccount = new CustomerAccountDataTable();
            base.Tables.Add(this.tableCustomerAccount);
            this.tableCustomerCampaign = new CustomerCampaignDataTable();
            base.Tables.Add(this.tableCustomerCampaign);
            this.tableCustomerContract = new CustomerContractDataTable();
            base.Tables.Add(this.tableCustomerContract);
            this.tableCustomerPhone = new CustomerPhoneDataTable();
            base.Tables.Add(this.tableCustomerPhone);
            this.tableCustomerPrivacy = new CustomerPrivacyDataTable();
            base.Tables.Add(this.tableCustomerPrivacy);
            this.tableCustomerMonthlyServiceAmount = new CustomerMonthlyServiceAmountDataTable();
            base.Tables.Add(this.tableCustomerMonthlyServiceAmount);
            this.tableCustomerEmail = new CustomerEmailDataTable();
            base.Tables.Add(this.tableCustomerEmail);
            this.tableCustomerServices = new CustomerServicesDataTable();
            base.Tables.Add(this.tableCustomerServices);
            this.tableAccountMatches = new AccountMatchesDataTable();
            base.Tables.Add(this.tableAccountMatches);
            this.tableCustomerPriceLockInfo = new CustomerPriceLockInfoDataTable();
            base.Tables.Add(this.tableCustomerPriceLockInfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerAccount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerCampaign() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerContract() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerPhone() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerPrivacy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerMonthlyServiceAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerEmail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerServices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAccountMatches() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerPriceLockInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomerAccountRowChangeEventHandler(object sender, CustomerAccountRowChangeEvent e);
        
        public delegate void CustomerCampaignRowChangeEventHandler(object sender, CustomerCampaignRowChangeEvent e);
        
        public delegate void CustomerContractRowChangeEventHandler(object sender, CustomerContractRowChangeEvent e);
        
        public delegate void CustomerPhoneRowChangeEventHandler(object sender, CustomerPhoneRowChangeEvent e);
        
        public delegate void CustomerPrivacyRowChangeEventHandler(object sender, CustomerPrivacyRowChangeEvent e);
        
        public delegate void CustomerMonthlyServiceAmountRowChangeEventHandler(object sender, CustomerMonthlyServiceAmountRowChangeEvent e);
        
        public delegate void CustomerEmailRowChangeEventHandler(object sender, CustomerEmailRowChangeEvent e);
        
        public delegate void CustomerServicesRowChangeEventHandler(object sender, CustomerServicesRowChangeEvent e);
        
        public delegate void AccountMatchesRowChangeEventHandler(object sender, AccountMatchesRowChangeEvent e);
        
        public delegate void CustomerPriceLockInfoRowChangeEventHandler(object sender, CustomerPriceLockInfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerAccountDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSite_Id;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnHouse_Number;
            
            private global::System.Data.DataColumn columnHouse_Resident_Number;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnFirst_Name;
            
            private global::System.Data.DataColumn columnMiddle_Initial;
            
            private global::System.Data.DataColumn columnLast_Name;
            
            private global::System.Data.DataColumn columnBill_To_Address;
            
            private global::System.Data.DataColumn columnCustomer_Status_Code;
            
            private global::System.Data.DataColumn columnStatus_Date;
            
            private global::System.Data.DataColumn columnConnect_Date;
            
            private global::System.Data.DataColumn columnLanguage_Code;
            
            private global::System.Data.DataColumn columnDisconnect_Date;
            
            private global::System.Data.DataColumn columnCustomer_Type_Code;
            
            private global::System.Data.DataColumn columnCustomer_Type_Description;
            
            private global::System.Data.DataColumn columnOld_Tran_Site_Id;
            
            private global::System.Data.DataColumn columnld_Tran_Account_Number;
            
            private global::System.Data.DataColumn columnHome_Phone;
            
            private global::System.Data.DataColumn columnBusiness_Phone;
            
            private global::System.Data.DataColumn columnOther_Phone;
            
            private global::System.Data.DataColumn columnPrivacy_Code;
            
            private global::System.Data.DataColumn columnCustomer_Name;
            
            private global::System.Data.DataColumn columnCustomer_Business_Name;
            
            private global::System.Data.DataColumn columnAddress_Line_1;
            
            private global::System.Data.DataColumn columnAddress_Line_2;
            
            private global::System.Data.DataColumn columnAddress_Line_3;
            
            private global::System.Data.DataColumn columnAddress_Line_4;
            
            private global::System.Data.DataColumn columnADDR_ZIP_4;
            
            private global::System.Data.DataColumn columnADDR_ZIP_5;
            
            private global::System.Data.DataColumn columnADDR_CITY;
            
            private global::System.Data.DataColumn columnADDR_STATE;
            
            private global::System.Data.DataColumn columnDwelling_Type;
            
            private global::System.Data.DataColumn columnDwelling_Type_Description;
            
            private global::System.Data.DataColumn columnBill_Type_Code;
            
            private global::System.Data.DataColumn columnBill_Type_Short_Desc;
            
            private global::System.Data.DataColumn columnBill_Type_Long_Desc;
            
            private global::System.Data.DataColumn columnService_Class;
            
            private global::System.Data.DataColumn columnCompany_Number;
            
            private global::System.Data.DataColumn columnDivision_Number;
            
            private global::System.Data.DataColumn columnFranchise_Number;
            
            private global::System.Data.DataColumn columnFranchise_Name;
            
            private global::System.Data.DataColumn columnHouse_Status;
            
            private global::System.Data.DataColumn columnUnserviceable_Address;
            
            private global::System.Data.DataColumn columnDate_Of_Birth;
            
            private global::System.Data.DataColumn columnDrivers_License_Number;
            
            private global::System.Data.DataColumn columnSocial_Security_Nbr;
            
            private global::System.Data.DataColumn columnPin_Number;
            
            private global::System.Data.DataColumn columnCustomer_Comment;
            
            private global::System.Data.DataColumn columnBuilding;
            
            private global::System.Data.DataColumn columnDoNotAcceptCreditCards;
            
            private global::System.Data.DataColumn columnDoNotAcceptCheck;
            
            private global::System.Data.DataColumn columnApartment;
            
            private global::System.Data.DataColumn columnOnlineOrderBlock;
            
            private global::System.Data.DataColumn columnOnlineOrderDelinquentBalance;
            
            private global::System.Data.DataColumn columnCHSI_Abuse_Flag;
            
            private global::System.Data.DataColumn columnVIP_Code;
            
            private global::System.Data.DataColumn columnCust_Value_Segmentation;
            
            private global::System.Data.DataColumn columnCox_Unique_ID;
            
            private global::System.Data.DataColumn columnContract;
            
            private global::System.Data.DataColumn columnTenure_Number_Of_Months;
            
            private global::System.Data.DataColumn columnNumberOfTru2WayActive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountDataTable() {
                this.TableName = "CustomerAccount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerAccountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerAccountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Site_IdColumn {
                get {
                    return this.columnSite_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn House_NumberColumn {
                get {
                    return this.columnHouse_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn House_Resident_NumberColumn {
                get {
                    return this.columnHouse_Resident_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn First_NameColumn {
                get {
                    return this.columnFirst_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Middle_InitialColumn {
                get {
                    return this.columnMiddle_Initial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Last_NameColumn {
                get {
                    return this.columnLast_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_To_AddressColumn {
                get {
                    return this.columnBill_To_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_Status_CodeColumn {
                get {
                    return this.columnCustomer_Status_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Status_DateColumn {
                get {
                    return this.columnStatus_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Connect_DateColumn {
                get {
                    return this.columnConnect_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Language_CodeColumn {
                get {
                    return this.columnLanguage_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Disconnect_DateColumn {
                get {
                    return this.columnDisconnect_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_Type_CodeColumn {
                get {
                    return this.columnCustomer_Type_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_Type_DescriptionColumn {
                get {
                    return this.columnCustomer_Type_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Old_Tran_Site_IdColumn {
                get {
                    return this.columnOld_Tran_Site_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ld_Tran_Account_NumberColumn {
                get {
                    return this.columnld_Tran_Account_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Home_PhoneColumn {
                get {
                    return this.columnHome_Phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Business_PhoneColumn {
                get {
                    return this.columnBusiness_Phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Other_PhoneColumn {
                get {
                    return this.columnOther_Phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Privacy_CodeColumn {
                get {
                    return this.columnPrivacy_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_NameColumn {
                get {
                    return this.columnCustomer_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_Business_NameColumn {
                get {
                    return this.columnCustomer_Business_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address_Line_1Column {
                get {
                    return this.columnAddress_Line_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address_Line_2Column {
                get {
                    return this.columnAddress_Line_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address_Line_3Column {
                get {
                    return this.columnAddress_Line_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address_Line_4Column {
                get {
                    return this.columnAddress_Line_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDR_ZIP_4Column {
                get {
                    return this.columnADDR_ZIP_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDR_ZIP_5Column {
                get {
                    return this.columnADDR_ZIP_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDR_CITYColumn {
                get {
                    return this.columnADDR_CITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDR_STATEColumn {
                get {
                    return this.columnADDR_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dwelling_TypeColumn {
                get {
                    return this.columnDwelling_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dwelling_Type_DescriptionColumn {
                get {
                    return this.columnDwelling_Type_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_Type_CodeColumn {
                get {
                    return this.columnBill_Type_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_Type_Short_DescColumn {
                get {
                    return this.columnBill_Type_Short_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_Type_Long_DescColumn {
                get {
                    return this.columnBill_Type_Long_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_ClassColumn {
                get {
                    return this.columnService_Class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_NumberColumn {
                get {
                    return this.columnCompany_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Division_NumberColumn {
                get {
                    return this.columnDivision_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Franchise_NumberColumn {
                get {
                    return this.columnFranchise_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Franchise_NameColumn {
                get {
                    return this.columnFranchise_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn House_StatusColumn {
                get {
                    return this.columnHouse_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unserviceable_AddressColumn {
                get {
                    return this.columnUnserviceable_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Date_Of_BirthColumn {
                get {
                    return this.columnDate_Of_Birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Drivers_License_NumberColumn {
                get {
                    return this.columnDrivers_License_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Social_Security_NbrColumn {
                get {
                    return this.columnSocial_Security_Nbr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pin_NumberColumn {
                get {
                    return this.columnPin_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_CommentColumn {
                get {
                    return this.columnCustomer_Comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingColumn {
                get {
                    return this.columnBuilding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoNotAcceptCreditCardsColumn {
                get {
                    return this.columnDoNotAcceptCreditCards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoNotAcceptCheckColumn {
                get {
                    return this.columnDoNotAcceptCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApartmentColumn {
                get {
                    return this.columnApartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineOrderBlockColumn {
                get {
                    return this.columnOnlineOrderBlock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineOrderDelinquentBalanceColumn {
                get {
                    return this.columnOnlineOrderDelinquentBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHSI_Abuse_FlagColumn {
                get {
                    return this.columnCHSI_Abuse_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VIP_CodeColumn {
                get {
                    return this.columnVIP_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cust_Value_SegmentationColumn {
                get {
                    return this.columnCust_Value_Segmentation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cox_Unique_IDColumn {
                get {
                    return this.columnCox_Unique_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractColumn {
                get {
                    return this.columnContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tenure_Number_Of_MonthsColumn {
                get {
                    return this.columnTenure_Number_Of_Months;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfTru2WayActiveColumn {
                get {
                    return this.columnNumberOfTru2WayActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountRow this[int index] {
                get {
                    return ((CustomerAccountRow)(this.Rows[index]));
                }
            }
            
            public event CustomerAccountRowChangeEventHandler CustomerAccountRowChanging;
            
            public event CustomerAccountRowChangeEventHandler CustomerAccountRowChanged;
            
            public event CustomerAccountRowChangeEventHandler CustomerAccountRowDeleting;
            
            public event CustomerAccountRowChangeEventHandler CustomerAccountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerAccountRow(CustomerAccountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountRow AddCustomerAccountRow(
                        int Site_Id, 
                        string Account_Number, 
                        string House_Number, 
                        string House_Resident_Number, 
                        string Title, 
                        string First_Name, 
                        string Middle_Initial, 
                        string Last_Name, 
                        string Bill_To_Address, 
                        string Customer_Status_Code, 
                        string Status_Date, 
                        string Connect_Date, 
                        string Language_Code, 
                        string Disconnect_Date, 
                        string Customer_Type_Code, 
                        string Customer_Type_Description, 
                        int Old_Tran_Site_Id, 
                        string ld_Tran_Account_Number, 
                        string Home_Phone, 
                        string Business_Phone, 
                        string Other_Phone, 
                        string Privacy_Code, 
                        string Customer_Name, 
                        string Customer_Business_Name, 
                        string Address_Line_1, 
                        string Address_Line_2, 
                        string Address_Line_3, 
                        string Address_Line_4, 
                        string ADDR_ZIP_4, 
                        string ADDR_ZIP_5, 
                        string ADDR_CITY, 
                        string ADDR_STATE, 
                        string Dwelling_Type, 
                        string Dwelling_Type_Description, 
                        string Bill_Type_Code, 
                        string Bill_Type_Short_Desc, 
                        string Bill_Type_Long_Desc, 
                        string Service_Class, 
                        int Company_Number, 
                        int Division_Number, 
                        int Franchise_Number, 
                        string Franchise_Name, 
                        string House_Status, 
                        string Unserviceable_Address, 
                        string Date_Of_Birth, 
                        string Drivers_License_Number, 
                        string Social_Security_Nbr, 
                        string Pin_Number, 
                        string Customer_Comment, 
                        string Building, 
                        bool DoNotAcceptCreditCards, 
                        bool DoNotAcceptCheck, 
                        string Apartment, 
                        short OnlineOrderBlock, 
                        bool OnlineOrderDelinquentBalance, 
                        bool CHSI_Abuse_Flag, 
                        string VIP_Code, 
                        string Cust_Value_Segmentation, 
                        string Cox_Unique_ID, 
                        string Contract, 
                        string Tenure_Number_Of_Months, 
                        int NumberOfTru2WayActive) {
                CustomerAccountRow rowCustomerAccountRow = ((CustomerAccountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Site_Id,
                        Account_Number,
                        House_Number,
                        House_Resident_Number,
                        Title,
                        First_Name,
                        Middle_Initial,
                        Last_Name,
                        Bill_To_Address,
                        Customer_Status_Code,
                        Status_Date,
                        Connect_Date,
                        Language_Code,
                        Disconnect_Date,
                        Customer_Type_Code,
                        Customer_Type_Description,
                        Old_Tran_Site_Id,
                        ld_Tran_Account_Number,
                        Home_Phone,
                        Business_Phone,
                        Other_Phone,
                        Privacy_Code,
                        Customer_Name,
                        Customer_Business_Name,
                        Address_Line_1,
                        Address_Line_2,
                        Address_Line_3,
                        Address_Line_4,
                        ADDR_ZIP_4,
                        ADDR_ZIP_5,
                        ADDR_CITY,
                        ADDR_STATE,
                        Dwelling_Type,
                        Dwelling_Type_Description,
                        Bill_Type_Code,
                        Bill_Type_Short_Desc,
                        Bill_Type_Long_Desc,
                        Service_Class,
                        Company_Number,
                        Division_Number,
                        Franchise_Number,
                        Franchise_Name,
                        House_Status,
                        Unserviceable_Address,
                        Date_Of_Birth,
                        Drivers_License_Number,
                        Social_Security_Nbr,
                        Pin_Number,
                        Customer_Comment,
                        Building,
                        DoNotAcceptCreditCards,
                        DoNotAcceptCheck,
                        Apartment,
                        OnlineOrderBlock,
                        OnlineOrderDelinquentBalance,
                        CHSI_Abuse_Flag,
                        VIP_Code,
                        Cust_Value_Segmentation,
                        Cox_Unique_ID,
                        Contract,
                        Tenure_Number_Of_Months,
                        NumberOfTru2WayActive};
                rowCustomerAccountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerAccountRow);
                return rowCustomerAccountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerAccountDataTable cln = ((CustomerAccountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerAccountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSite_Id = base.Columns["Site_Id"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnHouse_Number = base.Columns["House_Number"];
                this.columnHouse_Resident_Number = base.Columns["House_Resident_Number"];
                this.columnTitle = base.Columns["Title"];
                this.columnFirst_Name = base.Columns["First_Name"];
                this.columnMiddle_Initial = base.Columns["Middle_Initial"];
                this.columnLast_Name = base.Columns["Last_Name"];
                this.columnBill_To_Address = base.Columns["Bill_To_Address"];
                this.columnCustomer_Status_Code = base.Columns["Customer_Status_Code"];
                this.columnStatus_Date = base.Columns["Status_Date"];
                this.columnConnect_Date = base.Columns["Connect_Date"];
                this.columnLanguage_Code = base.Columns["Language_Code"];
                this.columnDisconnect_Date = base.Columns["Disconnect_Date"];
                this.columnCustomer_Type_Code = base.Columns["Customer_Type_Code"];
                this.columnCustomer_Type_Description = base.Columns["Customer_Type_Description"];
                this.columnOld_Tran_Site_Id = base.Columns["Old_Tran_Site_Id"];
                this.columnld_Tran_Account_Number = base.Columns["ld_Tran_Account_Number"];
                this.columnHome_Phone = base.Columns["Home_Phone"];
                this.columnBusiness_Phone = base.Columns["Business_Phone"];
                this.columnOther_Phone = base.Columns["Other_Phone"];
                this.columnPrivacy_Code = base.Columns["Privacy_Code"];
                this.columnCustomer_Name = base.Columns["Customer_Name"];
                this.columnCustomer_Business_Name = base.Columns["Customer_Business_Name"];
                this.columnAddress_Line_1 = base.Columns["Address_Line_1"];
                this.columnAddress_Line_2 = base.Columns["Address_Line_2"];
                this.columnAddress_Line_3 = base.Columns["Address_Line_3"];
                this.columnAddress_Line_4 = base.Columns["Address_Line_4"];
                this.columnADDR_ZIP_4 = base.Columns["ADDR_ZIP_4"];
                this.columnADDR_ZIP_5 = base.Columns["ADDR_ZIP_5"];
                this.columnADDR_CITY = base.Columns["ADDR_CITY"];
                this.columnADDR_STATE = base.Columns["ADDR_STATE"];
                this.columnDwelling_Type = base.Columns["Dwelling_Type"];
                this.columnDwelling_Type_Description = base.Columns["Dwelling_Type_Description"];
                this.columnBill_Type_Code = base.Columns["Bill_Type_Code"];
                this.columnBill_Type_Short_Desc = base.Columns["Bill_Type_Short_Desc"];
                this.columnBill_Type_Long_Desc = base.Columns["Bill_Type_Long_Desc"];
                this.columnService_Class = base.Columns["Service_Class"];
                this.columnCompany_Number = base.Columns["Company_Number"];
                this.columnDivision_Number = base.Columns["Division_Number"];
                this.columnFranchise_Number = base.Columns["Franchise_Number"];
                this.columnFranchise_Name = base.Columns["Franchise_Name"];
                this.columnHouse_Status = base.Columns["House_Status"];
                this.columnUnserviceable_Address = base.Columns["Unserviceable_Address"];
                this.columnDate_Of_Birth = base.Columns["Date_Of_Birth"];
                this.columnDrivers_License_Number = base.Columns["Drivers_License_Number"];
                this.columnSocial_Security_Nbr = base.Columns["Social_Security_Nbr"];
                this.columnPin_Number = base.Columns["Pin_Number"];
                this.columnCustomer_Comment = base.Columns["Customer_Comment"];
                this.columnBuilding = base.Columns["Building"];
                this.columnDoNotAcceptCreditCards = base.Columns["DoNotAcceptCreditCards"];
                this.columnDoNotAcceptCheck = base.Columns["DoNotAcceptCheck"];
                this.columnApartment = base.Columns["Apartment"];
                this.columnOnlineOrderBlock = base.Columns["OnlineOrderBlock"];
                this.columnOnlineOrderDelinquentBalance = base.Columns["OnlineOrderDelinquentBalance"];
                this.columnCHSI_Abuse_Flag = base.Columns["CHSI_Abuse_Flag"];
                this.columnVIP_Code = base.Columns["VIP_Code"];
                this.columnCust_Value_Segmentation = base.Columns["Cust_Value_Segmentation"];
                this.columnCox_Unique_ID = base.Columns["Cox_Unique_ID"];
                this.columnContract = base.Columns["Contract"];
                this.columnTenure_Number_Of_Months = base.Columns["Tenure_Number_Of_Months"];
                this.columnNumberOfTru2WayActive = base.Columns["NumberOfTru2WayActive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSite_Id = new global::System.Data.DataColumn("Site_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_Id);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnHouse_Number = new global::System.Data.DataColumn("House_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouse_Number);
                this.columnHouse_Resident_Number = new global::System.Data.DataColumn("House_Resident_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouse_Resident_Number);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnFirst_Name = new global::System.Data.DataColumn("First_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirst_Name);
                this.columnMiddle_Initial = new global::System.Data.DataColumn("Middle_Initial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddle_Initial);
                this.columnLast_Name = new global::System.Data.DataColumn("Last_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_Name);
                this.columnBill_To_Address = new global::System.Data.DataColumn("Bill_To_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_To_Address);
                this.columnCustomer_Status_Code = new global::System.Data.DataColumn("Customer_Status_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_Status_Code);
                this.columnStatus_Date = new global::System.Data.DataColumn("Status_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Date);
                this.columnConnect_Date = new global::System.Data.DataColumn("Connect_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnect_Date);
                this.columnLanguage_Code = new global::System.Data.DataColumn("Language_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLanguage_Code);
                this.columnDisconnect_Date = new global::System.Data.DataColumn("Disconnect_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisconnect_Date);
                this.columnCustomer_Type_Code = new global::System.Data.DataColumn("Customer_Type_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_Type_Code);
                this.columnCustomer_Type_Description = new global::System.Data.DataColumn("Customer_Type_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_Type_Description);
                this.columnOld_Tran_Site_Id = new global::System.Data.DataColumn("Old_Tran_Site_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOld_Tran_Site_Id);
                this.columnld_Tran_Account_Number = new global::System.Data.DataColumn("ld_Tran_Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnld_Tran_Account_Number);
                this.columnHome_Phone = new global::System.Data.DataColumn("Home_Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHome_Phone);
                this.columnBusiness_Phone = new global::System.Data.DataColumn("Business_Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusiness_Phone);
                this.columnOther_Phone = new global::System.Data.DataColumn("Other_Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther_Phone);
                this.columnPrivacy_Code = new global::System.Data.DataColumn("Privacy_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrivacy_Code);
                this.columnCustomer_Name = new global::System.Data.DataColumn("Customer_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_Name);
                this.columnCustomer_Business_Name = new global::System.Data.DataColumn("Customer_Business_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_Business_Name);
                this.columnAddress_Line_1 = new global::System.Data.DataColumn("Address_Line_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress_Line_1);
                this.columnAddress_Line_2 = new global::System.Data.DataColumn("Address_Line_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress_Line_2);
                this.columnAddress_Line_3 = new global::System.Data.DataColumn("Address_Line_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress_Line_3);
                this.columnAddress_Line_4 = new global::System.Data.DataColumn("Address_Line_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress_Line_4);
                this.columnADDR_ZIP_4 = new global::System.Data.DataColumn("ADDR_ZIP_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_ZIP_4);
                this.columnADDR_ZIP_5 = new global::System.Data.DataColumn("ADDR_ZIP_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_ZIP_5);
                this.columnADDR_CITY = new global::System.Data.DataColumn("ADDR_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_CITY);
                this.columnADDR_STATE = new global::System.Data.DataColumn("ADDR_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_STATE);
                this.columnDwelling_Type = new global::System.Data.DataColumn("Dwelling_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDwelling_Type);
                this.columnDwelling_Type_Description = new global::System.Data.DataColumn("Dwelling_Type_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDwelling_Type_Description);
                this.columnBill_Type_Code = new global::System.Data.DataColumn("Bill_Type_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Type_Code);
                this.columnBill_Type_Short_Desc = new global::System.Data.DataColumn("Bill_Type_Short_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Type_Short_Desc);
                this.columnBill_Type_Long_Desc = new global::System.Data.DataColumn("Bill_Type_Long_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Type_Long_Desc);
                this.columnService_Class = new global::System.Data.DataColumn("Service_Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Class);
                this.columnCompany_Number = new global::System.Data.DataColumn("Company_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Number);
                this.columnDivision_Number = new global::System.Data.DataColumn("Division_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivision_Number);
                this.columnFranchise_Number = new global::System.Data.DataColumn("Franchise_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFranchise_Number);
                this.columnFranchise_Name = new global::System.Data.DataColumn("Franchise_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFranchise_Name);
                this.columnHouse_Status = new global::System.Data.DataColumn("House_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouse_Status);
                this.columnUnserviceable_Address = new global::System.Data.DataColumn("Unserviceable_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnserviceable_Address);
                this.columnDate_Of_Birth = new global::System.Data.DataColumn("Date_Of_Birth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_Of_Birth);
                this.columnDrivers_License_Number = new global::System.Data.DataColumn("Drivers_License_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrivers_License_Number);
                this.columnSocial_Security_Nbr = new global::System.Data.DataColumn("Social_Security_Nbr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocial_Security_Nbr);
                this.columnPin_Number = new global::System.Data.DataColumn("Pin_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPin_Number);
                this.columnCustomer_Comment = new global::System.Data.DataColumn("Customer_Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_Comment);
                this.columnBuilding = new global::System.Data.DataColumn("Building", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuilding);
                this.columnDoNotAcceptCreditCards = new global::System.Data.DataColumn("DoNotAcceptCreditCards", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoNotAcceptCreditCards);
                this.columnDoNotAcceptCheck = new global::System.Data.DataColumn("DoNotAcceptCheck", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoNotAcceptCheck);
                this.columnApartment = new global::System.Data.DataColumn("Apartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApartment);
                this.columnOnlineOrderBlock = new global::System.Data.DataColumn("OnlineOrderBlock", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineOrderBlock);
                this.columnOnlineOrderDelinquentBalance = new global::System.Data.DataColumn("OnlineOrderDelinquentBalance", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineOrderDelinquentBalance);
                this.columnCHSI_Abuse_Flag = new global::System.Data.DataColumn("CHSI_Abuse_Flag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHSI_Abuse_Flag);
                this.columnVIP_Code = new global::System.Data.DataColumn("VIP_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIP_Code);
                this.columnCust_Value_Segmentation = new global::System.Data.DataColumn("Cust_Value_Segmentation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCust_Value_Segmentation);
                this.columnCox_Unique_ID = new global::System.Data.DataColumn("Cox_Unique_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCox_Unique_ID);
                this.columnContract = new global::System.Data.DataColumn("Contract", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract);
                this.columnTenure_Number_Of_Months = new global::System.Data.DataColumn("Tenure_Number_Of_Months", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenure_Number_Of_Months);
                this.columnNumberOfTru2WayActive = new global::System.Data.DataColumn("NumberOfTru2WayActive", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfTru2WayActive);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountRow NewCustomerAccountRow() {
                return ((CustomerAccountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerAccountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerAccountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerAccountRowChanged != null)) {
                    this.CustomerAccountRowChanged(this, new CustomerAccountRowChangeEvent(((CustomerAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerAccountRowChanging != null)) {
                    this.CustomerAccountRowChanging(this, new CustomerAccountRowChangeEvent(((CustomerAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerAccountRowDeleted != null)) {
                    this.CustomerAccountRowDeleted(this, new CustomerAccountRowChangeEvent(((CustomerAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerAccountRowDeleting != null)) {
                    this.CustomerAccountRowDeleting(this, new CustomerAccountRowChangeEvent(((CustomerAccountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerAccountRow(CustomerAccountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerAccountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerCampaignDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnService_Code;
            
            private global::System.Data.DataColumn columnService_Category_Code;
            
            private global::System.Data.DataColumn columnService_Occurrence;
            
            private global::System.Data.DataColumn columnPromotion_Code;
            
            private global::System.Data.DataColumn columnPromotion_Description;
            
            private global::System.Data.DataColumn columnService_Status;
            
            private global::System.Data.DataColumn columnDiscount_Active;
            
            private global::System.Data.DataColumn columnDiscount_Begin_Date;
            
            private global::System.Data.DataColumn columnDiscount_End_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerCampaignDataTable() {
                this.TableName = "CustomerCampaign";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerCampaignDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerCampaignDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_CodeColumn {
                get {
                    return this.columnService_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_Category_CodeColumn {
                get {
                    return this.columnService_Category_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_OccurrenceColumn {
                get {
                    return this.columnService_Occurrence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Promotion_CodeColumn {
                get {
                    return this.columnPromotion_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Promotion_DescriptionColumn {
                get {
                    return this.columnPromotion_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_StatusColumn {
                get {
                    return this.columnService_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Discount_ActiveColumn {
                get {
                    return this.columnDiscount_Active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Discount_Begin_DateColumn {
                get {
                    return this.columnDiscount_Begin_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Discount_End_DateColumn {
                get {
                    return this.columnDiscount_End_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerCampaignRow this[int index] {
                get {
                    return ((CustomerCampaignRow)(this.Rows[index]));
                }
            }
            
            public event CustomerCampaignRowChangeEventHandler CustomerCampaignRowChanging;
            
            public event CustomerCampaignRowChangeEventHandler CustomerCampaignRowChanged;
            
            public event CustomerCampaignRowChangeEventHandler CustomerCampaignRowDeleting;
            
            public event CustomerCampaignRowChangeEventHandler CustomerCampaignRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerCampaignRow(CustomerCampaignRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerCampaignRow AddCustomerCampaignRow(string Service_Code, string Service_Category_Code, int Service_Occurrence, string Promotion_Code, string Promotion_Description, string Service_Status, string Discount_Active, string Discount_Begin_Date, string Discount_End_Date) {
                CustomerCampaignRow rowCustomerCampaignRow = ((CustomerCampaignRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Service_Code,
                        Service_Category_Code,
                        Service_Occurrence,
                        Promotion_Code,
                        Promotion_Description,
                        Service_Status,
                        Discount_Active,
                        Discount_Begin_Date,
                        Discount_End_Date};
                rowCustomerCampaignRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerCampaignRow);
                return rowCustomerCampaignRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerCampaignDataTable cln = ((CustomerCampaignDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerCampaignDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnService_Code = base.Columns["Service_Code"];
                this.columnService_Category_Code = base.Columns["Service_Category_Code"];
                this.columnService_Occurrence = base.Columns["Service_Occurrence"];
                this.columnPromotion_Code = base.Columns["Promotion_Code"];
                this.columnPromotion_Description = base.Columns["Promotion_Description"];
                this.columnService_Status = base.Columns["Service_Status"];
                this.columnDiscount_Active = base.Columns["Discount_Active"];
                this.columnDiscount_Begin_Date = base.Columns["Discount_Begin_Date"];
                this.columnDiscount_End_Date = base.Columns["Discount_End_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnService_Code = new global::System.Data.DataColumn("Service_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Code);
                this.columnService_Category_Code = new global::System.Data.DataColumn("Service_Category_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Category_Code);
                this.columnService_Occurrence = new global::System.Data.DataColumn("Service_Occurrence", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Occurrence);
                this.columnPromotion_Code = new global::System.Data.DataColumn("Promotion_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromotion_Code);
                this.columnPromotion_Description = new global::System.Data.DataColumn("Promotion_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromotion_Description);
                this.columnService_Status = new global::System.Data.DataColumn("Service_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Status);
                this.columnDiscount_Active = new global::System.Data.DataColumn("Discount_Active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount_Active);
                this.columnDiscount_Begin_Date = new global::System.Data.DataColumn("Discount_Begin_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount_Begin_Date);
                this.columnDiscount_End_Date = new global::System.Data.DataColumn("Discount_End_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount_End_Date);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerCampaignRow NewCustomerCampaignRow() {
                return ((CustomerCampaignRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerCampaignRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerCampaignRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerCampaignRowChanged != null)) {
                    this.CustomerCampaignRowChanged(this, new CustomerCampaignRowChangeEvent(((CustomerCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerCampaignRowChanging != null)) {
                    this.CustomerCampaignRowChanging(this, new CustomerCampaignRowChangeEvent(((CustomerCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerCampaignRowDeleted != null)) {
                    this.CustomerCampaignRowDeleted(this, new CustomerCampaignRowChangeEvent(((CustomerCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerCampaignRowDeleting != null)) {
                    this.CustomerCampaignRowDeleting(this, new CustomerCampaignRowChangeEvent(((CustomerCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerCampaignRow(CustomerCampaignRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerCampaignDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerContractDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSite_Id;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnContract_Id;
            
            private global::System.Data.DataColumn columnContract_Desc;
            
            private global::System.Data.DataColumn columnContract_End_Date;
            
            private global::System.Data.DataColumn columnContract_START_Date;
            
            private global::System.Data.DataColumn columnEarly_Term_Assesment_Amt;
            
            private global::System.Data.DataColumn columnService_Category_Code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerContractDataTable() {
                this.TableName = "CustomerContract";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerContractDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerContractDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Site_IdColumn {
                get {
                    return this.columnSite_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contract_IdColumn {
                get {
                    return this.columnContract_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contract_DescColumn {
                get {
                    return this.columnContract_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contract_End_DateColumn {
                get {
                    return this.columnContract_End_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contract_START_DateColumn {
                get {
                    return this.columnContract_START_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Early_Term_Assesment_AmtColumn {
                get {
                    return this.columnEarly_Term_Assesment_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_Category_CodeColumn {
                get {
                    return this.columnService_Category_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerContractRow this[int index] {
                get {
                    return ((CustomerContractRow)(this.Rows[index]));
                }
            }
            
            public event CustomerContractRowChangeEventHandler CustomerContractRowChanging;
            
            public event CustomerContractRowChangeEventHandler CustomerContractRowChanged;
            
            public event CustomerContractRowChangeEventHandler CustomerContractRowDeleting;
            
            public event CustomerContractRowChangeEventHandler CustomerContractRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerContractRow(CustomerContractRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerContractRow AddCustomerContractRow(int Site_Id, string Account_Number, string Contract_Id, string Contract_Desc, string Contract_End_Date, string Contract_START_Date, double Early_Term_Assesment_Amt, string Service_Category_Code) {
                CustomerContractRow rowCustomerContractRow = ((CustomerContractRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Site_Id,
                        Account_Number,
                        Contract_Id,
                        Contract_Desc,
                        Contract_End_Date,
                        Contract_START_Date,
                        Early_Term_Assesment_Amt,
                        Service_Category_Code};
                rowCustomerContractRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerContractRow);
                return rowCustomerContractRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerContractDataTable cln = ((CustomerContractDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerContractDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSite_Id = base.Columns["Site_Id"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnContract_Id = base.Columns["Contract_Id"];
                this.columnContract_Desc = base.Columns["Contract_Desc"];
                this.columnContract_End_Date = base.Columns["Contract_End_Date"];
                this.columnContract_START_Date = base.Columns["Contract_START_Date"];
                this.columnEarly_Term_Assesment_Amt = base.Columns["Early_Term_Assesment_Amt"];
                this.columnService_Category_Code = base.Columns["Service_Category_Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSite_Id = new global::System.Data.DataColumn("Site_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_Id);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnContract_Id = new global::System.Data.DataColumn("Contract_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Id);
                this.columnContract_Desc = new global::System.Data.DataColumn("Contract_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Desc);
                this.columnContract_End_Date = new global::System.Data.DataColumn("Contract_End_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_End_Date);
                this.columnContract_START_Date = new global::System.Data.DataColumn("Contract_START_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_START_Date);
                this.columnEarly_Term_Assesment_Amt = new global::System.Data.DataColumn("Early_Term_Assesment_Amt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarly_Term_Assesment_Amt);
                this.columnService_Category_Code = new global::System.Data.DataColumn("Service_Category_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Category_Code);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerContractRow NewCustomerContractRow() {
                return ((CustomerContractRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerContractRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerContractRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerContractRowChanged != null)) {
                    this.CustomerContractRowChanged(this, new CustomerContractRowChangeEvent(((CustomerContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerContractRowChanging != null)) {
                    this.CustomerContractRowChanging(this, new CustomerContractRowChangeEvent(((CustomerContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerContractRowDeleted != null)) {
                    this.CustomerContractRowDeleted(this, new CustomerContractRowChangeEvent(((CustomerContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerContractRowDeleting != null)) {
                    this.CustomerContractRowDeleting(this, new CustomerContractRowChangeEvent(((CustomerContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerContractRow(CustomerContractRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerContractDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerPhoneDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSite_Id;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnPhone_Type;
            
            private global::System.Data.DataColumn columnPhone_Number;
            
            private global::System.Data.DataColumn columnArea_Code;
            
            private global::System.Data.DataColumn columnExchange_Number;
            
            private global::System.Data.DataColumn columnTelephone_Number;
            
            private global::System.Data.DataColumn columnCustomer_TN_Sequence;
            
            private global::System.Data.DataColumn columnCustomer_TN_Type_Id;
            
            private global::System.Data.DataColumn columnDNC_Flag;
            
            private global::System.Data.DataColumn columnWireless_Flag;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPhoneDataTable() {
                this.TableName = "CustomerPhone";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPhoneDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerPhoneDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Site_IdColumn {
                get {
                    return this.columnSite_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone_TypeColumn {
                get {
                    return this.columnPhone_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone_NumberColumn {
                get {
                    return this.columnPhone_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Area_CodeColumn {
                get {
                    return this.columnArea_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Exchange_NumberColumn {
                get {
                    return this.columnExchange_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Telephone_NumberColumn {
                get {
                    return this.columnTelephone_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_TN_SequenceColumn {
                get {
                    return this.columnCustomer_TN_Sequence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_TN_Type_IdColumn {
                get {
                    return this.columnCustomer_TN_Type_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNC_FlagColumn {
                get {
                    return this.columnDNC_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Wireless_FlagColumn {
                get {
                    return this.columnWireless_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPhoneRow this[int index] {
                get {
                    return ((CustomerPhoneRow)(this.Rows[index]));
                }
            }
            
            public event CustomerPhoneRowChangeEventHandler CustomerPhoneRowChanging;
            
            public event CustomerPhoneRowChangeEventHandler CustomerPhoneRowChanged;
            
            public event CustomerPhoneRowChangeEventHandler CustomerPhoneRowDeleting;
            
            public event CustomerPhoneRowChangeEventHandler CustomerPhoneRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerPhoneRow(CustomerPhoneRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPhoneRow AddCustomerPhoneRow(int Site_Id, string Account_Number, string Phone_Type, string Phone_Number, string Area_Code, string Exchange_Number, string Telephone_Number, int Customer_TN_Sequence, string Customer_TN_Type_Id, bool DNC_Flag, bool Wireless_Flag) {
                CustomerPhoneRow rowCustomerPhoneRow = ((CustomerPhoneRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Site_Id,
                        Account_Number,
                        Phone_Type,
                        Phone_Number,
                        Area_Code,
                        Exchange_Number,
                        Telephone_Number,
                        Customer_TN_Sequence,
                        Customer_TN_Type_Id,
                        DNC_Flag,
                        Wireless_Flag};
                rowCustomerPhoneRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerPhoneRow);
                return rowCustomerPhoneRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerPhoneDataTable cln = ((CustomerPhoneDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerPhoneDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSite_Id = base.Columns["Site_Id"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnPhone_Type = base.Columns["Phone_Type"];
                this.columnPhone_Number = base.Columns["Phone_Number"];
                this.columnArea_Code = base.Columns["Area_Code"];
                this.columnExchange_Number = base.Columns["Exchange_Number"];
                this.columnTelephone_Number = base.Columns["Telephone_Number"];
                this.columnCustomer_TN_Sequence = base.Columns["Customer_TN_Sequence"];
                this.columnCustomer_TN_Type_Id = base.Columns["Customer_TN_Type_Id"];
                this.columnDNC_Flag = base.Columns["DNC_Flag"];
                this.columnWireless_Flag = base.Columns["Wireless_Flag"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSite_Id = new global::System.Data.DataColumn("Site_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_Id);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnPhone_Type = new global::System.Data.DataColumn("Phone_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone_Type);
                this.columnPhone_Number = new global::System.Data.DataColumn("Phone_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone_Number);
                this.columnArea_Code = new global::System.Data.DataColumn("Area_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea_Code);
                this.columnExchange_Number = new global::System.Data.DataColumn("Exchange_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchange_Number);
                this.columnTelephone_Number = new global::System.Data.DataColumn("Telephone_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone_Number);
                this.columnCustomer_TN_Sequence = new global::System.Data.DataColumn("Customer_TN_Sequence", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_TN_Sequence);
                this.columnCustomer_TN_Type_Id = new global::System.Data.DataColumn("Customer_TN_Type_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_TN_Type_Id);
                this.columnDNC_Flag = new global::System.Data.DataColumn("DNC_Flag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNC_Flag);
                this.columnWireless_Flag = new global::System.Data.DataColumn("Wireless_Flag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWireless_Flag);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPhoneRow NewCustomerPhoneRow() {
                return ((CustomerPhoneRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerPhoneRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerPhoneRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerPhoneRowChanged != null)) {
                    this.CustomerPhoneRowChanged(this, new CustomerPhoneRowChangeEvent(((CustomerPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerPhoneRowChanging != null)) {
                    this.CustomerPhoneRowChanging(this, new CustomerPhoneRowChangeEvent(((CustomerPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerPhoneRowDeleted != null)) {
                    this.CustomerPhoneRowDeleted(this, new CustomerPhoneRowChangeEvent(((CustomerPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerPhoneRowDeleting != null)) {
                    this.CustomerPhoneRowDeleting(this, new CustomerPhoneRowChangeEvent(((CustomerPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerPhoneRow(CustomerPhoneRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerPhoneDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerPrivacyDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSite_Id;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnNew_Privacy_Code;
            
            private global::System.Data.DataColumn columnPrivacy_Code_Description;
            
            private global::System.Data.DataColumn columnEffective_Date;
            
            private global::System.Data.DataColumn columnExpiration_Date;
            
            private global::System.Data.DataColumn columnCancel_Flag;
            
            private global::System.Data.DataColumn columnContact_Type_Code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPrivacyDataTable() {
                this.TableName = "CustomerPrivacy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPrivacyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerPrivacyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Site_IdColumn {
                get {
                    return this.columnSite_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn New_Privacy_CodeColumn {
                get {
                    return this.columnNew_Privacy_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Privacy_Code_DescriptionColumn {
                get {
                    return this.columnPrivacy_Code_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Effective_DateColumn {
                get {
                    return this.columnEffective_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expiration_DateColumn {
                get {
                    return this.columnExpiration_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cancel_FlagColumn {
                get {
                    return this.columnCancel_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contact_Type_CodeColumn {
                get {
                    return this.columnContact_Type_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPrivacyRow this[int index] {
                get {
                    return ((CustomerPrivacyRow)(this.Rows[index]));
                }
            }
            
            public event CustomerPrivacyRowChangeEventHandler CustomerPrivacyRowChanging;
            
            public event CustomerPrivacyRowChangeEventHandler CustomerPrivacyRowChanged;
            
            public event CustomerPrivacyRowChangeEventHandler CustomerPrivacyRowDeleting;
            
            public event CustomerPrivacyRowChangeEventHandler CustomerPrivacyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerPrivacyRow(CustomerPrivacyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPrivacyRow AddCustomerPrivacyRow(string Site_Id, string Account_Number, string New_Privacy_Code, string Privacy_Code_Description, string Effective_Date, string Expiration_Date, string Cancel_Flag, string Contact_Type_Code) {
                CustomerPrivacyRow rowCustomerPrivacyRow = ((CustomerPrivacyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Site_Id,
                        Account_Number,
                        New_Privacy_Code,
                        Privacy_Code_Description,
                        Effective_Date,
                        Expiration_Date,
                        Cancel_Flag,
                        Contact_Type_Code};
                rowCustomerPrivacyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerPrivacyRow);
                return rowCustomerPrivacyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerPrivacyDataTable cln = ((CustomerPrivacyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerPrivacyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSite_Id = base.Columns["Site_Id"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnNew_Privacy_Code = base.Columns["New_Privacy_Code"];
                this.columnPrivacy_Code_Description = base.Columns["Privacy_Code_Description"];
                this.columnEffective_Date = base.Columns["Effective_Date"];
                this.columnExpiration_Date = base.Columns["Expiration_Date"];
                this.columnCancel_Flag = base.Columns["Cancel_Flag"];
                this.columnContact_Type_Code = base.Columns["Contact_Type_Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSite_Id = new global::System.Data.DataColumn("Site_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_Id);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnNew_Privacy_Code = new global::System.Data.DataColumn("New_Privacy_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNew_Privacy_Code);
                this.columnPrivacy_Code_Description = new global::System.Data.DataColumn("Privacy_Code_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrivacy_Code_Description);
                this.columnEffective_Date = new global::System.Data.DataColumn("Effective_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffective_Date);
                this.columnExpiration_Date = new global::System.Data.DataColumn("Expiration_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpiration_Date);
                this.columnCancel_Flag = new global::System.Data.DataColumn("Cancel_Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancel_Flag);
                this.columnContact_Type_Code = new global::System.Data.DataColumn("Contact_Type_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact_Type_Code);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPrivacyRow NewCustomerPrivacyRow() {
                return ((CustomerPrivacyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerPrivacyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerPrivacyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerPrivacyRowChanged != null)) {
                    this.CustomerPrivacyRowChanged(this, new CustomerPrivacyRowChangeEvent(((CustomerPrivacyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerPrivacyRowChanging != null)) {
                    this.CustomerPrivacyRowChanging(this, new CustomerPrivacyRowChangeEvent(((CustomerPrivacyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerPrivacyRowDeleted != null)) {
                    this.CustomerPrivacyRowDeleted(this, new CustomerPrivacyRowChangeEvent(((CustomerPrivacyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerPrivacyRowDeleting != null)) {
                    this.CustomerPrivacyRowDeleting(this, new CustomerPrivacyRowChangeEvent(((CustomerPrivacyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerPrivacyRow(CustomerPrivacyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerPrivacyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerMonthlyServiceAmountDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSite_Id;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnStatement_Code;
            
            private global::System.Data.DataColumn columnStatementCD_Monthly_SVC_Amount;
            
            private global::System.Data.DataColumn columnTotal_Monthly_SVC_Amount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerMonthlyServiceAmountDataTable() {
                this.TableName = "CustomerMonthlyServiceAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerMonthlyServiceAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerMonthlyServiceAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Site_IdColumn {
                get {
                    return this.columnSite_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Statement_CodeColumn {
                get {
                    return this.columnStatement_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatementCD_Monthly_SVC_AmountColumn {
                get {
                    return this.columnStatementCD_Monthly_SVC_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_Monthly_SVC_AmountColumn {
                get {
                    return this.columnTotal_Monthly_SVC_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerMonthlyServiceAmountRow this[int index] {
                get {
                    return ((CustomerMonthlyServiceAmountRow)(this.Rows[index]));
                }
            }
            
            public event CustomerMonthlyServiceAmountRowChangeEventHandler CustomerMonthlyServiceAmountRowChanging;
            
            public event CustomerMonthlyServiceAmountRowChangeEventHandler CustomerMonthlyServiceAmountRowChanged;
            
            public event CustomerMonthlyServiceAmountRowChangeEventHandler CustomerMonthlyServiceAmountRowDeleting;
            
            public event CustomerMonthlyServiceAmountRowChangeEventHandler CustomerMonthlyServiceAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerMonthlyServiceAmountRow(CustomerMonthlyServiceAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerMonthlyServiceAmountRow AddCustomerMonthlyServiceAmountRow(int Site_Id, string Account_Number, string Statement_Code, double StatementCD_Monthly_SVC_Amount, double Total_Monthly_SVC_Amount) {
                CustomerMonthlyServiceAmountRow rowCustomerMonthlyServiceAmountRow = ((CustomerMonthlyServiceAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Site_Id,
                        Account_Number,
                        Statement_Code,
                        StatementCD_Monthly_SVC_Amount,
                        Total_Monthly_SVC_Amount};
                rowCustomerMonthlyServiceAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerMonthlyServiceAmountRow);
                return rowCustomerMonthlyServiceAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerMonthlyServiceAmountDataTable cln = ((CustomerMonthlyServiceAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerMonthlyServiceAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSite_Id = base.Columns["Site_Id"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnStatement_Code = base.Columns["Statement_Code"];
                this.columnStatementCD_Monthly_SVC_Amount = base.Columns["StatementCD_Monthly_SVC_Amount"];
                this.columnTotal_Monthly_SVC_Amount = base.Columns["Total_Monthly_SVC_Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSite_Id = new global::System.Data.DataColumn("Site_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_Id);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnStatement_Code = new global::System.Data.DataColumn("Statement_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatement_Code);
                this.columnStatementCD_Monthly_SVC_Amount = new global::System.Data.DataColumn("StatementCD_Monthly_SVC_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementCD_Monthly_SVC_Amount);
                this.columnTotal_Monthly_SVC_Amount = new global::System.Data.DataColumn("Total_Monthly_SVC_Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Monthly_SVC_Amount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerMonthlyServiceAmountRow NewCustomerMonthlyServiceAmountRow() {
                return ((CustomerMonthlyServiceAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerMonthlyServiceAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerMonthlyServiceAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerMonthlyServiceAmountRowChanged != null)) {
                    this.CustomerMonthlyServiceAmountRowChanged(this, new CustomerMonthlyServiceAmountRowChangeEvent(((CustomerMonthlyServiceAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerMonthlyServiceAmountRowChanging != null)) {
                    this.CustomerMonthlyServiceAmountRowChanging(this, new CustomerMonthlyServiceAmountRowChangeEvent(((CustomerMonthlyServiceAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerMonthlyServiceAmountRowDeleted != null)) {
                    this.CustomerMonthlyServiceAmountRowDeleted(this, new CustomerMonthlyServiceAmountRowChangeEvent(((CustomerMonthlyServiceAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerMonthlyServiceAmountRowDeleting != null)) {
                    this.CustomerMonthlyServiceAmountRowDeleting(this, new CustomerMonthlyServiceAmountRowChangeEvent(((CustomerMonthlyServiceAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerMonthlyServiceAmountRow(CustomerMonthlyServiceAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerMonthlyServiceAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerEmailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSite_Id;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnSequence_Number;
            
            private global::System.Data.DataColumn columnEmail_Address;
            
            private global::System.Data.DataColumn columnEmail_Type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerEmailDataTable() {
                this.TableName = "CustomerEmail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerEmailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerEmailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Site_IdColumn {
                get {
                    return this.columnSite_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sequence_NumberColumn {
                get {
                    return this.columnSequence_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Email_AddressColumn {
                get {
                    return this.columnEmail_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Email_TypeColumn {
                get {
                    return this.columnEmail_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerEmailRow this[int index] {
                get {
                    return ((CustomerEmailRow)(this.Rows[index]));
                }
            }
            
            public event CustomerEmailRowChangeEventHandler CustomerEmailRowChanging;
            
            public event CustomerEmailRowChangeEventHandler CustomerEmailRowChanged;
            
            public event CustomerEmailRowChangeEventHandler CustomerEmailRowDeleting;
            
            public event CustomerEmailRowChangeEventHandler CustomerEmailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerEmailRow(CustomerEmailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerEmailRow AddCustomerEmailRow(int Site_Id, string Account_Number, int Sequence_Number, string Email_Address, string Email_Type) {
                CustomerEmailRow rowCustomerEmailRow = ((CustomerEmailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Site_Id,
                        Account_Number,
                        Sequence_Number,
                        Email_Address,
                        Email_Type};
                rowCustomerEmailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerEmailRow);
                return rowCustomerEmailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerEmailDataTable cln = ((CustomerEmailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerEmailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSite_Id = base.Columns["Site_Id"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnSequence_Number = base.Columns["Sequence_Number"];
                this.columnEmail_Address = base.Columns["Email_Address"];
                this.columnEmail_Type = base.Columns["Email_Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSite_Id = new global::System.Data.DataColumn("Site_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_Id);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnSequence_Number = new global::System.Data.DataColumn("Sequence_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequence_Number);
                this.columnEmail_Address = new global::System.Data.DataColumn("Email_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail_Address);
                this.columnEmail_Type = new global::System.Data.DataColumn("Email_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail_Type);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerEmailRow NewCustomerEmailRow() {
                return ((CustomerEmailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerEmailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerEmailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerEmailRowChanged != null)) {
                    this.CustomerEmailRowChanged(this, new CustomerEmailRowChangeEvent(((CustomerEmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerEmailRowChanging != null)) {
                    this.CustomerEmailRowChanging(this, new CustomerEmailRowChangeEvent(((CustomerEmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerEmailRowDeleted != null)) {
                    this.CustomerEmailRowDeleted(this, new CustomerEmailRowChangeEvent(((CustomerEmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerEmailRowDeleting != null)) {
                    this.CustomerEmailRowDeleting(this, new CustomerEmailRowChangeEvent(((CustomerEmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerEmailRow(CustomerEmailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerEmailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerServicesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnService_Category_Code;
            
            private global::System.Data.DataColumn columnServiceStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServicesDataTable() {
                this.TableName = "CustomerServices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerServicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_Category_CodeColumn {
                get {
                    return this.columnService_Category_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceStatusColumn {
                get {
                    return this.columnServiceStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServicesRow this[int index] {
                get {
                    return ((CustomerServicesRow)(this.Rows[index]));
                }
            }
            
            public event CustomerServicesRowChangeEventHandler CustomerServicesRowChanging;
            
            public event CustomerServicesRowChangeEventHandler CustomerServicesRowChanged;
            
            public event CustomerServicesRowChangeEventHandler CustomerServicesRowDeleting;
            
            public event CustomerServicesRowChangeEventHandler CustomerServicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerServicesRow(CustomerServicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServicesRow AddCustomerServicesRow(string Service_Category_Code, string ServiceStatus) {
                CustomerServicesRow rowCustomerServicesRow = ((CustomerServicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Service_Category_Code,
                        ServiceStatus};
                rowCustomerServicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerServicesRow);
                return rowCustomerServicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerServicesDataTable cln = ((CustomerServicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerServicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnService_Category_Code = base.Columns["Service_Category_Code"];
                this.columnServiceStatus = base.Columns["ServiceStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnService_Category_Code = new global::System.Data.DataColumn("Service_Category_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Category_Code);
                this.columnServiceStatus = new global::System.Data.DataColumn("ServiceStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceStatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServicesRow NewCustomerServicesRow() {
                return ((CustomerServicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerServicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerServicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerServicesRowChanged != null)) {
                    this.CustomerServicesRowChanged(this, new CustomerServicesRowChangeEvent(((CustomerServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerServicesRowChanging != null)) {
                    this.CustomerServicesRowChanging(this, new CustomerServicesRowChangeEvent(((CustomerServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerServicesRowDeleted != null)) {
                    this.CustomerServicesRowDeleted(this, new CustomerServicesRowChangeEvent(((CustomerServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerServicesRowDeleting != null)) {
                    this.CustomerServicesRowDeleting(this, new CustomerServicesRowChangeEvent(((CustomerServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerServicesRow(CustomerServicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerServicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AccountMatchesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSite_ID;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnCustomer_TN_Flag;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountMatchesDataTable() {
                this.TableName = "AccountMatches";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AccountMatchesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AccountMatchesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Site_IDColumn {
                get {
                    return this.columnSite_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer_TN_FlagColumn {
                get {
                    return this.columnCustomer_TN_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountMatchesRow this[int index] {
                get {
                    return ((AccountMatchesRow)(this.Rows[index]));
                }
            }
            
            public event AccountMatchesRowChangeEventHandler AccountMatchesRowChanging;
            
            public event AccountMatchesRowChangeEventHandler AccountMatchesRowChanged;
            
            public event AccountMatchesRowChangeEventHandler AccountMatchesRowDeleting;
            
            public event AccountMatchesRowChangeEventHandler AccountMatchesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAccountMatchesRow(AccountMatchesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountMatchesRow AddAccountMatchesRow(int Site_ID, string Account_Number, string Customer_TN_Flag) {
                AccountMatchesRow rowAccountMatchesRow = ((AccountMatchesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Site_ID,
                        Account_Number,
                        Customer_TN_Flag};
                rowAccountMatchesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAccountMatchesRow);
                return rowAccountMatchesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountMatchesRow FindBySite_IDAccount_NumberCustomer_TN_Flag(int Site_ID, string Account_Number, string Customer_TN_Flag) {
                return ((AccountMatchesRow)(this.Rows.Find(new object[] {
                            Site_ID,
                            Account_Number,
                            Customer_TN_Flag})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AccountMatchesDataTable cln = ((AccountMatchesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AccountMatchesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSite_ID = base.Columns["Site_ID"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnCustomer_TN_Flag = base.Columns["Customer_TN_Flag"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSite_ID = new global::System.Data.DataColumn("Site_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_ID);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnCustomer_TN_Flag = new global::System.Data.DataColumn("Customer_TN_Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer_TN_Flag);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("AccountMatchesKey1", new global::System.Data.DataColumn[] {
                                this.columnSite_ID,
                                this.columnAccount_Number,
                                this.columnCustomer_TN_Flag}, true));
                this.columnSite_ID.AllowDBNull = false;
                this.columnAccount_Number.AllowDBNull = false;
                this.columnCustomer_TN_Flag.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountMatchesRow NewAccountMatchesRow() {
                return ((AccountMatchesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AccountMatchesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AccountMatchesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccountMatchesRowChanged != null)) {
                    this.AccountMatchesRowChanged(this, new AccountMatchesRowChangeEvent(((AccountMatchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccountMatchesRowChanging != null)) {
                    this.AccountMatchesRowChanging(this, new AccountMatchesRowChangeEvent(((AccountMatchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccountMatchesRowDeleted != null)) {
                    this.AccountMatchesRowDeleted(this, new AccountMatchesRowChangeEvent(((AccountMatchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccountMatchesRowDeleting != null)) {
                    this.AccountMatchesRowDeleting(this, new AccountMatchesRowChangeEvent(((AccountMatchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAccountMatchesRow(AccountMatchesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AccountMatchesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerPriceLockInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSERVICE_CODE;
            
            private global::System.Data.DataColumn columnSERVICE_OCCURRENCE;
            
            private global::System.Data.DataColumn columnPRICE_PROTECTION_STATUS;
            
            private global::System.Data.DataColumn columnPRICE_PROTECTION_ID;
            
            private global::System.Data.DataColumn columnPRICE_PROTECTED_RATE;
            
            private global::System.Data.DataColumn columnACTIVATION_DATE;
            
            private global::System.Data.DataColumn columnPRICE_PROTECT_START_DATE;
            
            private global::System.Data.DataColumn columnPRICE_PROTECTION_END_DATE;
            
            private global::System.Data.DataColumn columnPRICE_PROTECT_DESC;
            
            private global::System.Data.DataColumn columnTERMS_AND_CONDITIONS_ID;
            
            private global::System.Data.DataColumn columnACTIVATION_TIME;
            
            private global::System.Data.DataColumn columnSERVICE_CATEGORY_CODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPriceLockInfoDataTable() {
                this.TableName = "CustomerPriceLockInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPriceLockInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerPriceLockInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICE_CODEColumn {
                get {
                    return this.columnSERVICE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICE_OCCURRENCEColumn {
                get {
                    return this.columnSERVICE_OCCURRENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICE_PROTECTION_STATUSColumn {
                get {
                    return this.columnPRICE_PROTECTION_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICE_PROTECTION_IDColumn {
                get {
                    return this.columnPRICE_PROTECTION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICE_PROTECTED_RATEColumn {
                get {
                    return this.columnPRICE_PROTECTED_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTIVATION_DATEColumn {
                get {
                    return this.columnACTIVATION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICE_PROTECT_START_DATEColumn {
                get {
                    return this.columnPRICE_PROTECT_START_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICE_PROTECTION_END_DATEColumn {
                get {
                    return this.columnPRICE_PROTECTION_END_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICE_PROTECT_DESCColumn {
                get {
                    return this.columnPRICE_PROTECT_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMS_AND_CONDITIONS_IDColumn {
                get {
                    return this.columnTERMS_AND_CONDITIONS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTIVATION_TIMEColumn {
                get {
                    return this.columnACTIVATION_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICE_CATEGORY_CODEColumn {
                get {
                    return this.columnSERVICE_CATEGORY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPriceLockInfoRow this[int index] {
                get {
                    return ((CustomerPriceLockInfoRow)(this.Rows[index]));
                }
            }
            
            public event CustomerPriceLockInfoRowChangeEventHandler CustomerPriceLockInfoRowChanging;
            
            public event CustomerPriceLockInfoRowChangeEventHandler CustomerPriceLockInfoRowChanged;
            
            public event CustomerPriceLockInfoRowChangeEventHandler CustomerPriceLockInfoRowDeleting;
            
            public event CustomerPriceLockInfoRowChangeEventHandler CustomerPriceLockInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerPriceLockInfoRow(CustomerPriceLockInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPriceLockInfoRow AddCustomerPriceLockInfoRow(string SERVICE_CODE, string SERVICE_OCCURRENCE, string PRICE_PROTECTION_STATUS, string PRICE_PROTECTION_ID, string PRICE_PROTECTED_RATE, string ACTIVATION_DATE, string PRICE_PROTECT_START_DATE, string PRICE_PROTECTION_END_DATE, string PRICE_PROTECT_DESC, string TERMS_AND_CONDITIONS_ID, string ACTIVATION_TIME, string SERVICE_CATEGORY_CODE) {
                CustomerPriceLockInfoRow rowCustomerPriceLockInfoRow = ((CustomerPriceLockInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SERVICE_CODE,
                        SERVICE_OCCURRENCE,
                        PRICE_PROTECTION_STATUS,
                        PRICE_PROTECTION_ID,
                        PRICE_PROTECTED_RATE,
                        ACTIVATION_DATE,
                        PRICE_PROTECT_START_DATE,
                        PRICE_PROTECTION_END_DATE,
                        PRICE_PROTECT_DESC,
                        TERMS_AND_CONDITIONS_ID,
                        ACTIVATION_TIME,
                        SERVICE_CATEGORY_CODE};
                rowCustomerPriceLockInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerPriceLockInfoRow);
                return rowCustomerPriceLockInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerPriceLockInfoDataTable cln = ((CustomerPriceLockInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerPriceLockInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSERVICE_CODE = base.Columns["SERVICE_CODE"];
                this.columnSERVICE_OCCURRENCE = base.Columns["SERVICE_OCCURRENCE"];
                this.columnPRICE_PROTECTION_STATUS = base.Columns["PRICE_PROTECTION_STATUS"];
                this.columnPRICE_PROTECTION_ID = base.Columns["PRICE_PROTECTION_ID"];
                this.columnPRICE_PROTECTED_RATE = base.Columns["PRICE_PROTECTED_RATE"];
                this.columnACTIVATION_DATE = base.Columns["ACTIVATION_DATE"];
                this.columnPRICE_PROTECT_START_DATE = base.Columns["PRICE_PROTECT_START_DATE"];
                this.columnPRICE_PROTECTION_END_DATE = base.Columns["PRICE_PROTECTION_END_DATE"];
                this.columnPRICE_PROTECT_DESC = base.Columns["PRICE_PROTECT_DESC"];
                this.columnTERMS_AND_CONDITIONS_ID = base.Columns["TERMS_AND_CONDITIONS_ID"];
                this.columnACTIVATION_TIME = base.Columns["ACTIVATION_TIME"];
                this.columnSERVICE_CATEGORY_CODE = base.Columns["SERVICE_CATEGORY_CODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSERVICE_CODE = new global::System.Data.DataColumn("SERVICE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_CODE);
                this.columnSERVICE_OCCURRENCE = new global::System.Data.DataColumn("SERVICE_OCCURRENCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_OCCURRENCE);
                this.columnPRICE_PROTECTION_STATUS = new global::System.Data.DataColumn("PRICE_PROTECTION_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_PROTECTION_STATUS);
                this.columnPRICE_PROTECTION_ID = new global::System.Data.DataColumn("PRICE_PROTECTION_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_PROTECTION_ID);
                this.columnPRICE_PROTECTED_RATE = new global::System.Data.DataColumn("PRICE_PROTECTED_RATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_PROTECTED_RATE);
                this.columnACTIVATION_DATE = new global::System.Data.DataColumn("ACTIVATION_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVATION_DATE);
                this.columnPRICE_PROTECT_START_DATE = new global::System.Data.DataColumn("PRICE_PROTECT_START_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_PROTECT_START_DATE);
                this.columnPRICE_PROTECTION_END_DATE = new global::System.Data.DataColumn("PRICE_PROTECTION_END_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_PROTECTION_END_DATE);
                this.columnPRICE_PROTECT_DESC = new global::System.Data.DataColumn("PRICE_PROTECT_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_PROTECT_DESC);
                this.columnTERMS_AND_CONDITIONS_ID = new global::System.Data.DataColumn("TERMS_AND_CONDITIONS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMS_AND_CONDITIONS_ID);
                this.columnACTIVATION_TIME = new global::System.Data.DataColumn("ACTIVATION_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVATION_TIME);
                this.columnSERVICE_CATEGORY_CODE = new global::System.Data.DataColumn("SERVICE_CATEGORY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_CATEGORY_CODE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPriceLockInfoRow NewCustomerPriceLockInfoRow() {
                return ((CustomerPriceLockInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerPriceLockInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerPriceLockInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerPriceLockInfoRowChanged != null)) {
                    this.CustomerPriceLockInfoRowChanged(this, new CustomerPriceLockInfoRowChangeEvent(((CustomerPriceLockInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerPriceLockInfoRowChanging != null)) {
                    this.CustomerPriceLockInfoRowChanging(this, new CustomerPriceLockInfoRowChangeEvent(((CustomerPriceLockInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerPriceLockInfoRowDeleted != null)) {
                    this.CustomerPriceLockInfoRowDeleted(this, new CustomerPriceLockInfoRowChangeEvent(((CustomerPriceLockInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerPriceLockInfoRowDeleting != null)) {
                    this.CustomerPriceLockInfoRowDeleting(this, new CustomerPriceLockInfoRowChangeEvent(((CustomerPriceLockInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerPriceLockInfoRow(CustomerPriceLockInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountProfileSchema ds = new CustomerAccountProfileSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerPriceLockInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerAccountRow : global::System.Data.DataRow {
            
            private CustomerAccountDataTable tableCustomerAccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerAccountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerAccount = ((CustomerAccountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Site_Id {
                get {
                    try {
                        return ((int)(this[this.tableCustomerAccount.Site_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Site_Id\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.Site_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    if (this.IsAccount_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Account_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string House_Number {
                get {
                    if (this.IsHouse_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.House_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.House_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string House_Resident_Number {
                get {
                    if (this.IsHouse_Resident_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.House_Resident_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.House_Resident_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    if (this.IsTitleNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.TitleColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string First_Name {
                get {
                    if (this.IsFirst_NameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.First_NameColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.First_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Middle_Initial {
                get {
                    if (this.IsMiddle_InitialNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Middle_InitialColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Middle_InitialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Last_Name {
                get {
                    if (this.IsLast_NameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Last_NameColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Last_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_To_Address {
                get {
                    if (this.IsBill_To_AddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Bill_To_AddressColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Bill_To_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_Status_Code {
                get {
                    if (this.IsCustomer_Status_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Customer_Status_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Customer_Status_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status_Date {
                get {
                    if (this.IsStatus_DateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Status_DateColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Status_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Connect_Date {
                get {
                    if (this.IsConnect_DateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Connect_DateColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Connect_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Language_Code {
                get {
                    if (this.IsLanguage_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Language_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Language_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disconnect_Date {
                get {
                    if (this.IsDisconnect_DateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Disconnect_DateColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Disconnect_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_Type_Code {
                get {
                    if (this.IsCustomer_Type_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Customer_Type_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Customer_Type_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_Type_Description {
                get {
                    if (this.IsCustomer_Type_DescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Customer_Type_DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Customer_Type_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Old_Tran_Site_Id {
                get {
                    try {
                        return ((int)(this[this.tableCustomerAccount.Old_Tran_Site_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Old_Tran_Site_Id\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.Old_Tran_Site_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ld_Tran_Account_Number {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAccount.ld_Tran_Account_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ld_Tran_Account_Number\' in table \'CustomerAccount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.ld_Tran_Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Home_Phone {
                get {
                    if (this.IsHome_PhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Home_PhoneColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Home_PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Business_Phone {
                get {
                    if (this.IsBusiness_PhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Business_PhoneColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Business_PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Other_Phone {
                get {
                    if (this.IsOther_PhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Other_PhoneColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Other_PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Privacy_Code {
                get {
                    if (this.IsPrivacy_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Privacy_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Privacy_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_Name {
                get {
                    if (this.IsCustomer_NameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Customer_NameColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Customer_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_Business_Name {
                get {
                    if (this.IsCustomer_Business_NameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Customer_Business_NameColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Customer_Business_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address_Line_1 {
                get {
                    if (this.IsAddress_Line_1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Address_Line_1Column]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Address_Line_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address_Line_2 {
                get {
                    if (this.IsAddress_Line_2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Address_Line_2Column]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Address_Line_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address_Line_3 {
                get {
                    if (this.IsAddress_Line_3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Address_Line_3Column]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Address_Line_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address_Line_4 {
                get {
                    if (this.IsAddress_Line_4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Address_Line_4Column]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Address_Line_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_ZIP_4 {
                get {
                    if (this.IsADDR_ZIP_4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.ADDR_ZIP_4Column]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.ADDR_ZIP_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_ZIP_5 {
                get {
                    if (this.IsADDR_ZIP_5Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.ADDR_ZIP_5Column]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.ADDR_ZIP_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_CITY {
                get {
                    if (this.IsADDR_CITYNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.ADDR_CITYColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.ADDR_CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_STATE {
                get {
                    if (this.IsADDR_STATENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.ADDR_STATEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.ADDR_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dwelling_Type {
                get {
                    if (this.IsDwelling_TypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Dwelling_TypeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Dwelling_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dwelling_Type_Description {
                get {
                    if (this.IsDwelling_Type_DescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Dwelling_Type_DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Dwelling_Type_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Type_Code {
                get {
                    if (this.IsBill_Type_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Bill_Type_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Bill_Type_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Type_Short_Desc {
                get {
                    if (this.IsBill_Type_Short_DescNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Bill_Type_Short_DescColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Bill_Type_Short_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Type_Long_Desc {
                get {
                    if (this.IsBill_Type_Long_DescNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Bill_Type_Long_DescColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Bill_Type_Long_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Service_Class {
                get {
                    if (this.IsService_ClassNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Service_ClassColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Service_ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_Number {
                get {
                    try {
                        return ((int)(this[this.tableCustomerAccount.Company_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_Number\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.Company_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Division_Number {
                get {
                    try {
                        return ((int)(this[this.tableCustomerAccount.Division_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Division_Number\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.Division_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Franchise_Number {
                get {
                    try {
                        return ((int)(this[this.tableCustomerAccount.Franchise_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Franchise_Number\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.Franchise_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Franchise_Name {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAccount.Franchise_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Franchise_Name\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.Franchise_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string House_Status {
                get {
                    if (this.IsHouse_StatusNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.House_StatusColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.House_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unserviceable_Address {
                get {
                    if (this.IsUnserviceable_AddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Unserviceable_AddressColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Unserviceable_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date_Of_Birth {
                get {
                    if (this.IsDate_Of_BirthNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Date_Of_BirthColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Date_Of_BirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Drivers_License_Number {
                get {
                    if (this.IsDrivers_License_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Drivers_License_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Drivers_License_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Social_Security_Nbr {
                get {
                    if (this.IsSocial_Security_NbrNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Social_Security_NbrColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Social_Security_NbrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pin_Number {
                get {
                    if (this.IsPin_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Pin_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Pin_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_Comment {
                get {
                    if (this.IsCustomer_CommentNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Customer_CommentColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Customer_CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Building {
                get {
                    if (this.IsBuildingNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.BuildingColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.BuildingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DoNotAcceptCreditCards {
                get {
                    try {
                        return ((bool)(this[this.tableCustomerAccount.DoNotAcceptCreditCardsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoNotAcceptCreditCards\' in table \'CustomerAccount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.DoNotAcceptCreditCardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DoNotAcceptCheck {
                get {
                    try {
                        return ((bool)(this[this.tableCustomerAccount.DoNotAcceptCheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoNotAcceptCheck\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.DoNotAcceptCheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apartment {
                get {
                    if (this.IsApartmentNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.ApartmentColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.ApartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short OnlineOrderBlock {
                get {
                    try {
                        return ((short)(this[this.tableCustomerAccount.OnlineOrderBlockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnlineOrderBlock\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.OnlineOrderBlockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OnlineOrderDelinquentBalance {
                get {
                    try {
                        return ((bool)(this[this.tableCustomerAccount.OnlineOrderDelinquentBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnlineOrderDelinquentBalance\' in table \'CustomerAccount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.OnlineOrderDelinquentBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CHSI_Abuse_Flag {
                get {
                    try {
                        return ((bool)(this[this.tableCustomerAccount.CHSI_Abuse_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHSI_Abuse_Flag\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.CHSI_Abuse_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VIP_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAccount.VIP_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIP_Code\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.VIP_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cust_Value_Segmentation {
                get {
                    if (this.IsCust_Value_SegmentationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Cust_Value_SegmentationColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Cust_Value_SegmentationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cox_Unique_ID {
                get {
                    if (this.IsCox_Unique_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Cox_Unique_IDColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Cox_Unique_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contract {
                get {
                    if (this.IsContractNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.ContractColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.ContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tenure_Number_Of_Months {
                get {
                    if (this.IsTenure_Number_Of_MonthsNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerAccount.Tenure_Number_Of_MonthsColumn]));
                    }
                }
                set {
                    this[this.tableCustomerAccount.Tenure_Number_Of_MonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfTru2WayActive {
                get {
                    try {
                        return ((int)(this[this.tableCustomerAccount.NumberOfTru2WayActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfTru2WayActive\' in table \'CustomerAccount\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerAccount.NumberOfTru2WayActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSite_IdNull() {
                return this.IsNull(this.tableCustomerAccount.Site_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSite_IdNull() {
                this[this.tableCustomerAccount.Site_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_NumberNull() {
                this[this.tableCustomerAccount.Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouse_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.House_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouse_NumberNull() {
                this[this.tableCustomerAccount.House_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouse_Resident_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.House_Resident_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouse_Resident_NumberNull() {
                this[this.tableCustomerAccount.House_Resident_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableCustomerAccount.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableCustomerAccount.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirst_NameNull() {
                return this.IsNull(this.tableCustomerAccount.First_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirst_NameNull() {
                this[this.tableCustomerAccount.First_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddle_InitialNull() {
                return this.IsNull(this.tableCustomerAccount.Middle_InitialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddle_InitialNull() {
                this[this.tableCustomerAccount.Middle_InitialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLast_NameNull() {
                return this.IsNull(this.tableCustomerAccount.Last_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLast_NameNull() {
                this[this.tableCustomerAccount.Last_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_To_AddressNull() {
                return this.IsNull(this.tableCustomerAccount.Bill_To_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_To_AddressNull() {
                this[this.tableCustomerAccount.Bill_To_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_Status_CodeNull() {
                return this.IsNull(this.tableCustomerAccount.Customer_Status_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_Status_CodeNull() {
                this[this.tableCustomerAccount.Customer_Status_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatus_DateNull() {
                return this.IsNull(this.tableCustomerAccount.Status_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatus_DateNull() {
                this[this.tableCustomerAccount.Status_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConnect_DateNull() {
                return this.IsNull(this.tableCustomerAccount.Connect_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConnect_DateNull() {
                this[this.tableCustomerAccount.Connect_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLanguage_CodeNull() {
                return this.IsNull(this.tableCustomerAccount.Language_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLanguage_CodeNull() {
                this[this.tableCustomerAccount.Language_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisconnect_DateNull() {
                return this.IsNull(this.tableCustomerAccount.Disconnect_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisconnect_DateNull() {
                this[this.tableCustomerAccount.Disconnect_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_Type_CodeNull() {
                return this.IsNull(this.tableCustomerAccount.Customer_Type_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_Type_CodeNull() {
                this[this.tableCustomerAccount.Customer_Type_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_Type_DescriptionNull() {
                return this.IsNull(this.tableCustomerAccount.Customer_Type_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_Type_DescriptionNull() {
                this[this.tableCustomerAccount.Customer_Type_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOld_Tran_Site_IdNull() {
                return this.IsNull(this.tableCustomerAccount.Old_Tran_Site_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOld_Tran_Site_IdNull() {
                this[this.tableCustomerAccount.Old_Tran_Site_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isld_Tran_Account_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.ld_Tran_Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setld_Tran_Account_NumberNull() {
                this[this.tableCustomerAccount.ld_Tran_Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHome_PhoneNull() {
                return this.IsNull(this.tableCustomerAccount.Home_PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHome_PhoneNull() {
                this[this.tableCustomerAccount.Home_PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusiness_PhoneNull() {
                return this.IsNull(this.tableCustomerAccount.Business_PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusiness_PhoneNull() {
                this[this.tableCustomerAccount.Business_PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOther_PhoneNull() {
                return this.IsNull(this.tableCustomerAccount.Other_PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOther_PhoneNull() {
                this[this.tableCustomerAccount.Other_PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrivacy_CodeNull() {
                return this.IsNull(this.tableCustomerAccount.Privacy_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrivacy_CodeNull() {
                this[this.tableCustomerAccount.Privacy_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_NameNull() {
                return this.IsNull(this.tableCustomerAccount.Customer_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_NameNull() {
                this[this.tableCustomerAccount.Customer_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_Business_NameNull() {
                return this.IsNull(this.tableCustomerAccount.Customer_Business_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_Business_NameNull() {
                this[this.tableCustomerAccount.Customer_Business_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress_Line_1Null() {
                return this.IsNull(this.tableCustomerAccount.Address_Line_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress_Line_1Null() {
                this[this.tableCustomerAccount.Address_Line_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress_Line_2Null() {
                return this.IsNull(this.tableCustomerAccount.Address_Line_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress_Line_2Null() {
                this[this.tableCustomerAccount.Address_Line_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress_Line_3Null() {
                return this.IsNull(this.tableCustomerAccount.Address_Line_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress_Line_3Null() {
                this[this.tableCustomerAccount.Address_Line_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress_Line_4Null() {
                return this.IsNull(this.tableCustomerAccount.Address_Line_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress_Line_4Null() {
                this[this.tableCustomerAccount.Address_Line_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_ZIP_4Null() {
                return this.IsNull(this.tableCustomerAccount.ADDR_ZIP_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_ZIP_4Null() {
                this[this.tableCustomerAccount.ADDR_ZIP_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_ZIP_5Null() {
                return this.IsNull(this.tableCustomerAccount.ADDR_ZIP_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_ZIP_5Null() {
                this[this.tableCustomerAccount.ADDR_ZIP_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_CITYNull() {
                return this.IsNull(this.tableCustomerAccount.ADDR_CITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_CITYNull() {
                this[this.tableCustomerAccount.ADDR_CITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_STATENull() {
                return this.IsNull(this.tableCustomerAccount.ADDR_STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_STATENull() {
                this[this.tableCustomerAccount.ADDR_STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDwelling_TypeNull() {
                return this.IsNull(this.tableCustomerAccount.Dwelling_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDwelling_TypeNull() {
                this[this.tableCustomerAccount.Dwelling_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDwelling_Type_DescriptionNull() {
                return this.IsNull(this.tableCustomerAccount.Dwelling_Type_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDwelling_Type_DescriptionNull() {
                this[this.tableCustomerAccount.Dwelling_Type_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_Type_CodeNull() {
                return this.IsNull(this.tableCustomerAccount.Bill_Type_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_Type_CodeNull() {
                this[this.tableCustomerAccount.Bill_Type_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_Type_Short_DescNull() {
                return this.IsNull(this.tableCustomerAccount.Bill_Type_Short_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_Type_Short_DescNull() {
                this[this.tableCustomerAccount.Bill_Type_Short_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_Type_Long_DescNull() {
                return this.IsNull(this.tableCustomerAccount.Bill_Type_Long_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_Type_Long_DescNull() {
                this[this.tableCustomerAccount.Bill_Type_Long_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_ClassNull() {
                return this.IsNull(this.tableCustomerAccount.Service_ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_ClassNull() {
                this[this.tableCustomerAccount.Service_ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.Company_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_NumberNull() {
                this[this.tableCustomerAccount.Company_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivision_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.Division_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivision_NumberNull() {
                this[this.tableCustomerAccount.Division_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFranchise_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.Franchise_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFranchise_NumberNull() {
                this[this.tableCustomerAccount.Franchise_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFranchise_NameNull() {
                return this.IsNull(this.tableCustomerAccount.Franchise_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFranchise_NameNull() {
                this[this.tableCustomerAccount.Franchise_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouse_StatusNull() {
                return this.IsNull(this.tableCustomerAccount.House_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouse_StatusNull() {
                this[this.tableCustomerAccount.House_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnserviceable_AddressNull() {
                return this.IsNull(this.tableCustomerAccount.Unserviceable_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnserviceable_AddressNull() {
                this[this.tableCustomerAccount.Unserviceable_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDate_Of_BirthNull() {
                return this.IsNull(this.tableCustomerAccount.Date_Of_BirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDate_Of_BirthNull() {
                this[this.tableCustomerAccount.Date_Of_BirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrivers_License_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.Drivers_License_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrivers_License_NumberNull() {
                this[this.tableCustomerAccount.Drivers_License_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocial_Security_NbrNull() {
                return this.IsNull(this.tableCustomerAccount.Social_Security_NbrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocial_Security_NbrNull() {
                this[this.tableCustomerAccount.Social_Security_NbrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPin_NumberNull() {
                return this.IsNull(this.tableCustomerAccount.Pin_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPin_NumberNull() {
                this[this.tableCustomerAccount.Pin_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_CommentNull() {
                return this.IsNull(this.tableCustomerAccount.Customer_CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_CommentNull() {
                this[this.tableCustomerAccount.Customer_CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingNull() {
                return this.IsNull(this.tableCustomerAccount.BuildingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingNull() {
                this[this.tableCustomerAccount.BuildingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoNotAcceptCreditCardsNull() {
                return this.IsNull(this.tableCustomerAccount.DoNotAcceptCreditCardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoNotAcceptCreditCardsNull() {
                this[this.tableCustomerAccount.DoNotAcceptCreditCardsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoNotAcceptCheckNull() {
                return this.IsNull(this.tableCustomerAccount.DoNotAcceptCheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoNotAcceptCheckNull() {
                this[this.tableCustomerAccount.DoNotAcceptCheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApartmentNull() {
                return this.IsNull(this.tableCustomerAccount.ApartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApartmentNull() {
                this[this.tableCustomerAccount.ApartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineOrderBlockNull() {
                return this.IsNull(this.tableCustomerAccount.OnlineOrderBlockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineOrderBlockNull() {
                this[this.tableCustomerAccount.OnlineOrderBlockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineOrderDelinquentBalanceNull() {
                return this.IsNull(this.tableCustomerAccount.OnlineOrderDelinquentBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineOrderDelinquentBalanceNull() {
                this[this.tableCustomerAccount.OnlineOrderDelinquentBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHSI_Abuse_FlagNull() {
                return this.IsNull(this.tableCustomerAccount.CHSI_Abuse_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHSI_Abuse_FlagNull() {
                this[this.tableCustomerAccount.CHSI_Abuse_FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVIP_CodeNull() {
                return this.IsNull(this.tableCustomerAccount.VIP_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVIP_CodeNull() {
                this[this.tableCustomerAccount.VIP_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCust_Value_SegmentationNull() {
                return this.IsNull(this.tableCustomerAccount.Cust_Value_SegmentationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCust_Value_SegmentationNull() {
                this[this.tableCustomerAccount.Cust_Value_SegmentationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCox_Unique_IDNull() {
                return this.IsNull(this.tableCustomerAccount.Cox_Unique_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCox_Unique_IDNull() {
                this[this.tableCustomerAccount.Cox_Unique_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractNull() {
                return this.IsNull(this.tableCustomerAccount.ContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractNull() {
                this[this.tableCustomerAccount.ContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenure_Number_Of_MonthsNull() {
                return this.IsNull(this.tableCustomerAccount.Tenure_Number_Of_MonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenure_Number_Of_MonthsNull() {
                this[this.tableCustomerAccount.Tenure_Number_Of_MonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfTru2WayActiveNull() {
                return this.IsNull(this.tableCustomerAccount.NumberOfTru2WayActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfTru2WayActiveNull() {
                this[this.tableCustomerAccount.NumberOfTru2WayActiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerCampaignRow : global::System.Data.DataRow {
            
            private CustomerCampaignDataTable tableCustomerCampaign;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerCampaignRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerCampaign = ((CustomerCampaignDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Service_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCampaign.Service_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Service_Code\' in table \'CustomerCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Service_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Service_Category_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCampaign.Service_Category_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Service_Category_Code\' in table \'CustomerCampaign\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Service_Category_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Service_Occurrence {
                get {
                    try {
                        return ((int)(this[this.tableCustomerCampaign.Service_OccurrenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Service_Occurrence\' in table \'CustomerCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Service_OccurrenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Promotion_Code {
                get {
                    if (this.IsPromotion_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerCampaign.Promotion_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Promotion_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Promotion_Description {
                get {
                    if (this.IsPromotion_DescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerCampaign.Promotion_DescriptionColumn]));
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Promotion_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Service_Status {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCampaign.Service_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Service_Status\' in table \'CustomerCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Service_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount_Active {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCampaign.Discount_ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount_Active\' in table \'CustomerCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Discount_ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount_Begin_Date {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCampaign.Discount_Begin_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount_Begin_Date\' in table \'CustomerCampaign\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Discount_Begin_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Discount_End_Date {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCampaign.Discount_End_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount_End_Date\' in table \'CustomerCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCampaign.Discount_End_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_CodeNull() {
                return this.IsNull(this.tableCustomerCampaign.Service_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_CodeNull() {
                this[this.tableCustomerCampaign.Service_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_Category_CodeNull() {
                return this.IsNull(this.tableCustomerCampaign.Service_Category_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_Category_CodeNull() {
                this[this.tableCustomerCampaign.Service_Category_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_OccurrenceNull() {
                return this.IsNull(this.tableCustomerCampaign.Service_OccurrenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_OccurrenceNull() {
                this[this.tableCustomerCampaign.Service_OccurrenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPromotion_CodeNull() {
                return this.IsNull(this.tableCustomerCampaign.Promotion_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPromotion_CodeNull() {
                this[this.tableCustomerCampaign.Promotion_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPromotion_DescriptionNull() {
                return this.IsNull(this.tableCustomerCampaign.Promotion_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPromotion_DescriptionNull() {
                this[this.tableCustomerCampaign.Promotion_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_StatusNull() {
                return this.IsNull(this.tableCustomerCampaign.Service_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_StatusNull() {
                this[this.tableCustomerCampaign.Service_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscount_ActiveNull() {
                return this.IsNull(this.tableCustomerCampaign.Discount_ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscount_ActiveNull() {
                this[this.tableCustomerCampaign.Discount_ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscount_Begin_DateNull() {
                return this.IsNull(this.tableCustomerCampaign.Discount_Begin_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscount_Begin_DateNull() {
                this[this.tableCustomerCampaign.Discount_Begin_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscount_End_DateNull() {
                return this.IsNull(this.tableCustomerCampaign.Discount_End_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscount_End_DateNull() {
                this[this.tableCustomerCampaign.Discount_End_DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerContractRow : global::System.Data.DataRow {
            
            private CustomerContractDataTable tableCustomerContract;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerContractRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerContract = ((CustomerContractDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Site_Id {
                get {
                    try {
                        return ((int)(this[this.tableCustomerContract.Site_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Site_Id\' in table \'CustomerContract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerContract.Site_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    if (this.IsAccount_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerContract.Account_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerContract.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contract_Id {
                get {
                    if (this.IsContract_IdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerContract.Contract_IdColumn]));
                    }
                }
                set {
                    this[this.tableCustomerContract.Contract_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contract_Desc {
                get {
                    if (this.IsContract_DescNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerContract.Contract_DescColumn]));
                    }
                }
                set {
                    this[this.tableCustomerContract.Contract_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contract_End_Date {
                get {
                    if (this.IsContract_End_DateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerContract.Contract_End_DateColumn]));
                    }
                }
                set {
                    this[this.tableCustomerContract.Contract_End_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contract_START_Date {
                get {
                    if (this.IsContract_START_DateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerContract.Contract_START_DateColumn]));
                    }
                }
                set {
                    this[this.tableCustomerContract.Contract_START_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Early_Term_Assesment_Amt {
                get {
                    try {
                        return ((double)(this[this.tableCustomerContract.Early_Term_Assesment_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Early_Term_Assesment_Amt\' in table \'CustomerContract\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomerContract.Early_Term_Assesment_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Service_Category_Code {
                get {
                    if (this.IsService_Category_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerContract.Service_Category_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerContract.Service_Category_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSite_IdNull() {
                return this.IsNull(this.tableCustomerContract.Site_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSite_IdNull() {
                this[this.tableCustomerContract.Site_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_NumberNull() {
                return this.IsNull(this.tableCustomerContract.Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_NumberNull() {
                this[this.tableCustomerContract.Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContract_IdNull() {
                return this.IsNull(this.tableCustomerContract.Contract_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContract_IdNull() {
                this[this.tableCustomerContract.Contract_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContract_DescNull() {
                return this.IsNull(this.tableCustomerContract.Contract_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContract_DescNull() {
                this[this.tableCustomerContract.Contract_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContract_End_DateNull() {
                return this.IsNull(this.tableCustomerContract.Contract_End_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContract_End_DateNull() {
                this[this.tableCustomerContract.Contract_End_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContract_START_DateNull() {
                return this.IsNull(this.tableCustomerContract.Contract_START_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContract_START_DateNull() {
                this[this.tableCustomerContract.Contract_START_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarly_Term_Assesment_AmtNull() {
                return this.IsNull(this.tableCustomerContract.Early_Term_Assesment_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarly_Term_Assesment_AmtNull() {
                this[this.tableCustomerContract.Early_Term_Assesment_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_Category_CodeNull() {
                return this.IsNull(this.tableCustomerContract.Service_Category_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_Category_CodeNull() {
                this[this.tableCustomerContract.Service_Category_CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerPhoneRow : global::System.Data.DataRow {
            
            private CustomerPhoneDataTable tableCustomerPhone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPhoneRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerPhone = ((CustomerPhoneDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Site_Id {
                get {
                    try {
                        return ((int)(this[this.tableCustomerPhone.Site_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Site_Id\' in table \'CustomerPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPhone.Site_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    if (this.IsAccount_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPhone.Account_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPhone.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone_Type {
                get {
                    if (this.IsPhone_TypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPhone.Phone_TypeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPhone.Phone_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone_Number {
                get {
                    if (this.IsPhone_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPhone.Phone_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPhone.Phone_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Area_Code {
                get {
                    if (this.IsArea_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPhone.Area_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPhone.Area_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exchange_Number {
                get {
                    if (this.IsExchange_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPhone.Exchange_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPhone.Exchange_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telephone_Number {
                get {
                    if (this.IsTelephone_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPhone.Telephone_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPhone.Telephone_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Customer_TN_Sequence {
                get {
                    try {
                        return ((int)(this[this.tableCustomerPhone.Customer_TN_SequenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer_TN_Sequence\' in table \'CustomerPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPhone.Customer_TN_SequenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_TN_Type_Id {
                get {
                    if (this.IsCustomer_TN_Type_IdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPhone.Customer_TN_Type_IdColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPhone.Customer_TN_Type_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DNC_Flag {
                get {
                    try {
                        return ((bool)(this[this.tableCustomerPhone.DNC_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNC_Flag\' in table \'CustomerPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPhone.DNC_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Wireless_Flag {
                get {
                    try {
                        return ((bool)(this[this.tableCustomerPhone.Wireless_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wireless_Flag\' in table \'CustomerPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPhone.Wireless_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSite_IdNull() {
                return this.IsNull(this.tableCustomerPhone.Site_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSite_IdNull() {
                this[this.tableCustomerPhone.Site_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_NumberNull() {
                return this.IsNull(this.tableCustomerPhone.Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_NumberNull() {
                this[this.tableCustomerPhone.Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone_TypeNull() {
                return this.IsNull(this.tableCustomerPhone.Phone_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone_TypeNull() {
                this[this.tableCustomerPhone.Phone_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone_NumberNull() {
                return this.IsNull(this.tableCustomerPhone.Phone_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone_NumberNull() {
                this[this.tableCustomerPhone.Phone_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArea_CodeNull() {
                return this.IsNull(this.tableCustomerPhone.Area_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArea_CodeNull() {
                this[this.tableCustomerPhone.Area_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchange_NumberNull() {
                return this.IsNull(this.tableCustomerPhone.Exchange_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchange_NumberNull() {
                this[this.tableCustomerPhone.Exchange_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephone_NumberNull() {
                return this.IsNull(this.tableCustomerPhone.Telephone_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephone_NumberNull() {
                this[this.tableCustomerPhone.Telephone_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_TN_SequenceNull() {
                return this.IsNull(this.tableCustomerPhone.Customer_TN_SequenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_TN_SequenceNull() {
                this[this.tableCustomerPhone.Customer_TN_SequenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer_TN_Type_IdNull() {
                return this.IsNull(this.tableCustomerPhone.Customer_TN_Type_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer_TN_Type_IdNull() {
                this[this.tableCustomerPhone.Customer_TN_Type_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNC_FlagNull() {
                return this.IsNull(this.tableCustomerPhone.DNC_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNC_FlagNull() {
                this[this.tableCustomerPhone.DNC_FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWireless_FlagNull() {
                return this.IsNull(this.tableCustomerPhone.Wireless_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWireless_FlagNull() {
                this[this.tableCustomerPhone.Wireless_FlagColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerPrivacyRow : global::System.Data.DataRow {
            
            private CustomerPrivacyDataTable tableCustomerPrivacy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPrivacyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerPrivacy = ((CustomerPrivacyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Site_Id {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPrivacy.Site_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Site_Id\' in table \'CustomerPrivacy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.Site_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    if (this.IsAccount_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPrivacy.Account_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string New_Privacy_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPrivacy.New_Privacy_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'New_Privacy_Code\' in table \'CustomerPrivacy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.New_Privacy_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Privacy_Code_Description {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPrivacy.Privacy_Code_DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Privacy_Code_Description\' in table \'CustomerPrivacy\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.Privacy_Code_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Effective_Date {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPrivacy.Effective_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Effective_Date\' in table \'CustomerPrivacy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.Effective_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expiration_Date {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPrivacy.Expiration_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expiration_Date\' in table \'CustomerPrivacy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.Expiration_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cancel_Flag {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPrivacy.Cancel_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cancel_Flag\' in table \'CustomerPrivacy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.Cancel_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact_Type_Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPrivacy.Contact_Type_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contact_Type_Code\' in table \'CustomerPrivacy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPrivacy.Contact_Type_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSite_IdNull() {
                return this.IsNull(this.tableCustomerPrivacy.Site_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSite_IdNull() {
                this[this.tableCustomerPrivacy.Site_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_NumberNull() {
                return this.IsNull(this.tableCustomerPrivacy.Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_NumberNull() {
                this[this.tableCustomerPrivacy.Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNew_Privacy_CodeNull() {
                return this.IsNull(this.tableCustomerPrivacy.New_Privacy_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNew_Privacy_CodeNull() {
                this[this.tableCustomerPrivacy.New_Privacy_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrivacy_Code_DescriptionNull() {
                return this.IsNull(this.tableCustomerPrivacy.Privacy_Code_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrivacy_Code_DescriptionNull() {
                this[this.tableCustomerPrivacy.Privacy_Code_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffective_DateNull() {
                return this.IsNull(this.tableCustomerPrivacy.Effective_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffective_DateNull() {
                this[this.tableCustomerPrivacy.Effective_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpiration_DateNull() {
                return this.IsNull(this.tableCustomerPrivacy.Expiration_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpiration_DateNull() {
                this[this.tableCustomerPrivacy.Expiration_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancel_FlagNull() {
                return this.IsNull(this.tableCustomerPrivacy.Cancel_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancel_FlagNull() {
                this[this.tableCustomerPrivacy.Cancel_FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContact_Type_CodeNull() {
                return this.IsNull(this.tableCustomerPrivacy.Contact_Type_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContact_Type_CodeNull() {
                this[this.tableCustomerPrivacy.Contact_Type_CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerMonthlyServiceAmountRow : global::System.Data.DataRow {
            
            private CustomerMonthlyServiceAmountDataTable tableCustomerMonthlyServiceAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerMonthlyServiceAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerMonthlyServiceAmount = ((CustomerMonthlyServiceAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Site_Id {
                get {
                    try {
                        return ((int)(this[this.tableCustomerMonthlyServiceAmount.Site_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Site_Id\' in table \'CustomerMonthlyServiceAmount\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerMonthlyServiceAmount.Site_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    if (this.IsAccount_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerMonthlyServiceAmount.Account_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerMonthlyServiceAmount.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Statement_Code {
                get {
                    if (this.IsStatement_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerMonthlyServiceAmount.Statement_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerMonthlyServiceAmount.Statement_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StatementCD_Monthly_SVC_Amount {
                get {
                    try {
                        return ((double)(this[this.tableCustomerMonthlyServiceAmount.StatementCD_Monthly_SVC_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatementCD_Monthly_SVC_Amount\' in table \'CustomerMonthlySe" +
                                "rviceAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerMonthlyServiceAmount.StatementCD_Monthly_SVC_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Total_Monthly_SVC_Amount {
                get {
                    try {
                        return ((double)(this[this.tableCustomerMonthlyServiceAmount.Total_Monthly_SVC_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Monthly_SVC_Amount\' in table \'CustomerMonthlyServiceA" +
                                "mount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerMonthlyServiceAmount.Total_Monthly_SVC_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSite_IdNull() {
                return this.IsNull(this.tableCustomerMonthlyServiceAmount.Site_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSite_IdNull() {
                this[this.tableCustomerMonthlyServiceAmount.Site_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_NumberNull() {
                return this.IsNull(this.tableCustomerMonthlyServiceAmount.Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_NumberNull() {
                this[this.tableCustomerMonthlyServiceAmount.Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatement_CodeNull() {
                return this.IsNull(this.tableCustomerMonthlyServiceAmount.Statement_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatement_CodeNull() {
                this[this.tableCustomerMonthlyServiceAmount.Statement_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementCD_Monthly_SVC_AmountNull() {
                return this.IsNull(this.tableCustomerMonthlyServiceAmount.StatementCD_Monthly_SVC_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementCD_Monthly_SVC_AmountNull() {
                this[this.tableCustomerMonthlyServiceAmount.StatementCD_Monthly_SVC_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_Monthly_SVC_AmountNull() {
                return this.IsNull(this.tableCustomerMonthlyServiceAmount.Total_Monthly_SVC_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_Monthly_SVC_AmountNull() {
                this[this.tableCustomerMonthlyServiceAmount.Total_Monthly_SVC_AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerEmailRow : global::System.Data.DataRow {
            
            private CustomerEmailDataTable tableCustomerEmail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerEmailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerEmail = ((CustomerEmailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Site_Id {
                get {
                    try {
                        return ((int)(this[this.tableCustomerEmail.Site_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Site_Id\' in table \'CustomerEmail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerEmail.Site_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    if (this.IsAccount_NumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerEmail.Account_NumberColumn]));
                    }
                }
                set {
                    this[this.tableCustomerEmail.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sequence_Number {
                get {
                    try {
                        return ((int)(this[this.tableCustomerEmail.Sequence_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sequence_Number\' in table \'CustomerEmail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerEmail.Sequence_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email_Address {
                get {
                    if (this.IsEmail_AddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerEmail.Email_AddressColumn]));
                    }
                }
                set {
                    this[this.tableCustomerEmail.Email_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email_Type {
                get {
                    if (this.IsEmail_TypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerEmail.Email_TypeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerEmail.Email_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSite_IdNull() {
                return this.IsNull(this.tableCustomerEmail.Site_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSite_IdNull() {
                this[this.tableCustomerEmail.Site_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_NumberNull() {
                return this.IsNull(this.tableCustomerEmail.Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_NumberNull() {
                this[this.tableCustomerEmail.Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSequence_NumberNull() {
                return this.IsNull(this.tableCustomerEmail.Sequence_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSequence_NumberNull() {
                this[this.tableCustomerEmail.Sequence_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmail_AddressNull() {
                return this.IsNull(this.tableCustomerEmail.Email_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmail_AddressNull() {
                this[this.tableCustomerEmail.Email_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmail_TypeNull() {
                return this.IsNull(this.tableCustomerEmail.Email_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmail_TypeNull() {
                this[this.tableCustomerEmail.Email_TypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerServicesRow : global::System.Data.DataRow {
            
            private CustomerServicesDataTable tableCustomerServices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerServicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerServices = ((CustomerServicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Service_Category_Code {
                get {
                    if (this.IsService_Category_CodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerServices.Service_Category_CodeColumn]));
                    }
                }
                set {
                    this[this.tableCustomerServices.Service_Category_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceStatus {
                get {
                    if (this.IsServiceStatusNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerServices.ServiceStatusColumn]));
                    }
                }
                set {
                    this[this.tableCustomerServices.ServiceStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_Category_CodeNull() {
                return this.IsNull(this.tableCustomerServices.Service_Category_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_Category_CodeNull() {
                this[this.tableCustomerServices.Service_Category_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceStatusNull() {
                return this.IsNull(this.tableCustomerServices.ServiceStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceStatusNull() {
                this[this.tableCustomerServices.ServiceStatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AccountMatchesRow : global::System.Data.DataRow {
            
            private AccountMatchesDataTable tableAccountMatches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AccountMatchesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccountMatches = ((AccountMatchesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Site_ID {
                get {
                    return ((int)(this[this.tableAccountMatches.Site_IDColumn]));
                }
                set {
                    this[this.tableAccountMatches.Site_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    return ((string)(this[this.tableAccountMatches.Account_NumberColumn]));
                }
                set {
                    this[this.tableAccountMatches.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer_TN_Flag {
                get {
                    return ((string)(this[this.tableAccountMatches.Customer_TN_FlagColumn]));
                }
                set {
                    this[this.tableAccountMatches.Customer_TN_FlagColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerPriceLockInfoRow : global::System.Data.DataRow {
            
            private CustomerPriceLockInfoDataTable tableCustomerPriceLockInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPriceLockInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerPriceLockInfo = ((CustomerPriceLockInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_CODE {
                get {
                    if (this.IsSERVICE_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.SERVICE_CODEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.SERVICE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_OCCURRENCE {
                get {
                    if (this.IsSERVICE_OCCURRENCENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.SERVICE_OCCURRENCEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.SERVICE_OCCURRENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICE_PROTECTION_STATUS {
                get {
                    if (this.IsPRICE_PROTECTION_STATUSNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_STATUSColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICE_PROTECTION_ID {
                get {
                    if (this.IsPRICE_PROTECTION_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_IDColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICE_PROTECTED_RATE {
                get {
                    if (this.IsPRICE_PROTECTED_RATENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.PRICE_PROTECTED_RATEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.PRICE_PROTECTED_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTIVATION_DATE {
                get {
                    if (this.IsACTIVATION_DATENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.ACTIVATION_DATEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.ACTIVATION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICE_PROTECT_START_DATE {
                get {
                    if (this.IsPRICE_PROTECT_START_DATENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.PRICE_PROTECT_START_DATEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.PRICE_PROTECT_START_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICE_PROTECTION_END_DATE {
                get {
                    if (this.IsPRICE_PROTECTION_END_DATENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_END_DATEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_END_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICE_PROTECT_DESC {
                get {
                    if (this.IsPRICE_PROTECT_DESCNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.PRICE_PROTECT_DESCColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.PRICE_PROTECT_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERMS_AND_CONDITIONS_ID {
                get {
                    if (this.IsTERMS_AND_CONDITIONS_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.TERMS_AND_CONDITIONS_IDColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.TERMS_AND_CONDITIONS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTIVATION_TIME {
                get {
                    if (this.IsACTIVATION_TIMENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.ACTIVATION_TIMEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.ACTIVATION_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_CATEGORY_CODE {
                get {
                    if (this.IsSERVICE_CATEGORY_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCustomerPriceLockInfo.SERVICE_CATEGORY_CODEColumn]));
                    }
                }
                set {
                    this[this.tableCustomerPriceLockInfo.SERVICE_CATEGORY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_CODENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.SERVICE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_CODENull() {
                this[this.tableCustomerPriceLockInfo.SERVICE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_OCCURRENCENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.SERVICE_OCCURRENCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_OCCURRENCENull() {
                this[this.tableCustomerPriceLockInfo.SERVICE_OCCURRENCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICE_PROTECTION_STATUSNull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.PRICE_PROTECTION_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICE_PROTECTION_STATUSNull() {
                this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICE_PROTECTION_IDNull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.PRICE_PROTECTION_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICE_PROTECTION_IDNull() {
                this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICE_PROTECTED_RATENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.PRICE_PROTECTED_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICE_PROTECTED_RATENull() {
                this[this.tableCustomerPriceLockInfo.PRICE_PROTECTED_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTIVATION_DATENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.ACTIVATION_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTIVATION_DATENull() {
                this[this.tableCustomerPriceLockInfo.ACTIVATION_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICE_PROTECT_START_DATENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.PRICE_PROTECT_START_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICE_PROTECT_START_DATENull() {
                this[this.tableCustomerPriceLockInfo.PRICE_PROTECT_START_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICE_PROTECTION_END_DATENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.PRICE_PROTECTION_END_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICE_PROTECTION_END_DATENull() {
                this[this.tableCustomerPriceLockInfo.PRICE_PROTECTION_END_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICE_PROTECT_DESCNull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.PRICE_PROTECT_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICE_PROTECT_DESCNull() {
                this[this.tableCustomerPriceLockInfo.PRICE_PROTECT_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMS_AND_CONDITIONS_IDNull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.TERMS_AND_CONDITIONS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMS_AND_CONDITIONS_IDNull() {
                this[this.tableCustomerPriceLockInfo.TERMS_AND_CONDITIONS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTIVATION_TIMENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.ACTIVATION_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTIVATION_TIMENull() {
                this[this.tableCustomerPriceLockInfo.ACTIVATION_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_CATEGORY_CODENull() {
                return this.IsNull(this.tableCustomerPriceLockInfo.SERVICE_CATEGORY_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_CATEGORY_CODENull() {
                this[this.tableCustomerPriceLockInfo.SERVICE_CATEGORY_CODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerAccountRowChangeEvent : global::System.EventArgs {
            
            private CustomerAccountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountRowChangeEvent(CustomerAccountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerCampaignRowChangeEvent : global::System.EventArgs {
            
            private CustomerCampaignRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerCampaignRowChangeEvent(CustomerCampaignRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerCampaignRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerContractRowChangeEvent : global::System.EventArgs {
            
            private CustomerContractRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerContractRowChangeEvent(CustomerContractRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerContractRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerPhoneRowChangeEvent : global::System.EventArgs {
            
            private CustomerPhoneRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPhoneRowChangeEvent(CustomerPhoneRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPhoneRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerPrivacyRowChangeEvent : global::System.EventArgs {
            
            private CustomerPrivacyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPrivacyRowChangeEvent(CustomerPrivacyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPrivacyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerMonthlyServiceAmountRowChangeEvent : global::System.EventArgs {
            
            private CustomerMonthlyServiceAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerMonthlyServiceAmountRowChangeEvent(CustomerMonthlyServiceAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerMonthlyServiceAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerEmailRowChangeEvent : global::System.EventArgs {
            
            private CustomerEmailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerEmailRowChangeEvent(CustomerEmailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerEmailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerServicesRowChangeEvent : global::System.EventArgs {
            
            private CustomerServicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServicesRowChangeEvent(CustomerServicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AccountMatchesRowChangeEvent : global::System.EventArgs {
            
            private AccountMatchesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountMatchesRowChangeEvent(AccountMatchesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccountMatchesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerPriceLockInfoRowChangeEvent : global::System.EventArgs {
            
            private CustomerPriceLockInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPriceLockInfoRowChangeEvent(CustomerPriceLockInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPriceLockInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591