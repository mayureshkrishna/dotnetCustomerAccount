//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Cox.DataAccess.Account {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class CustomerDetailsSchema : DataSet {
        
        private CustomerHSIDataDataTable tableCustomerHSIData;
        
        private CustomerPlanDataDataTable tableCustomerPlanData;
        
        private CustomerTelephoneDataDataTable tableCustomerTelephoneData;
        
        private CustomerCommentsDataDataTable tableCustomerCommentsData;
        
        public CustomerDetailsSchema() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected CustomerDetailsSchema(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomerHSIData"] != null)) {
                    this.Tables.Add(new CustomerHSIDataDataTable(ds.Tables["CustomerHSIData"]));
                }
                if ((ds.Tables["CustomerPlanData"] != null)) {
                    this.Tables.Add(new CustomerPlanDataDataTable(ds.Tables["CustomerPlanData"]));
                }
                if ((ds.Tables["CustomerTelephoneData"] != null)) {
                    this.Tables.Add(new CustomerTelephoneDataDataTable(ds.Tables["CustomerTelephoneData"]));
                }
                if ((ds.Tables["CustomerCommentsData"] != null)) {
                    this.Tables.Add(new CustomerCommentsDataDataTable(ds.Tables["CustomerCommentsData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerHSIDataDataTable CustomerHSIData {
            get {
                return this.tableCustomerHSIData;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerPlanDataDataTable CustomerPlanData {
            get {
                return this.tableCustomerPlanData;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerTelephoneDataDataTable CustomerTelephoneData {
            get {
                return this.tableCustomerTelephoneData;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerCommentsDataDataTable CustomerCommentsData {
            get {
                return this.tableCustomerCommentsData;
            }
        }
        
        public override DataSet Clone() {
            CustomerDetailsSchema cln = ((CustomerDetailsSchema)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["CustomerHSIData"] != null)) {
                this.Tables.Add(new CustomerHSIDataDataTable(ds.Tables["CustomerHSIData"]));
            }
            if ((ds.Tables["CustomerPlanData"] != null)) {
                this.Tables.Add(new CustomerPlanDataDataTable(ds.Tables["CustomerPlanData"]));
            }
            if ((ds.Tables["CustomerTelephoneData"] != null)) {
                this.Tables.Add(new CustomerTelephoneDataDataTable(ds.Tables["CustomerTelephoneData"]));
            }
            if ((ds.Tables["CustomerCommentsData"] != null)) {
                this.Tables.Add(new CustomerCommentsDataDataTable(ds.Tables["CustomerCommentsData"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableCustomerHSIData = ((CustomerHSIDataDataTable)(this.Tables["CustomerHSIData"]));
            if ((this.tableCustomerHSIData != null)) {
                this.tableCustomerHSIData.InitVars();
            }
            this.tableCustomerPlanData = ((CustomerPlanDataDataTable)(this.Tables["CustomerPlanData"]));
            if ((this.tableCustomerPlanData != null)) {
                this.tableCustomerPlanData.InitVars();
            }
            this.tableCustomerTelephoneData = ((CustomerTelephoneDataDataTable)(this.Tables["CustomerTelephoneData"]));
            if ((this.tableCustomerTelephoneData != null)) {
                this.tableCustomerTelephoneData.InitVars();
            }
            this.tableCustomerCommentsData = ((CustomerCommentsDataDataTable)(this.Tables["CustomerCommentsData"]));
            if ((this.tableCustomerCommentsData != null)) {
                this.tableCustomerCommentsData.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "CustomerDetailsSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CustomerDetailsSchema.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCustomerHSIData = new CustomerHSIDataDataTable();
            this.Tables.Add(this.tableCustomerHSIData);
            this.tableCustomerPlanData = new CustomerPlanDataDataTable();
            this.Tables.Add(this.tableCustomerPlanData);
            this.tableCustomerTelephoneData = new CustomerTelephoneDataDataTable();
            this.Tables.Add(this.tableCustomerTelephoneData);
            this.tableCustomerCommentsData = new CustomerCommentsDataDataTable();
            this.Tables.Add(this.tableCustomerCommentsData);
        }
        
        private bool ShouldSerializeCustomerHSIData() {
            return false;
        }
        
        private bool ShouldSerializeCustomerPlanData() {
            return false;
        }
        
        private bool ShouldSerializeCustomerTelephoneData() {
            return false;
        }
        
        private bool ShouldSerializeCustomerCommentsData() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void CustomerHSIDataRowChangeEventHandler(object sender, CustomerHSIDataRowChangeEvent e);
        
        public delegate void CustomerPlanDataRowChangeEventHandler(object sender, CustomerPlanDataRowChangeEvent e);
        
        public delegate void CustomerTelephoneDataRowChangeEventHandler(object sender, CustomerTelephoneDataRowChangeEvent e);
        
        public delegate void CustomerCommentsDataRowChangeEventHandler(object sender, CustomerCommentsDataRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerHSIDataDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnACCOUNT_NUMBER;
            
            private DataColumn columnSITE_ID;
            
            private DataColumn columnHSD_USER_LOGIN_ID;
            
            internal CustomerHSIDataDataTable() : 
                    base("CustomerHSIData") {
                this.InitClass();
            }
            
            internal CustomerHSIDataDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ACCOUNT_NUMBERColumn {
                get {
                    return this.columnACCOUNT_NUMBER;
                }
            }
            
            internal DataColumn SITE_IDColumn {
                get {
                    return this.columnSITE_ID;
                }
            }
            
            internal DataColumn HSD_USER_LOGIN_IDColumn {
                get {
                    return this.columnHSD_USER_LOGIN_ID;
                }
            }
            
            public CustomerHSIDataRow this[int index] {
                get {
                    return ((CustomerHSIDataRow)(this.Rows[index]));
                }
            }
            
            public event CustomerHSIDataRowChangeEventHandler CustomerHSIDataRowChanged;
            
            public event CustomerHSIDataRowChangeEventHandler CustomerHSIDataRowChanging;
            
            public event CustomerHSIDataRowChangeEventHandler CustomerHSIDataRowDeleted;
            
            public event CustomerHSIDataRowChangeEventHandler CustomerHSIDataRowDeleting;
            
            public void AddCustomerHSIDataRow(CustomerHSIDataRow row) {
                this.Rows.Add(row);
            }
            
            public CustomerHSIDataRow AddCustomerHSIDataRow(int ACCOUNT_NUMBER, int SITE_ID, string HSD_USER_LOGIN_ID) {
                CustomerHSIDataRow rowCustomerHSIDataRow = ((CustomerHSIDataRow)(this.NewRow()));
                rowCustomerHSIDataRow.ItemArray = new object[] {
                        ACCOUNT_NUMBER,
                        SITE_ID,
                        HSD_USER_LOGIN_ID};
                this.Rows.Add(rowCustomerHSIDataRow);
                return rowCustomerHSIDataRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CustomerHSIDataDataTable cln = ((CustomerHSIDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CustomerHSIDataDataTable();
            }
            
            internal void InitVars() {
                this.columnACCOUNT_NUMBER = this.Columns["ACCOUNT_NUMBER"];
                this.columnSITE_ID = this.Columns["SITE_ID"];
                this.columnHSD_USER_LOGIN_ID = this.Columns["HSD_USER_LOGIN_ID"];
            }
            
            private void InitClass() {
                this.columnACCOUNT_NUMBER = new DataColumn("ACCOUNT_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACCOUNT_NUMBER);
                this.columnSITE_ID = new DataColumn("SITE_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSITE_ID);
                this.columnHSD_USER_LOGIN_ID = new DataColumn("HSD_USER_LOGIN_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHSD_USER_LOGIN_ID);
            }
            
            public CustomerHSIDataRow NewCustomerHSIDataRow() {
                return ((CustomerHSIDataRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CustomerHSIDataRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CustomerHSIDataRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerHSIDataRowChanged != null)) {
                    this.CustomerHSIDataRowChanged(this, new CustomerHSIDataRowChangeEvent(((CustomerHSIDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerHSIDataRowChanging != null)) {
                    this.CustomerHSIDataRowChanging(this, new CustomerHSIDataRowChangeEvent(((CustomerHSIDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerHSIDataRowDeleted != null)) {
                    this.CustomerHSIDataRowDeleted(this, new CustomerHSIDataRowChangeEvent(((CustomerHSIDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerHSIDataRowDeleting != null)) {
                    this.CustomerHSIDataRowDeleting(this, new CustomerHSIDataRowChangeEvent(((CustomerHSIDataRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCustomerHSIDataRow(CustomerHSIDataRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerHSIDataRow : DataRow {
            
            private CustomerHSIDataDataTable tableCustomerHSIData;
            
            internal CustomerHSIDataRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerHSIData = ((CustomerHSIDataDataTable)(this.Table));
            }
            
            public int ACCOUNT_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableCustomerHSIData.ACCOUNT_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerHSIData.ACCOUNT_NUMBERColumn] = value;
                }
            }
            
            public int SITE_ID {
                get {
                    try {
                        return ((int)(this[this.tableCustomerHSIData.SITE_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerHSIData.SITE_IDColumn] = value;
                }
            }
            
            public string HSD_USER_LOGIN_ID {
                get {
                    try {
                        return ((string)(this[this.tableCustomerHSIData.HSD_USER_LOGIN_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerHSIData.HSD_USER_LOGIN_IDColumn] = value;
                }
            }
            
            public bool IsACCOUNT_NUMBERNull() {
                return this.IsNull(this.tableCustomerHSIData.ACCOUNT_NUMBERColumn);
            }
            
            public void SetACCOUNT_NUMBERNull() {
                this[this.tableCustomerHSIData.ACCOUNT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            public bool IsSITE_IDNull() {
                return this.IsNull(this.tableCustomerHSIData.SITE_IDColumn);
            }
            
            public void SetSITE_IDNull() {
                this[this.tableCustomerHSIData.SITE_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsHSD_USER_LOGIN_IDNull() {
                return this.IsNull(this.tableCustomerHSIData.HSD_USER_LOGIN_IDColumn);
            }
            
            public void SetHSD_USER_LOGIN_IDNull() {
                this[this.tableCustomerHSIData.HSD_USER_LOGIN_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerHSIDataRowChangeEvent : EventArgs {
            
            private CustomerHSIDataRow eventRow;
            
            private DataRowAction eventAction;
            
            public CustomerHSIDataRowChangeEvent(CustomerHSIDataRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CustomerHSIDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerPlanDataDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnPLN_ACCOUNT;
            
            private DataColumn columnSITE_ID;
            
            private DataColumn columnPLN_ASSIGNMENT_EXP_DATE;
            
            internal CustomerPlanDataDataTable() : 
                    base("CustomerPlanData") {
                this.InitClass();
            }
            
            internal CustomerPlanDataDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn PLN_ACCOUNTColumn {
                get {
                    return this.columnPLN_ACCOUNT;
                }
            }
            
            internal DataColumn SITE_IDColumn {
                get {
                    return this.columnSITE_ID;
                }
            }
            
            internal DataColumn PLN_ASSIGNMENT_EXP_DATEColumn {
                get {
                    return this.columnPLN_ASSIGNMENT_EXP_DATE;
                }
            }
            
            public CustomerPlanDataRow this[int index] {
                get {
                    return ((CustomerPlanDataRow)(this.Rows[index]));
                }
            }
            
            public event CustomerPlanDataRowChangeEventHandler CustomerPlanDataRowChanged;
            
            public event CustomerPlanDataRowChangeEventHandler CustomerPlanDataRowChanging;
            
            public event CustomerPlanDataRowChangeEventHandler CustomerPlanDataRowDeleted;
            
            public event CustomerPlanDataRowChangeEventHandler CustomerPlanDataRowDeleting;
            
            public void AddCustomerPlanDataRow(CustomerPlanDataRow row) {
                this.Rows.Add(row);
            }
            
            public CustomerPlanDataRow AddCustomerPlanDataRow(int PLN_ACCOUNT, int SITE_ID, int PLN_ASSIGNMENT_EXP_DATE) {
                CustomerPlanDataRow rowCustomerPlanDataRow = ((CustomerPlanDataRow)(this.NewRow()));
                rowCustomerPlanDataRow.ItemArray = new object[] {
                        PLN_ACCOUNT,
                        SITE_ID,
                        PLN_ASSIGNMENT_EXP_DATE};
                this.Rows.Add(rowCustomerPlanDataRow);
                return rowCustomerPlanDataRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CustomerPlanDataDataTable cln = ((CustomerPlanDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CustomerPlanDataDataTable();
            }
            
            internal void InitVars() {
                this.columnPLN_ACCOUNT = this.Columns["PLN_ACCOUNT"];
                this.columnSITE_ID = this.Columns["SITE_ID"];
                this.columnPLN_ASSIGNMENT_EXP_DATE = this.Columns["PLN_ASSIGNMENT_EXP_DATE"];
            }
            
            private void InitClass() {
                this.columnPLN_ACCOUNT = new DataColumn("PLN_ACCOUNT", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPLN_ACCOUNT);
                this.columnSITE_ID = new DataColumn("SITE_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSITE_ID);
                this.columnPLN_ASSIGNMENT_EXP_DATE = new DataColumn("PLN_ASSIGNMENT_EXP_DATE", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPLN_ASSIGNMENT_EXP_DATE);
            }
            
            public CustomerPlanDataRow NewCustomerPlanDataRow() {
                return ((CustomerPlanDataRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CustomerPlanDataRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CustomerPlanDataRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerPlanDataRowChanged != null)) {
                    this.CustomerPlanDataRowChanged(this, new CustomerPlanDataRowChangeEvent(((CustomerPlanDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerPlanDataRowChanging != null)) {
                    this.CustomerPlanDataRowChanging(this, new CustomerPlanDataRowChangeEvent(((CustomerPlanDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerPlanDataRowDeleted != null)) {
                    this.CustomerPlanDataRowDeleted(this, new CustomerPlanDataRowChangeEvent(((CustomerPlanDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerPlanDataRowDeleting != null)) {
                    this.CustomerPlanDataRowDeleting(this, new CustomerPlanDataRowChangeEvent(((CustomerPlanDataRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCustomerPlanDataRow(CustomerPlanDataRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerPlanDataRow : DataRow {
            
            private CustomerPlanDataDataTable tableCustomerPlanData;
            
            internal CustomerPlanDataRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerPlanData = ((CustomerPlanDataDataTable)(this.Table));
            }
            
            public int PLN_ACCOUNT {
                get {
                    try {
                        return ((int)(this[this.tableCustomerPlanData.PLN_ACCOUNTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPlanData.PLN_ACCOUNTColumn] = value;
                }
            }
            
            public int SITE_ID {
                get {
                    try {
                        return ((int)(this[this.tableCustomerPlanData.SITE_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPlanData.SITE_IDColumn] = value;
                }
            }
            
            public int PLN_ASSIGNMENT_EXP_DATE {
                get {
                    try {
                        return ((int)(this[this.tableCustomerPlanData.PLN_ASSIGNMENT_EXP_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPlanData.PLN_ASSIGNMENT_EXP_DATEColumn] = value;
                }
            }
            
            public bool IsPLN_ACCOUNTNull() {
                return this.IsNull(this.tableCustomerPlanData.PLN_ACCOUNTColumn);
            }
            
            public void SetPLN_ACCOUNTNull() {
                this[this.tableCustomerPlanData.PLN_ACCOUNTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSITE_IDNull() {
                return this.IsNull(this.tableCustomerPlanData.SITE_IDColumn);
            }
            
            public void SetSITE_IDNull() {
                this[this.tableCustomerPlanData.SITE_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPLN_ASSIGNMENT_EXP_DATENull() {
                return this.IsNull(this.tableCustomerPlanData.PLN_ASSIGNMENT_EXP_DATEColumn);
            }
            
            public void SetPLN_ASSIGNMENT_EXP_DATENull() {
                this[this.tableCustomerPlanData.PLN_ASSIGNMENT_EXP_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerPlanDataRowChangeEvent : EventArgs {
            
            private CustomerPlanDataRow eventRow;
            
            private DataRowAction eventAction;
            
            public CustomerPlanDataRowChangeEvent(CustomerPlanDataRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CustomerPlanDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerTelephoneDataDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnACCOUNT_NUMBER;
            
            private DataColumn columnSITE_ID;
            
            private DataColumn columnTN_CHARACTER_STRING;
            
            private DataColumn columntoll_carrier;
            
            private DataColumn columnintra_lata_carrier;
            
            private DataColumn columnCNAM_pres_ind;
            
            private DataColumn columnCUSTOMER_TN_TYPE_ID;
            
            internal CustomerTelephoneDataDataTable() : 
                    base("CustomerTelephoneData") {
                this.InitClass();
            }
            
            internal CustomerTelephoneDataDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ACCOUNT_NUMBERColumn {
                get {
                    return this.columnACCOUNT_NUMBER;
                }
            }
            
            internal DataColumn SITE_IDColumn {
                get {
                    return this.columnSITE_ID;
                }
            }
            
            internal DataColumn TN_CHARACTER_STRINGColumn {
                get {
                    return this.columnTN_CHARACTER_STRING;
                }
            }
            
            internal DataColumn toll_carrierColumn {
                get {
                    return this.columntoll_carrier;
                }
            }
            
            internal DataColumn intra_lata_carrierColumn {
                get {
                    return this.columnintra_lata_carrier;
                }
            }
            
            internal DataColumn CNAM_pres_indColumn {
                get {
                    return this.columnCNAM_pres_ind;
                }
            }
            
            internal DataColumn CUSTOMER_TN_TYPE_IDColumn {
                get {
                    return this.columnCUSTOMER_TN_TYPE_ID;
                }
            }
            
            public CustomerTelephoneDataRow this[int index] {
                get {
                    return ((CustomerTelephoneDataRow)(this.Rows[index]));
                }
            }
            
            public event CustomerTelephoneDataRowChangeEventHandler CustomerTelephoneDataRowChanged;
            
            public event CustomerTelephoneDataRowChangeEventHandler CustomerTelephoneDataRowChanging;
            
            public event CustomerTelephoneDataRowChangeEventHandler CustomerTelephoneDataRowDeleted;
            
            public event CustomerTelephoneDataRowChangeEventHandler CustomerTelephoneDataRowDeleting;
            
            public void AddCustomerTelephoneDataRow(CustomerTelephoneDataRow row) {
                this.Rows.Add(row);
            }
            
            public CustomerTelephoneDataRow AddCustomerTelephoneDataRow(int ACCOUNT_NUMBER, int SITE_ID, string TN_CHARACTER_STRING, string toll_carrier, string intra_lata_carrier, string CNAM_pres_ind, string CUSTOMER_TN_TYPE_ID) {
                CustomerTelephoneDataRow rowCustomerTelephoneDataRow = ((CustomerTelephoneDataRow)(this.NewRow()));
                rowCustomerTelephoneDataRow.ItemArray = new object[] {
                        ACCOUNT_NUMBER,
                        SITE_ID,
                        TN_CHARACTER_STRING,
                        toll_carrier,
                        intra_lata_carrier,
                        CNAM_pres_ind,
                        CUSTOMER_TN_TYPE_ID};
                this.Rows.Add(rowCustomerTelephoneDataRow);
                return rowCustomerTelephoneDataRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CustomerTelephoneDataDataTable cln = ((CustomerTelephoneDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CustomerTelephoneDataDataTable();
            }
            
            internal void InitVars() {
                this.columnACCOUNT_NUMBER = this.Columns["ACCOUNT_NUMBER"];
                this.columnSITE_ID = this.Columns["SITE_ID"];
                this.columnTN_CHARACTER_STRING = this.Columns["TN_CHARACTER_STRING"];
                this.columntoll_carrier = this.Columns["toll_carrier"];
                this.columnintra_lata_carrier = this.Columns["intra_lata_carrier"];
                this.columnCNAM_pres_ind = this.Columns["CNAM_pres_ind"];
                this.columnCUSTOMER_TN_TYPE_ID = this.Columns["CUSTOMER_TN_TYPE_ID"];
            }
            
            private void InitClass() {
                this.columnACCOUNT_NUMBER = new DataColumn("ACCOUNT_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACCOUNT_NUMBER);
                this.columnSITE_ID = new DataColumn("SITE_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSITE_ID);
                this.columnTN_CHARACTER_STRING = new DataColumn("TN_CHARACTER_STRING", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTN_CHARACTER_STRING);
                this.columntoll_carrier = new DataColumn("toll_carrier", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntoll_carrier);
                this.columnintra_lata_carrier = new DataColumn("intra_lata_carrier", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnintra_lata_carrier);
                this.columnCNAM_pres_ind = new DataColumn("CNAM_pres_ind", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCNAM_pres_ind);
                this.columnCUSTOMER_TN_TYPE_ID = new DataColumn("CUSTOMER_TN_TYPE_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCUSTOMER_TN_TYPE_ID);
            }
            
            public CustomerTelephoneDataRow NewCustomerTelephoneDataRow() {
                return ((CustomerTelephoneDataRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CustomerTelephoneDataRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CustomerTelephoneDataRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerTelephoneDataRowChanged != null)) {
                    this.CustomerTelephoneDataRowChanged(this, new CustomerTelephoneDataRowChangeEvent(((CustomerTelephoneDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerTelephoneDataRowChanging != null)) {
                    this.CustomerTelephoneDataRowChanging(this, new CustomerTelephoneDataRowChangeEvent(((CustomerTelephoneDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerTelephoneDataRowDeleted != null)) {
                    this.CustomerTelephoneDataRowDeleted(this, new CustomerTelephoneDataRowChangeEvent(((CustomerTelephoneDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerTelephoneDataRowDeleting != null)) {
                    this.CustomerTelephoneDataRowDeleting(this, new CustomerTelephoneDataRowChangeEvent(((CustomerTelephoneDataRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCustomerTelephoneDataRow(CustomerTelephoneDataRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerTelephoneDataRow : DataRow {
            
            private CustomerTelephoneDataDataTable tableCustomerTelephoneData;
            
            internal CustomerTelephoneDataRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerTelephoneData = ((CustomerTelephoneDataDataTable)(this.Table));
            }
            
            public int ACCOUNT_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableCustomerTelephoneData.ACCOUNT_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerTelephoneData.ACCOUNT_NUMBERColumn] = value;
                }
            }
            
            public int SITE_ID {
                get {
                    try {
                        return ((int)(this[this.tableCustomerTelephoneData.SITE_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerTelephoneData.SITE_IDColumn] = value;
                }
            }
            
            public string TN_CHARACTER_STRING {
                get {
                    try {
                        return ((string)(this[this.tableCustomerTelephoneData.TN_CHARACTER_STRINGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerTelephoneData.TN_CHARACTER_STRINGColumn] = value;
                }
            }
            
            public string toll_carrier {
                get {
                    try {
                        return ((string)(this[this.tableCustomerTelephoneData.toll_carrierColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerTelephoneData.toll_carrierColumn] = value;
                }
            }
            
            public string intra_lata_carrier {
                get {
                    try {
                        return ((string)(this[this.tableCustomerTelephoneData.intra_lata_carrierColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerTelephoneData.intra_lata_carrierColumn] = value;
                }
            }
            
            public string CNAM_pres_ind {
                get {
                    try {
                        return ((string)(this[this.tableCustomerTelephoneData.CNAM_pres_indColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerTelephoneData.CNAM_pres_indColumn] = value;
                }
            }
            
            public string CUSTOMER_TN_TYPE_ID {
                get {
                    try {
                        return ((string)(this[this.tableCustomerTelephoneData.CUSTOMER_TN_TYPE_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerTelephoneData.CUSTOMER_TN_TYPE_IDColumn] = value;
                }
            }
            
            public bool IsACCOUNT_NUMBERNull() {
                return this.IsNull(this.tableCustomerTelephoneData.ACCOUNT_NUMBERColumn);
            }
            
            public void SetACCOUNT_NUMBERNull() {
                this[this.tableCustomerTelephoneData.ACCOUNT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            public bool IsSITE_IDNull() {
                return this.IsNull(this.tableCustomerTelephoneData.SITE_IDColumn);
            }
            
            public void SetSITE_IDNull() {
                this[this.tableCustomerTelephoneData.SITE_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTN_CHARACTER_STRINGNull() {
                return this.IsNull(this.tableCustomerTelephoneData.TN_CHARACTER_STRINGColumn);
            }
            
            public void SetTN_CHARACTER_STRINGNull() {
                this[this.tableCustomerTelephoneData.TN_CHARACTER_STRINGColumn] = System.Convert.DBNull;
            }
            
            public bool Istoll_carrierNull() {
                return this.IsNull(this.tableCustomerTelephoneData.toll_carrierColumn);
            }
            
            public void Settoll_carrierNull() {
                this[this.tableCustomerTelephoneData.toll_carrierColumn] = System.Convert.DBNull;
            }
            
            public bool Isintra_lata_carrierNull() {
                return this.IsNull(this.tableCustomerTelephoneData.intra_lata_carrierColumn);
            }
            
            public void Setintra_lata_carrierNull() {
                this[this.tableCustomerTelephoneData.intra_lata_carrierColumn] = System.Convert.DBNull;
            }
            
            public bool IsCNAM_pres_indNull() {
                return this.IsNull(this.tableCustomerTelephoneData.CNAM_pres_indColumn);
            }
            
            public void SetCNAM_pres_indNull() {
                this[this.tableCustomerTelephoneData.CNAM_pres_indColumn] = System.Convert.DBNull;
            }
            
            public bool IsCUSTOMER_TN_TYPE_IDNull() {
                return this.IsNull(this.tableCustomerTelephoneData.CUSTOMER_TN_TYPE_IDColumn);
            }
            
            public void SetCUSTOMER_TN_TYPE_IDNull() {
                this[this.tableCustomerTelephoneData.CUSTOMER_TN_TYPE_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerTelephoneDataRowChangeEvent : EventArgs {
            
            private CustomerTelephoneDataRow eventRow;
            
            private DataRowAction eventAction;
            
            public CustomerTelephoneDataRowChangeEvent(CustomerTelephoneDataRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CustomerTelephoneDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerCommentsDataDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnACCOUNT_NUMBER;
            
            private DataColumn columnSITE_ID;
            
            private DataColumn columnCOMMENT_ENTER_DATE;
            
            private DataColumn columnCOMMENT_LINE;
            
            private DataColumn columnUSER_ID;
            
            private DataColumn columnSEQUENCE_NUMBER;
            
            internal CustomerCommentsDataDataTable() : 
                    base("CustomerCommentsData") {
                this.InitClass();
            }
            
            internal CustomerCommentsDataDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ACCOUNT_NUMBERColumn {
                get {
                    return this.columnACCOUNT_NUMBER;
                }
            }
            
            internal DataColumn SITE_IDColumn {
                get {
                    return this.columnSITE_ID;
                }
            }
            
            internal DataColumn COMMENT_ENTER_DATEColumn {
                get {
                    return this.columnCOMMENT_ENTER_DATE;
                }
            }
            
            internal DataColumn COMMENT_LINEColumn {
                get {
                    return this.columnCOMMENT_LINE;
                }
            }
            
            internal DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            internal DataColumn SEQUENCE_NUMBERColumn {
                get {
                    return this.columnSEQUENCE_NUMBER;
                }
            }
            
            public CustomerCommentsDataRow this[int index] {
                get {
                    return ((CustomerCommentsDataRow)(this.Rows[index]));
                }
            }
            
            public event CustomerCommentsDataRowChangeEventHandler CustomerCommentsDataRowChanged;
            
            public event CustomerCommentsDataRowChangeEventHandler CustomerCommentsDataRowChanging;
            
            public event CustomerCommentsDataRowChangeEventHandler CustomerCommentsDataRowDeleted;
            
            public event CustomerCommentsDataRowChangeEventHandler CustomerCommentsDataRowDeleting;
            
            public void AddCustomerCommentsDataRow(CustomerCommentsDataRow row) {
                this.Rows.Add(row);
            }
            
            public CustomerCommentsDataRow AddCustomerCommentsDataRow(int ACCOUNT_NUMBER, int SITE_ID, int COMMENT_ENTER_DATE, string COMMENT_LINE, string USER_ID, int SEQUENCE_NUMBER) {
                CustomerCommentsDataRow rowCustomerCommentsDataRow = ((CustomerCommentsDataRow)(this.NewRow()));
                rowCustomerCommentsDataRow.ItemArray = new object[] {
                        ACCOUNT_NUMBER,
                        SITE_ID,
                        COMMENT_ENTER_DATE,
                        COMMENT_LINE,
                        USER_ID,
                        SEQUENCE_NUMBER};
                this.Rows.Add(rowCustomerCommentsDataRow);
                return rowCustomerCommentsDataRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CustomerCommentsDataDataTable cln = ((CustomerCommentsDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CustomerCommentsDataDataTable();
            }
            
            internal void InitVars() {
                this.columnACCOUNT_NUMBER = this.Columns["ACCOUNT_NUMBER"];
                this.columnSITE_ID = this.Columns["SITE_ID"];
                this.columnCOMMENT_ENTER_DATE = this.Columns["COMMENT_ENTER_DATE"];
                this.columnCOMMENT_LINE = this.Columns["COMMENT_LINE"];
                this.columnUSER_ID = this.Columns["USER_ID"];
                this.columnSEQUENCE_NUMBER = this.Columns["SEQUENCE_NUMBER"];
            }
            
            private void InitClass() {
                this.columnACCOUNT_NUMBER = new DataColumn("ACCOUNT_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACCOUNT_NUMBER);
                this.columnSITE_ID = new DataColumn("SITE_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSITE_ID);
                this.columnCOMMENT_ENTER_DATE = new DataColumn("COMMENT_ENTER_DATE", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMMENT_ENTER_DATE);
                this.columnCOMMENT_LINE = new DataColumn("COMMENT_LINE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMMENT_LINE);
                this.columnUSER_ID = new DataColumn("USER_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUSER_ID);
                this.columnSEQUENCE_NUMBER = new DataColumn("SEQUENCE_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSEQUENCE_NUMBER);
            }
            
            public CustomerCommentsDataRow NewCustomerCommentsDataRow() {
                return ((CustomerCommentsDataRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CustomerCommentsDataRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CustomerCommentsDataRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerCommentsDataRowChanged != null)) {
                    this.CustomerCommentsDataRowChanged(this, new CustomerCommentsDataRowChangeEvent(((CustomerCommentsDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerCommentsDataRowChanging != null)) {
                    this.CustomerCommentsDataRowChanging(this, new CustomerCommentsDataRowChangeEvent(((CustomerCommentsDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerCommentsDataRowDeleted != null)) {
                    this.CustomerCommentsDataRowDeleted(this, new CustomerCommentsDataRowChangeEvent(((CustomerCommentsDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerCommentsDataRowDeleting != null)) {
                    this.CustomerCommentsDataRowDeleting(this, new CustomerCommentsDataRowChangeEvent(((CustomerCommentsDataRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCustomerCommentsDataRow(CustomerCommentsDataRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerCommentsDataRow : DataRow {
            
            private CustomerCommentsDataDataTable tableCustomerCommentsData;
            
            internal CustomerCommentsDataRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerCommentsData = ((CustomerCommentsDataDataTable)(this.Table));
            }
            
            public int ACCOUNT_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableCustomerCommentsData.ACCOUNT_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCommentsData.ACCOUNT_NUMBERColumn] = value;
                }
            }
            
            public int SITE_ID {
                get {
                    try {
                        return ((int)(this[this.tableCustomerCommentsData.SITE_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCommentsData.SITE_IDColumn] = value;
                }
            }
            
            public int COMMENT_ENTER_DATE {
                get {
                    try {
                        return ((int)(this[this.tableCustomerCommentsData.COMMENT_ENTER_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCommentsData.COMMENT_ENTER_DATEColumn] = value;
                }
            }
            
            public string COMMENT_LINE {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCommentsData.COMMENT_LINEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCommentsData.COMMENT_LINEColumn] = value;
                }
            }
            
            public string USER_ID {
                get {
                    try {
                        return ((string)(this[this.tableCustomerCommentsData.USER_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCommentsData.USER_IDColumn] = value;
                }
            }
            
            public int SEQUENCE_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableCustomerCommentsData.SEQUENCE_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerCommentsData.SEQUENCE_NUMBERColumn] = value;
                }
            }
            
            public bool IsACCOUNT_NUMBERNull() {
                return this.IsNull(this.tableCustomerCommentsData.ACCOUNT_NUMBERColumn);
            }
            
            public void SetACCOUNT_NUMBERNull() {
                this[this.tableCustomerCommentsData.ACCOUNT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            public bool IsSITE_IDNull() {
                return this.IsNull(this.tableCustomerCommentsData.SITE_IDColumn);
            }
            
            public void SetSITE_IDNull() {
                this[this.tableCustomerCommentsData.SITE_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMMENT_ENTER_DATENull() {
                return this.IsNull(this.tableCustomerCommentsData.COMMENT_ENTER_DATEColumn);
            }
            
            public void SetCOMMENT_ENTER_DATENull() {
                this[this.tableCustomerCommentsData.COMMENT_ENTER_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMMENT_LINENull() {
                return this.IsNull(this.tableCustomerCommentsData.COMMENT_LINEColumn);
            }
            
            public void SetCOMMENT_LINENull() {
                this[this.tableCustomerCommentsData.COMMENT_LINEColumn] = System.Convert.DBNull;
            }
            
            public bool IsUSER_IDNull() {
                return this.IsNull(this.tableCustomerCommentsData.USER_IDColumn);
            }
            
            public void SetUSER_IDNull() {
                this[this.tableCustomerCommentsData.USER_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSEQUENCE_NUMBERNull() {
                return this.IsNull(this.tableCustomerCommentsData.SEQUENCE_NUMBERColumn);
            }
            
            public void SetSEQUENCE_NUMBERNull() {
                this[this.tableCustomerCommentsData.SEQUENCE_NUMBERColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CustomerCommentsDataRowChangeEvent : EventArgs {
            
            private CustomerCommentsDataRow eventRow;
            
            private DataRowAction eventAction;
            
            public CustomerCommentsDataRowChangeEvent(CustomerCommentsDataRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CustomerCommentsDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
