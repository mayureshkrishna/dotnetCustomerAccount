//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Cox.DataAccess.Account {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DetailedWorkOrderSchema")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DetailedWorkOrderSchema : System.Data.DataSet {
        
        private WorkOrderDataTable tableWorkOrder;
        
        private WorkOrderDetailDataTable tableWorkOrderDetail;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetailedWorkOrderSchema() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DetailedWorkOrderSchema(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["WorkOrder"] != null)) {
                    base.Tables.Add(new WorkOrderDataTable(ds.Tables["WorkOrder"]));
                }
                if ((ds.Tables["WorkOrderDetail"] != null)) {
                    base.Tables.Add(new WorkOrderDetailDataTable(ds.Tables["WorkOrderDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkOrderDataTable WorkOrder {
            get {
                return this.tableWorkOrder;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkOrderDetailDataTable WorkOrderDetail {
            get {
                return this.tableWorkOrderDetail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DetailedWorkOrderSchema cln = ((DetailedWorkOrderSchema)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WorkOrder"] != null)) {
                    base.Tables.Add(new WorkOrderDataTable(ds.Tables["WorkOrder"]));
                }
                if ((ds.Tables["WorkOrderDetail"] != null)) {
                    base.Tables.Add(new WorkOrderDetailDataTable(ds.Tables["WorkOrderDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableWorkOrder = ((WorkOrderDataTable)(base.Tables["WorkOrder"]));
            if ((initTable == true)) {
                if ((this.tableWorkOrder != null)) {
                    this.tableWorkOrder.InitVars();
                }
            }
            this.tableWorkOrderDetail = ((WorkOrderDetailDataTable)(base.Tables["WorkOrderDetail"]));
            if ((initTable == true)) {
                if ((this.tableWorkOrderDetail != null)) {
                    this.tableWorkOrderDetail.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DetailedWorkOrderSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DetailedWorkOrderSchema.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWorkOrder = new WorkOrderDataTable();
            base.Tables.Add(this.tableWorkOrder);
            this.tableWorkOrderDetail = new WorkOrderDetailDataTable();
            base.Tables.Add(this.tableWorkOrderDetail);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkOrder() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkOrderDetail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DetailedWorkOrderSchema ds = new DetailedWorkOrderSchema();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void WorkOrderRowChangeEventHandler(object sender, WorkOrderRowChangeEvent e);
        
        public delegate void WorkOrderDetailRowChangeEventHandler(object sender, WorkOrderDetailRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkOrderDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnWORK_ORDER_NUMBER;
            
            private System.Data.DataColumn columnACCOUNT_NUMBER;
            
            private System.Data.DataColumn columnDATE_ENTERED;
            
            private System.Data.DataColumn columnSALESMAN_NUMBER;
            
            private System.Data.DataColumn columnWO_COMMENT_LINE_01;
            
            private System.Data.DataColumn columnWO_COMMENT_LINE_02;
            
            private System.Data.DataColumn columnWO_COMMENT_LINE_03;
            
            private System.Data.DataColumn columnSALES_REASON;
            
            private System.Data.DataColumn columnQ_CODE;
            
            private System.Data.DataColumn columnPROBLEM_CODE_01;
            
            private System.Data.DataColumn columnPROBLEM_CODE_02;
            
            private System.Data.DataColumn columnPROBLEM_CODE_03;
            
            private System.Data.DataColumn columnPROBLEM_CODE_04;
            
            private System.Data.DataColumn columnPROBLEM_CODE_05;
            
            private System.Data.DataColumn columnSCHEDULE_DATE;
            
            private System.Data.DataColumn columnTIME_SLOT;
            
            private System.Data.DataColumn columnSTAGE_CODE;
            
            private System.Data.DataColumn columnCAMPAIGN_CODE;
            
            private System.Data.DataColumn columnFIRST_NAME;
            
            private System.Data.DataColumn columnLAST_NAME;
            
            private System.Data.DataColumn columnMONTHLY_AMOUNT;
            
            private System.Data.DataColumn columnADDR_LOCATION;
            
            private System.Data.DataColumn columnSTREET;
            
            private System.Data.DataColumn columnADDR_CITY;
            
            private System.Data.DataColumn columnADDR_STATE;
            
            private System.Data.DataColumn columnADDR_ZIP_5;
            
            private System.Data.DataColumn columnAPARTMENT;
            
            private System.Data.DataColumn columnDWELLING_TYPE;
            
            private System.Data.DataColumn columnSIGNAL_ACCESS_CODE;
            
            private System.Data.DataColumn columnUNSERVICEABLE_ADDRESS;
            
            private System.Data.DataColumn columnREPLACE_DROP_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDataTable() {
                this.TableName = "WorkOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkOrderDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WORK_ORDER_NUMBERColumn {
                get {
                    return this.columnWORK_ORDER_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_NUMBERColumn {
                get {
                    return this.columnACCOUNT_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_ENTEREDColumn {
                get {
                    return this.columnDATE_ENTERED;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SALESMAN_NUMBERColumn {
                get {
                    return this.columnSALESMAN_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_COMMENT_LINE_01Column {
                get {
                    return this.columnWO_COMMENT_LINE_01;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_COMMENT_LINE_02Column {
                get {
                    return this.columnWO_COMMENT_LINE_02;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_COMMENT_LINE_03Column {
                get {
                    return this.columnWO_COMMENT_LINE_03;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SALES_REASONColumn {
                get {
                    return this.columnSALES_REASON;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Q_CODEColumn {
                get {
                    return this.columnQ_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROBLEM_CODE_01Column {
                get {
                    return this.columnPROBLEM_CODE_01;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROBLEM_CODE_02Column {
                get {
                    return this.columnPROBLEM_CODE_02;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROBLEM_CODE_03Column {
                get {
                    return this.columnPROBLEM_CODE_03;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROBLEM_CODE_04Column {
                get {
                    return this.columnPROBLEM_CODE_04;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROBLEM_CODE_05Column {
                get {
                    return this.columnPROBLEM_CODE_05;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SCHEDULE_DATEColumn {
                get {
                    return this.columnSCHEDULE_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIME_SLOTColumn {
                get {
                    return this.columnTIME_SLOT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STAGE_CODEColumn {
                get {
                    return this.columnSTAGE_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CAMPAIGN_CODEColumn {
                get {
                    return this.columnCAMPAIGN_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FIRST_NAMEColumn {
                get {
                    return this.columnFIRST_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LAST_NAMEColumn {
                get {
                    return this.columnLAST_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MONTHLY_AMOUNTColumn {
                get {
                    return this.columnMONTHLY_AMOUNT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADDR_LOCATIONColumn {
                get {
                    return this.columnADDR_LOCATION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STREETColumn {
                get {
                    return this.columnSTREET;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADDR_CITYColumn {
                get {
                    return this.columnADDR_CITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADDR_STATEColumn {
                get {
                    return this.columnADDR_STATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADDR_ZIP_5Column {
                get {
                    return this.columnADDR_ZIP_5;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn APARTMENTColumn {
                get {
                    return this.columnAPARTMENT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DWELLING_TYPEColumn {
                get {
                    return this.columnDWELLING_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SIGNAL_ACCESS_CODEColumn {
                get {
                    return this.columnSIGNAL_ACCESS_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UNSERVICEABLE_ADDRESSColumn {
                get {
                    return this.columnUNSERVICEABLE_ADDRESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REPLACE_DROP_DATEColumn {
                get {
                    return this.columnREPLACE_DROP_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderRow this[int index] {
                get {
                    return ((WorkOrderRow)(this.Rows[index]));
                }
            }
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowChanging;
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowChanged;
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowDeleting;
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkOrderRow(WorkOrderRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderRow AddWorkOrderRow(
                        int WORK_ORDER_NUMBER, 
                        int ACCOUNT_NUMBER, 
                        int DATE_ENTERED, 
                        int SALESMAN_NUMBER, 
                        string WO_COMMENT_LINE_01, 
                        string WO_COMMENT_LINE_02, 
                        string WO_COMMENT_LINE_03, 
                        string SALES_REASON, 
                        string Q_CODE, 
                        string PROBLEM_CODE_01, 
                        string PROBLEM_CODE_02, 
                        string PROBLEM_CODE_03, 
                        string PROBLEM_CODE_04, 
                        string PROBLEM_CODE_05, 
                        int SCHEDULE_DATE, 
                        string TIME_SLOT, 
                        string STAGE_CODE, 
                        string CAMPAIGN_CODE, 
                        string FIRST_NAME, 
                        string LAST_NAME, 
                        double MONTHLY_AMOUNT, 
                        string ADDR_LOCATION, 
                        string STREET, 
                        string ADDR_CITY, 
                        string ADDR_STATE, 
                        string ADDR_ZIP_5, 
                        string APARTMENT, 
                        string DWELLING_TYPE, 
                        string SIGNAL_ACCESS_CODE, 
                        string UNSERVICEABLE_ADDRESS, 
                        int REPLACE_DROP_DATE) {
                WorkOrderRow rowWorkOrderRow = ((WorkOrderRow)(this.NewRow()));
                rowWorkOrderRow.ItemArray = new object[] {
                        WORK_ORDER_NUMBER,
                        ACCOUNT_NUMBER,
                        DATE_ENTERED,
                        SALESMAN_NUMBER,
                        WO_COMMENT_LINE_01,
                        WO_COMMENT_LINE_02,
                        WO_COMMENT_LINE_03,
                        SALES_REASON,
                        Q_CODE,
                        PROBLEM_CODE_01,
                        PROBLEM_CODE_02,
                        PROBLEM_CODE_03,
                        PROBLEM_CODE_04,
                        PROBLEM_CODE_05,
                        SCHEDULE_DATE,
                        TIME_SLOT,
                        STAGE_CODE,
                        CAMPAIGN_CODE,
                        FIRST_NAME,
                        LAST_NAME,
                        MONTHLY_AMOUNT,
                        ADDR_LOCATION,
                        STREET,
                        ADDR_CITY,
                        ADDR_STATE,
                        ADDR_ZIP_5,
                        APARTMENT,
                        DWELLING_TYPE,
                        SIGNAL_ACCESS_CODE,
                        UNSERVICEABLE_ADDRESS,
                        REPLACE_DROP_DATE};
                this.Rows.Add(rowWorkOrderRow);
                return rowWorkOrderRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                WorkOrderDataTable cln = ((WorkOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new WorkOrderDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWORK_ORDER_NUMBER = base.Columns["WORK_ORDER_NUMBER"];
                this.columnACCOUNT_NUMBER = base.Columns["ACCOUNT_NUMBER"];
                this.columnDATE_ENTERED = base.Columns["DATE_ENTERED"];
                this.columnSALESMAN_NUMBER = base.Columns["SALESMAN_NUMBER"];
                this.columnWO_COMMENT_LINE_01 = base.Columns["WO_COMMENT_LINE_01"];
                this.columnWO_COMMENT_LINE_02 = base.Columns["WO_COMMENT_LINE_02"];
                this.columnWO_COMMENT_LINE_03 = base.Columns["WO_COMMENT_LINE_03"];
                this.columnSALES_REASON = base.Columns["SALES_REASON"];
                this.columnQ_CODE = base.Columns["Q_CODE"];
                this.columnPROBLEM_CODE_01 = base.Columns["PROBLEM_CODE_01"];
                this.columnPROBLEM_CODE_02 = base.Columns["PROBLEM_CODE_02"];
                this.columnPROBLEM_CODE_03 = base.Columns["PROBLEM_CODE_03"];
                this.columnPROBLEM_CODE_04 = base.Columns["PROBLEM_CODE_04"];
                this.columnPROBLEM_CODE_05 = base.Columns["PROBLEM_CODE_05"];
                this.columnSCHEDULE_DATE = base.Columns["SCHEDULE_DATE"];
                this.columnTIME_SLOT = base.Columns["TIME_SLOT"];
                this.columnSTAGE_CODE = base.Columns["STAGE_CODE"];
                this.columnCAMPAIGN_CODE = base.Columns["CAMPAIGN_CODE"];
                this.columnFIRST_NAME = base.Columns["FIRST_NAME"];
                this.columnLAST_NAME = base.Columns["LAST_NAME"];
                this.columnMONTHLY_AMOUNT = base.Columns["MONTHLY_AMOUNT"];
                this.columnADDR_LOCATION = base.Columns["ADDR_LOCATION"];
                this.columnSTREET = base.Columns["STREET"];
                this.columnADDR_CITY = base.Columns["ADDR_CITY"];
                this.columnADDR_STATE = base.Columns["ADDR_STATE"];
                this.columnADDR_ZIP_5 = base.Columns["ADDR_ZIP_5"];
                this.columnAPARTMENT = base.Columns["APARTMENT"];
                this.columnDWELLING_TYPE = base.Columns["DWELLING_TYPE"];
                this.columnSIGNAL_ACCESS_CODE = base.Columns["SIGNAL_ACCESS_CODE"];
                this.columnUNSERVICEABLE_ADDRESS = base.Columns["UNSERVICEABLE_ADDRESS"];
                this.columnREPLACE_DROP_DATE = base.Columns["REPLACE_DROP_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWORK_ORDER_NUMBER = new System.Data.DataColumn("WORK_ORDER_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_ORDER_NUMBER);
                this.columnACCOUNT_NUMBER = new System.Data.DataColumn("ACCOUNT_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NUMBER);
                this.columnDATE_ENTERED = new System.Data.DataColumn("DATE_ENTERED", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_ENTERED);
                this.columnSALESMAN_NUMBER = new System.Data.DataColumn("SALESMAN_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALESMAN_NUMBER);
                this.columnWO_COMMENT_LINE_01 = new System.Data.DataColumn("WO_COMMENT_LINE_01", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_COMMENT_LINE_01);
                this.columnWO_COMMENT_LINE_02 = new System.Data.DataColumn("WO_COMMENT_LINE_02", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_COMMENT_LINE_02);
                this.columnWO_COMMENT_LINE_03 = new System.Data.DataColumn("WO_COMMENT_LINE_03", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_COMMENT_LINE_03);
                this.columnSALES_REASON = new System.Data.DataColumn("SALES_REASON", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALES_REASON);
                this.columnQ_CODE = new System.Data.DataColumn("Q_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQ_CODE);
                this.columnPROBLEM_CODE_01 = new System.Data.DataColumn("PROBLEM_CODE_01", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROBLEM_CODE_01);
                this.columnPROBLEM_CODE_02 = new System.Data.DataColumn("PROBLEM_CODE_02", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROBLEM_CODE_02);
                this.columnPROBLEM_CODE_03 = new System.Data.DataColumn("PROBLEM_CODE_03", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROBLEM_CODE_03);
                this.columnPROBLEM_CODE_04 = new System.Data.DataColumn("PROBLEM_CODE_04", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROBLEM_CODE_04);
                this.columnPROBLEM_CODE_05 = new System.Data.DataColumn("PROBLEM_CODE_05", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROBLEM_CODE_05);
                this.columnSCHEDULE_DATE = new System.Data.DataColumn("SCHEDULE_DATE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULE_DATE);
                this.columnTIME_SLOT = new System.Data.DataColumn("TIME_SLOT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME_SLOT);
                this.columnSTAGE_CODE = new System.Data.DataColumn("STAGE_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAGE_CODE);
                this.columnCAMPAIGN_CODE = new System.Data.DataColumn("CAMPAIGN_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMPAIGN_CODE);
                this.columnFIRST_NAME = new System.Data.DataColumn("FIRST_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRST_NAME);
                this.columnLAST_NAME = new System.Data.DataColumn("LAST_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_NAME);
                this.columnMONTHLY_AMOUNT = new System.Data.DataColumn("MONTHLY_AMOUNT", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTHLY_AMOUNT);
                this.columnADDR_LOCATION = new System.Data.DataColumn("ADDR_LOCATION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_LOCATION);
                this.columnSTREET = new System.Data.DataColumn("STREET", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREET);
                this.columnADDR_CITY = new System.Data.DataColumn("ADDR_CITY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_CITY);
                this.columnADDR_STATE = new System.Data.DataColumn("ADDR_STATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_STATE);
                this.columnADDR_ZIP_5 = new System.Data.DataColumn("ADDR_ZIP_5", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR_ZIP_5);
                this.columnAPARTMENT = new System.Data.DataColumn("APARTMENT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPARTMENT);
                this.columnDWELLING_TYPE = new System.Data.DataColumn("DWELLING_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWELLING_TYPE);
                this.columnSIGNAL_ACCESS_CODE = new System.Data.DataColumn("SIGNAL_ACCESS_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIGNAL_ACCESS_CODE);
                this.columnUNSERVICEABLE_ADDRESS = new System.Data.DataColumn("UNSERVICEABLE_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNSERVICEABLE_ADDRESS);
                this.columnREPLACE_DROP_DATE = new System.Data.DataColumn("REPLACE_DROP_DATE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPLACE_DROP_DATE);
                this.columnWORK_ORDER_NUMBER.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderRow NewWorkOrderRow() {
                return ((WorkOrderRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new WorkOrderRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(WorkOrderRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkOrderRowChanged != null)) {
                    this.WorkOrderRowChanged(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkOrderRowChanging != null)) {
                    this.WorkOrderRowChanging(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkOrderRowDeleted != null)) {
                    this.WorkOrderRowDeleted(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkOrderRowDeleting != null)) {
                    this.WorkOrderRowDeleting(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkOrderRow(WorkOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DetailedWorkOrderSchema ds = new DetailedWorkOrderSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkOrderDetailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnWORK_ORDER_NUMBER;
            
            private System.Data.DataColumn columnSERVICE_CODE;
            
            private System.Data.DataColumn columnSHORT_DESCRIPTION;
            
            private System.Data.DataColumn columnLONG_DESCRIPTION;
            
            private System.Data.DataColumn columnCATEGORY;
            
            private System.Data.DataColumn columnOLD_RATE;
            
            private System.Data.DataColumn columnNEW_RATE;
            
            private System.Data.DataColumn columnWORK_ORDER_OCCURRENCE;
            
            private System.Data.DataColumn columnFROM_QUANTITY;
            
            private System.Data.DataColumn columnTO_QUANTITY;
            
            private System.Data.DataColumn columnCAMPAIGN_CODE;
            
            private System.Data.DataColumn columnEMPLOYEE_NUMBER;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailDataTable() {
                this.TableName = "WorkOrderDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderDetailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkOrderDetailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WORK_ORDER_NUMBERColumn {
                get {
                    return this.columnWORK_ORDER_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_CODEColumn {
                get {
                    return this.columnSERVICE_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHORT_DESCRIPTIONColumn {
                get {
                    return this.columnSHORT_DESCRIPTION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LONG_DESCRIPTIONColumn {
                get {
                    return this.columnLONG_DESCRIPTION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OLD_RATEColumn {
                get {
                    return this.columnOLD_RATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NEW_RATEColumn {
                get {
                    return this.columnNEW_RATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WORK_ORDER_OCCURRENCEColumn {
                get {
                    return this.columnWORK_ORDER_OCCURRENCE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FROM_QUANTITYColumn {
                get {
                    return this.columnFROM_QUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TO_QUANTITYColumn {
                get {
                    return this.columnTO_QUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CAMPAIGN_CODEColumn {
                get {
                    return this.columnCAMPAIGN_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_NUMBERColumn {
                get {
                    return this.columnEMPLOYEE_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow this[int index] {
                get {
                    return ((WorkOrderDetailRow)(this.Rows[index]));
                }
            }
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowChanging;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowChanged;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowDeleting;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkOrderDetailRow(WorkOrderDetailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow AddWorkOrderDetailRow(int WORK_ORDER_NUMBER, string SERVICE_CODE, string SHORT_DESCRIPTION, string LONG_DESCRIPTION, string CATEGORY, double OLD_RATE, double NEW_RATE, int WORK_ORDER_OCCURRENCE, int FROM_QUANTITY, int TO_QUANTITY, string CAMPAIGN_CODE, string EMPLOYEE_NUMBER) {
                WorkOrderDetailRow rowWorkOrderDetailRow = ((WorkOrderDetailRow)(this.NewRow()));
                rowWorkOrderDetailRow.ItemArray = new object[] {
                        WORK_ORDER_NUMBER,
                        SERVICE_CODE,
                        SHORT_DESCRIPTION,
                        LONG_DESCRIPTION,
                        CATEGORY,
                        OLD_RATE,
                        NEW_RATE,
                        WORK_ORDER_OCCURRENCE,
                        FROM_QUANTITY,
                        TO_QUANTITY,
                        CAMPAIGN_CODE,
                        EMPLOYEE_NUMBER};
                this.Rows.Add(rowWorkOrderDetailRow);
                return rowWorkOrderDetailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                WorkOrderDetailDataTable cln = ((WorkOrderDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new WorkOrderDetailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWORK_ORDER_NUMBER = base.Columns["WORK_ORDER_NUMBER"];
                this.columnSERVICE_CODE = base.Columns["SERVICE_CODE"];
                this.columnSHORT_DESCRIPTION = base.Columns["SHORT_DESCRIPTION"];
                this.columnLONG_DESCRIPTION = base.Columns["LONG_DESCRIPTION"];
                this.columnCATEGORY = base.Columns["CATEGORY"];
                this.columnOLD_RATE = base.Columns["OLD_RATE"];
                this.columnNEW_RATE = base.Columns["NEW_RATE"];
                this.columnWORK_ORDER_OCCURRENCE = base.Columns["WORK_ORDER_OCCURRENCE"];
                this.columnFROM_QUANTITY = base.Columns["FROM_QUANTITY"];
                this.columnTO_QUANTITY = base.Columns["TO_QUANTITY"];
                this.columnCAMPAIGN_CODE = base.Columns["CAMPAIGN_CODE"];
                this.columnEMPLOYEE_NUMBER = base.Columns["EMPLOYEE_NUMBER"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWORK_ORDER_NUMBER = new System.Data.DataColumn("WORK_ORDER_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_ORDER_NUMBER);
                this.columnSERVICE_CODE = new System.Data.DataColumn("SERVICE_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_CODE);
                this.columnSHORT_DESCRIPTION = new System.Data.DataColumn("SHORT_DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHORT_DESCRIPTION);
                this.columnLONG_DESCRIPTION = new System.Data.DataColumn("LONG_DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLONG_DESCRIPTION);
                this.columnCATEGORY = new System.Data.DataColumn("CATEGORY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORY);
                this.columnOLD_RATE = new System.Data.DataColumn("OLD_RATE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_RATE);
                this.columnNEW_RATE = new System.Data.DataColumn("NEW_RATE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEW_RATE);
                this.columnWORK_ORDER_OCCURRENCE = new System.Data.DataColumn("WORK_ORDER_OCCURRENCE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_ORDER_OCCURRENCE);
                this.columnFROM_QUANTITY = new System.Data.DataColumn("FROM_QUANTITY", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFROM_QUANTITY);
                this.columnTO_QUANTITY = new System.Data.DataColumn("TO_QUANTITY", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTO_QUANTITY);
                this.columnCAMPAIGN_CODE = new System.Data.DataColumn("CAMPAIGN_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMPAIGN_CODE);
                this.columnEMPLOYEE_NUMBER = new System.Data.DataColumn("EMPLOYEE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_NUMBER);
                this.columnWORK_ORDER_NUMBER.AllowDBNull = false;
                this.columnSERVICE_CODE.AllowDBNull = false;
                this.columnSHORT_DESCRIPTION.AllowDBNull = false;
                this.columnLONG_DESCRIPTION.AllowDBNull = false;
                this.columnWORK_ORDER_OCCURRENCE.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow NewWorkOrderDetailRow() {
                return ((WorkOrderDetailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new WorkOrderDetailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(WorkOrderDetailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkOrderDetailRowChanged != null)) {
                    this.WorkOrderDetailRowChanged(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkOrderDetailRowChanging != null)) {
                    this.WorkOrderDetailRowChanging(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkOrderDetailRowDeleted != null)) {
                    this.WorkOrderDetailRowDeleted(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkOrderDetailRowDeleting != null)) {
                    this.WorkOrderDetailRowDeleting(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkOrderDetailRow(WorkOrderDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DetailedWorkOrderSchema ds = new DetailedWorkOrderSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkOrderDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkOrderRow : System.Data.DataRow {
            
            private WorkOrderDataTable tableWorkOrder;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkOrder = ((WorkOrderDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WORK_ORDER_NUMBER {
                get {
                    return ((int)(this[this.tableWorkOrder.WORK_ORDER_NUMBERColumn]));
                }
                set {
                    this[this.tableWorkOrder.WORK_ORDER_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ACCOUNT_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.ACCOUNT_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_NUMBER\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ACCOUNT_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DATE_ENTERED {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.DATE_ENTEREDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATE_ENTERED\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.DATE_ENTEREDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SALESMAN_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.SALESMAN_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SALESMAN_NUMBER\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SALESMAN_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_COMMENT_LINE_01 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.WO_COMMENT_LINE_01Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_COMMENT_LINE_01\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.WO_COMMENT_LINE_01Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_COMMENT_LINE_02 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.WO_COMMENT_LINE_02Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_COMMENT_LINE_02\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.WO_COMMENT_LINE_02Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_COMMENT_LINE_03 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.WO_COMMENT_LINE_03Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_COMMENT_LINE_03\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.WO_COMMENT_LINE_03Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALES_REASON {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.SALES_REASONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SALES_REASON\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SALES_REASONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Q_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.Q_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Q_CODE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.Q_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROBLEM_CODE_01 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_01Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROBLEM_CODE_01\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_01Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROBLEM_CODE_02 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_02Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROBLEM_CODE_02\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_02Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROBLEM_CODE_03 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_03Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROBLEM_CODE_03\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_03Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROBLEM_CODE_04 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_04Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROBLEM_CODE_04\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_04Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROBLEM_CODE_05 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_05Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROBLEM_CODE_05\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_05Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SCHEDULE_DATE {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.SCHEDULE_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SCHEDULE_DATE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SCHEDULE_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIME_SLOT {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.TIME_SLOTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TIME_SLOT\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.TIME_SLOTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STAGE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.STAGE_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STAGE_CODE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.STAGE_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CAMPAIGN_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.CAMPAIGN_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CAMPAIGN_CODE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.CAMPAIGN_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIRST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.FIRST_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FIRST_NAME\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.FIRST_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.LAST_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_NAME\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.LAST_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MONTHLY_AMOUNT {
                get {
                    try {
                        return ((double)(this[this.tableWorkOrder.MONTHLY_AMOUNTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MONTHLY_AMOUNT\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.MONTHLY_AMOUNTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_LOCATIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_LOCATION\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_LOCATIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STREET {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.STREETColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STREET\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.STREETColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_CITY {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_CITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_CITY\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_CITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_STATE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_STATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_STATE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_STATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDR_ZIP_5 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_ZIP_5Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_ZIP_5\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_ZIP_5Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APARTMENT {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.APARTMENTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'APARTMENT\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.APARTMENTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWELLING_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.DWELLING_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DWELLING_TYPE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.DWELLING_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIGNAL_ACCESS_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SIGNAL_ACCESS_CODE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNSERVICEABLE_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UNSERVICEABLE_ADDRESS\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int REPLACE_DROP_DATE {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.REPLACE_DROP_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REPLACE_DROP_DATE\' in table \'WorkOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.REPLACE_DROP_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_NUMBERNull() {
                return this.IsNull(this.tableWorkOrder.ACCOUNT_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_NUMBERNull() {
                this[this.tableWorkOrder.ACCOUNT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_ENTEREDNull() {
                return this.IsNull(this.tableWorkOrder.DATE_ENTEREDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_ENTEREDNull() {
                this[this.tableWorkOrder.DATE_ENTEREDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALESMAN_NUMBERNull() {
                return this.IsNull(this.tableWorkOrder.SALESMAN_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALESMAN_NUMBERNull() {
                this[this.tableWorkOrder.SALESMAN_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_COMMENT_LINE_01Null() {
                return this.IsNull(this.tableWorkOrder.WO_COMMENT_LINE_01Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_COMMENT_LINE_01Null() {
                this[this.tableWorkOrder.WO_COMMENT_LINE_01Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_COMMENT_LINE_02Null() {
                return this.IsNull(this.tableWorkOrder.WO_COMMENT_LINE_02Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_COMMENT_LINE_02Null() {
                this[this.tableWorkOrder.WO_COMMENT_LINE_02Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_COMMENT_LINE_03Null() {
                return this.IsNull(this.tableWorkOrder.WO_COMMENT_LINE_03Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_COMMENT_LINE_03Null() {
                this[this.tableWorkOrder.WO_COMMENT_LINE_03Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALES_REASONNull() {
                return this.IsNull(this.tableWorkOrder.SALES_REASONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALES_REASONNull() {
                this[this.tableWorkOrder.SALES_REASONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQ_CODENull() {
                return this.IsNull(this.tableWorkOrder.Q_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQ_CODENull() {
                this[this.tableWorkOrder.Q_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROBLEM_CODE_01Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_01Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROBLEM_CODE_01Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_01Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROBLEM_CODE_02Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_02Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROBLEM_CODE_02Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_02Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROBLEM_CODE_03Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_03Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROBLEM_CODE_03Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_03Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROBLEM_CODE_04Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_04Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROBLEM_CODE_04Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_04Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROBLEM_CODE_05Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_05Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROBLEM_CODE_05Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_05Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCHEDULE_DATENull() {
                return this.IsNull(this.tableWorkOrder.SCHEDULE_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCHEDULE_DATENull() {
                this[this.tableWorkOrder.SCHEDULE_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIME_SLOTNull() {
                return this.IsNull(this.tableWorkOrder.TIME_SLOTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIME_SLOTNull() {
                this[this.tableWorkOrder.TIME_SLOTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTAGE_CODENull() {
                return this.IsNull(this.tableWorkOrder.STAGE_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTAGE_CODENull() {
                this[this.tableWorkOrder.STAGE_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAMPAIGN_CODENull() {
                return this.IsNull(this.tableWorkOrder.CAMPAIGN_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAMPAIGN_CODENull() {
                this[this.tableWorkOrder.CAMPAIGN_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIRST_NAMENull() {
                return this.IsNull(this.tableWorkOrder.FIRST_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIRST_NAMENull() {
                this[this.tableWorkOrder.FIRST_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_NAMENull() {
                return this.IsNull(this.tableWorkOrder.LAST_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_NAMENull() {
                this[this.tableWorkOrder.LAST_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONTHLY_AMOUNTNull() {
                return this.IsNull(this.tableWorkOrder.MONTHLY_AMOUNTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONTHLY_AMOUNTNull() {
                this[this.tableWorkOrder.MONTHLY_AMOUNTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_LOCATIONNull() {
                return this.IsNull(this.tableWorkOrder.ADDR_LOCATIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_LOCATIONNull() {
                this[this.tableWorkOrder.ADDR_LOCATIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTREETNull() {
                return this.IsNull(this.tableWorkOrder.STREETColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTREETNull() {
                this[this.tableWorkOrder.STREETColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_CITYNull() {
                return this.IsNull(this.tableWorkOrder.ADDR_CITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_CITYNull() {
                this[this.tableWorkOrder.ADDR_CITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_STATENull() {
                return this.IsNull(this.tableWorkOrder.ADDR_STATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_STATENull() {
                this[this.tableWorkOrder.ADDR_STATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDR_ZIP_5Null() {
                return this.IsNull(this.tableWorkOrder.ADDR_ZIP_5Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDR_ZIP_5Null() {
                this[this.tableWorkOrder.ADDR_ZIP_5Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPARTMENTNull() {
                return this.IsNull(this.tableWorkOrder.APARTMENTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPARTMENTNull() {
                this[this.tableWorkOrder.APARTMENTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWELLING_TYPENull() {
                return this.IsNull(this.tableWorkOrder.DWELLING_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWELLING_TYPENull() {
                this[this.tableWorkOrder.DWELLING_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIGNAL_ACCESS_CODENull() {
                return this.IsNull(this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIGNAL_ACCESS_CODENull() {
                this[this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNSERVICEABLE_ADDRESSNull() {
                return this.IsNull(this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNSERVICEABLE_ADDRESSNull() {
                this[this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPLACE_DROP_DATENull() {
                return this.IsNull(this.tableWorkOrder.REPLACE_DROP_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPLACE_DROP_DATENull() {
                this[this.tableWorkOrder.REPLACE_DROP_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkOrderDetailRow : System.Data.DataRow {
            
            private WorkOrderDetailDataTable tableWorkOrderDetail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderDetailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkOrderDetail = ((WorkOrderDetailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WORK_ORDER_NUMBER {
                get {
                    return ((int)(this[this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_CODE {
                get {
                    return ((string)(this[this.tableWorkOrderDetail.SERVICE_CODEColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.SERVICE_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHORT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableWorkOrderDetail.SHORT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.SHORT_DESCRIPTIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LONG_DESCRIPTION {
                get {
                    return ((string)(this[this.tableWorkOrderDetail.LONG_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.LONG_DESCRIPTIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CATEGORY {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderDetail.CATEGORYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CATEGORY\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.CATEGORYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OLD_RATE {
                get {
                    try {
                        return ((double)(this[this.tableWorkOrderDetail.OLD_RATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OLD_RATE\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.OLD_RATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NEW_RATE {
                get {
                    try {
                        return ((double)(this[this.tableWorkOrderDetail.NEW_RATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NEW_RATE\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.NEW_RATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WORK_ORDER_OCCURRENCE {
                get {
                    return ((int)(this[this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FROM_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrderDetail.FROM_QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FROM_QUANTITY\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.FROM_QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TO_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrderDetail.TO_QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TO_QUANTITY\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.TO_QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CAMPAIGN_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderDetail.CAMPAIGN_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CAMPAIGN_CODE\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.CAMPAIGN_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_NUMBER\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCATEGORYNull() {
                return this.IsNull(this.tableWorkOrderDetail.CATEGORYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCATEGORYNull() {
                this[this.tableWorkOrderDetail.CATEGORYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOLD_RATENull() {
                return this.IsNull(this.tableWorkOrderDetail.OLD_RATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOLD_RATENull() {
                this[this.tableWorkOrderDetail.OLD_RATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNEW_RATENull() {
                return this.IsNull(this.tableWorkOrderDetail.NEW_RATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNEW_RATENull() {
                this[this.tableWorkOrderDetail.NEW_RATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFROM_QUANTITYNull() {
                return this.IsNull(this.tableWorkOrderDetail.FROM_QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFROM_QUANTITYNull() {
                this[this.tableWorkOrderDetail.FROM_QUANTITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTO_QUANTITYNull() {
                return this.IsNull(this.tableWorkOrderDetail.TO_QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTO_QUANTITYNull() {
                this[this.tableWorkOrderDetail.TO_QUANTITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAMPAIGN_CODENull() {
                return this.IsNull(this.tableWorkOrderDetail.CAMPAIGN_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAMPAIGN_CODENull() {
                this[this.tableWorkOrderDetail.CAMPAIGN_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_NUMBERNull() {
                return this.IsNull(this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_NUMBERNull() {
                this[this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkOrderRowChangeEvent : System.EventArgs {
            
            private WorkOrderRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderRowChangeEvent(WorkOrderRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkOrderDetailRowChangeEvent : System.EventArgs {
            
            private WorkOrderDetailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRowChangeEvent(WorkOrderDetailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591