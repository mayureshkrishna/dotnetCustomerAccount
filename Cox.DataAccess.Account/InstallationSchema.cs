//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Cox.DataAccess.Account {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class InstallationSchema : DataSet {
        
        private InstallationSlotsDataTable tableInstallationSlots;
        
        public InstallationSchema() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected InstallationSchema(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["InstallationSlots"] != null)) {
                    this.Tables.Add(new InstallationSlotsDataTable(ds.Tables["InstallationSlots"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstallationSlotsDataTable InstallationSlots {
            get {
                return this.tableInstallationSlots;
            }
        }
        
        public override DataSet Clone() {
            InstallationSchema cln = ((InstallationSchema)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["InstallationSlots"] != null)) {
                this.Tables.Add(new InstallationSlotsDataTable(ds.Tables["InstallationSlots"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableInstallationSlots = ((InstallationSlotsDataTable)(this.Tables["InstallationSlots"]));
            if ((this.tableInstallationSlots != null)) {
                this.tableInstallationSlots.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "InstallationSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InstallationSchema.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableInstallationSlots = new InstallationSlotsDataTable();
            this.Tables.Add(this.tableInstallationSlots);
        }
        
        private bool ShouldSerializeInstallationSlots() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void InstallationSlotsRowChangeEventHandler(object sender, InstallationSlotsRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class InstallationSlotsDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSITE_ID;
            
            private DataColumn columnTIME_SLOT;
            
            private DataColumn columnSCHEDULE_DATE;
            
            private DataColumn columnSUN_START_TIME;
            
            private DataColumn columnSUN_END_TIME;
            
            private DataColumn columnMON_START_TIME;
            
            private DataColumn columnMON_END_TIME;
            
            private DataColumn columnTUE_START_TIME;
            
            private DataColumn columnTUE_END_TIME;
            
            private DataColumn columnWED_START_TIME;
            
            private DataColumn columnWED_END_TIME;
            
            private DataColumn columnTHU_START_TIME;
            
            private DataColumn columnTHU_END_TIME;
            
            private DataColumn columnFRI_START_TIME;
            
            private DataColumn columnFRI_END_TIME;
            
            private DataColumn columnSAT_START_TIME;
            
            private DataColumn columnSAT_END_TIME;
            
            internal InstallationSlotsDataTable() : 
                    base("InstallationSlots") {
                this.InitClass();
            }
            
            internal InstallationSlotsDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SITE_IDColumn {
                get {
                    return this.columnSITE_ID;
                }
            }
            
            internal DataColumn TIME_SLOTColumn {
                get {
                    return this.columnTIME_SLOT;
                }
            }
            
            internal DataColumn SCHEDULE_DATEColumn {
                get {
                    return this.columnSCHEDULE_DATE;
                }
            }
            
            internal DataColumn SUN_START_TIMEColumn {
                get {
                    return this.columnSUN_START_TIME;
                }
            }
            
            internal DataColumn SUN_END_TIMEColumn {
                get {
                    return this.columnSUN_END_TIME;
                }
            }
            
            internal DataColumn MON_START_TIMEColumn {
                get {
                    return this.columnMON_START_TIME;
                }
            }
            
            internal DataColumn MON_END_TIMEColumn {
                get {
                    return this.columnMON_END_TIME;
                }
            }
            
            internal DataColumn TUE_START_TIMEColumn {
                get {
                    return this.columnTUE_START_TIME;
                }
            }
            
            internal DataColumn TUE_END_TIMEColumn {
                get {
                    return this.columnTUE_END_TIME;
                }
            }
            
            internal DataColumn WED_START_TIMEColumn {
                get {
                    return this.columnWED_START_TIME;
                }
            }
            
            internal DataColumn WED_END_TIMEColumn {
                get {
                    return this.columnWED_END_TIME;
                }
            }
            
            internal DataColumn THU_START_TIMEColumn {
                get {
                    return this.columnTHU_START_TIME;
                }
            }
            
            internal DataColumn THU_END_TIMEColumn {
                get {
                    return this.columnTHU_END_TIME;
                }
            }
            
            internal DataColumn FRI_START_TIMEColumn {
                get {
                    return this.columnFRI_START_TIME;
                }
            }
            
            internal DataColumn FRI_END_TIMEColumn {
                get {
                    return this.columnFRI_END_TIME;
                }
            }
            
            internal DataColumn SAT_START_TIMEColumn {
                get {
                    return this.columnSAT_START_TIME;
                }
            }
            
            internal DataColumn SAT_END_TIMEColumn {
                get {
                    return this.columnSAT_END_TIME;
                }
            }
            
            public InstallationSlotsRow this[int index] {
                get {
                    return ((InstallationSlotsRow)(this.Rows[index]));
                }
            }
            
            public event InstallationSlotsRowChangeEventHandler InstallationSlotsRowChanged;
            
            public event InstallationSlotsRowChangeEventHandler InstallationSlotsRowChanging;
            
            public event InstallationSlotsRowChangeEventHandler InstallationSlotsRowDeleted;
            
            public event InstallationSlotsRowChangeEventHandler InstallationSlotsRowDeleting;
            
            public void AddInstallationSlotsRow(InstallationSlotsRow row) {
                this.Rows.Add(row);
            }
            
            public InstallationSlotsRow AddInstallationSlotsRow(
                        long SITE_ID, 
                        string TIME_SLOT, 
                        System.DateTime SCHEDULE_DATE, 
                        System.Decimal SUN_START_TIME, 
                        System.Decimal SUN_END_TIME, 
                        System.Decimal MON_START_TIME, 
                        System.Decimal MON_END_TIME, 
                        System.Decimal TUE_START_TIME, 
                        System.Decimal TUE_END_TIME, 
                        System.Decimal WED_START_TIME, 
                        System.Decimal WED_END_TIME, 
                        System.Decimal THU_START_TIME, 
                        System.Decimal THU_END_TIME, 
                        System.Decimal FRI_START_TIME, 
                        System.Decimal FRI_END_TIME, 
                        System.Decimal SAT_START_TIME, 
                        System.Decimal SAT_END_TIME) {
                InstallationSlotsRow rowInstallationSlotsRow = ((InstallationSlotsRow)(this.NewRow()));
                rowInstallationSlotsRow.ItemArray = new object[] {
                        SITE_ID,
                        TIME_SLOT,
                        SCHEDULE_DATE,
                        SUN_START_TIME,
                        SUN_END_TIME,
                        MON_START_TIME,
                        MON_END_TIME,
                        TUE_START_TIME,
                        TUE_END_TIME,
                        WED_START_TIME,
                        WED_END_TIME,
                        THU_START_TIME,
                        THU_END_TIME,
                        FRI_START_TIME,
                        FRI_END_TIME,
                        SAT_START_TIME,
                        SAT_END_TIME};
                this.Rows.Add(rowInstallationSlotsRow);
                return rowInstallationSlotsRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                InstallationSlotsDataTable cln = ((InstallationSlotsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new InstallationSlotsDataTable();
            }
            
            internal void InitVars() {
                this.columnSITE_ID = this.Columns["SITE_ID"];
                this.columnTIME_SLOT = this.Columns["TIME_SLOT"];
                this.columnSCHEDULE_DATE = this.Columns["SCHEDULE_DATE"];
                this.columnSUN_START_TIME = this.Columns["SUN_START_TIME"];
                this.columnSUN_END_TIME = this.Columns["SUN_END_TIME"];
                this.columnMON_START_TIME = this.Columns["MON_START_TIME"];
                this.columnMON_END_TIME = this.Columns["MON_END_TIME"];
                this.columnTUE_START_TIME = this.Columns["TUE_START_TIME"];
                this.columnTUE_END_TIME = this.Columns["TUE_END_TIME"];
                this.columnWED_START_TIME = this.Columns["WED_START_TIME"];
                this.columnWED_END_TIME = this.Columns["WED_END_TIME"];
                this.columnTHU_START_TIME = this.Columns["THU_START_TIME"];
                this.columnTHU_END_TIME = this.Columns["THU_END_TIME"];
                this.columnFRI_START_TIME = this.Columns["FRI_START_TIME"];
                this.columnFRI_END_TIME = this.Columns["FRI_END_TIME"];
                this.columnSAT_START_TIME = this.Columns["SAT_START_TIME"];
                this.columnSAT_END_TIME = this.Columns["SAT_END_TIME"];
            }
            
            private void InitClass() {
                this.columnSITE_ID = new DataColumn("SITE_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSITE_ID);
                this.columnTIME_SLOT = new DataColumn("TIME_SLOT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIME_SLOT);
                this.columnSCHEDULE_DATE = new DataColumn("SCHEDULE_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSCHEDULE_DATE);
                this.columnSUN_START_TIME = new DataColumn("SUN_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSUN_START_TIME);
                this.columnSUN_END_TIME = new DataColumn("SUN_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSUN_END_TIME);
                this.columnMON_START_TIME = new DataColumn("MON_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMON_START_TIME);
                this.columnMON_END_TIME = new DataColumn("MON_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMON_END_TIME);
                this.columnTUE_START_TIME = new DataColumn("TUE_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTUE_START_TIME);
                this.columnTUE_END_TIME = new DataColumn("TUE_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTUE_END_TIME);
                this.columnWED_START_TIME = new DataColumn("WED_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWED_START_TIME);
                this.columnWED_END_TIME = new DataColumn("WED_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWED_END_TIME);
                this.columnTHU_START_TIME = new DataColumn("THU_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTHU_START_TIME);
                this.columnTHU_END_TIME = new DataColumn("THU_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTHU_END_TIME);
                this.columnFRI_START_TIME = new DataColumn("FRI_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFRI_START_TIME);
                this.columnFRI_END_TIME = new DataColumn("FRI_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFRI_END_TIME);
                this.columnSAT_START_TIME = new DataColumn("SAT_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSAT_START_TIME);
                this.columnSAT_END_TIME = new DataColumn("SAT_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSAT_END_TIME);
            }
            
            public InstallationSlotsRow NewInstallationSlotsRow() {
                return ((InstallationSlotsRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new InstallationSlotsRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(InstallationSlotsRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstallationSlotsRowChanged != null)) {
                    this.InstallationSlotsRowChanged(this, new InstallationSlotsRowChangeEvent(((InstallationSlotsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstallationSlotsRowChanging != null)) {
                    this.InstallationSlotsRowChanging(this, new InstallationSlotsRowChangeEvent(((InstallationSlotsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstallationSlotsRowDeleted != null)) {
                    this.InstallationSlotsRowDeleted(this, new InstallationSlotsRowChangeEvent(((InstallationSlotsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstallationSlotsRowDeleting != null)) {
                    this.InstallationSlotsRowDeleting(this, new InstallationSlotsRowChangeEvent(((InstallationSlotsRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveInstallationSlotsRow(InstallationSlotsRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class InstallationSlotsRow : DataRow {
            
            private InstallationSlotsDataTable tableInstallationSlots;
            
            internal InstallationSlotsRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstallationSlots = ((InstallationSlotsDataTable)(this.Table));
            }
            
            public long SITE_ID {
                get {
                    try {
                        return ((long)(this[this.tableInstallationSlots.SITE_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.SITE_IDColumn] = value;
                }
            }
            
            public string TIME_SLOT {
                get {
                    try {
                        return ((string)(this[this.tableInstallationSlots.TIME_SLOTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.TIME_SLOTColumn] = value;
                }
            }
            
            public System.DateTime SCHEDULE_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableInstallationSlots.SCHEDULE_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.SCHEDULE_DATEColumn] = value;
                }
            }
            
            public System.Decimal SUN_START_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.SUN_START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.SUN_START_TIMEColumn] = value;
                }
            }
            
            public System.Decimal SUN_END_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.SUN_END_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.SUN_END_TIMEColumn] = value;
                }
            }
            
            public System.Decimal MON_START_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.MON_START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.MON_START_TIMEColumn] = value;
                }
            }
            
            public System.Decimal MON_END_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.MON_END_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.MON_END_TIMEColumn] = value;
                }
            }
            
            public System.Decimal TUE_START_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.TUE_START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.TUE_START_TIMEColumn] = value;
                }
            }
            
            public System.Decimal TUE_END_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.TUE_END_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.TUE_END_TIMEColumn] = value;
                }
            }
            
            public System.Decimal WED_START_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.WED_START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.WED_START_TIMEColumn] = value;
                }
            }
            
            public System.Decimal WED_END_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.WED_END_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.WED_END_TIMEColumn] = value;
                }
            }
            
            public System.Decimal THU_START_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.THU_START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.THU_START_TIMEColumn] = value;
                }
            }
            
            public System.Decimal THU_END_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.THU_END_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.THU_END_TIMEColumn] = value;
                }
            }
            
            public System.Decimal FRI_START_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.FRI_START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.FRI_START_TIMEColumn] = value;
                }
            }
            
            public System.Decimal FRI_END_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.FRI_END_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.FRI_END_TIMEColumn] = value;
                }
            }
            
            public System.Decimal SAT_START_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.SAT_START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.SAT_START_TIMEColumn] = value;
                }
            }
            
            public System.Decimal SAT_END_TIME {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableInstallationSlots.SAT_END_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstallationSlots.SAT_END_TIMEColumn] = value;
                }
            }
            
            public bool IsSITE_IDNull() {
                return this.IsNull(this.tableInstallationSlots.SITE_IDColumn);
            }
            
            public void SetSITE_IDNull() {
                this[this.tableInstallationSlots.SITE_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIME_SLOTNull() {
                return this.IsNull(this.tableInstallationSlots.TIME_SLOTColumn);
            }
            
            public void SetTIME_SLOTNull() {
                this[this.tableInstallationSlots.TIME_SLOTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSCHEDULE_DATENull() {
                return this.IsNull(this.tableInstallationSlots.SCHEDULE_DATEColumn);
            }
            
            public void SetSCHEDULE_DATENull() {
                this[this.tableInstallationSlots.SCHEDULE_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSUN_START_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.SUN_START_TIMEColumn);
            }
            
            public void SetSUN_START_TIMENull() {
                this[this.tableInstallationSlots.SUN_START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSUN_END_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.SUN_END_TIMEColumn);
            }
            
            public void SetSUN_END_TIMENull() {
                this[this.tableInstallationSlots.SUN_END_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsMON_START_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.MON_START_TIMEColumn);
            }
            
            public void SetMON_START_TIMENull() {
                this[this.tableInstallationSlots.MON_START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsMON_END_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.MON_END_TIMEColumn);
            }
            
            public void SetMON_END_TIMENull() {
                this[this.tableInstallationSlots.MON_END_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTUE_START_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.TUE_START_TIMEColumn);
            }
            
            public void SetTUE_START_TIMENull() {
                this[this.tableInstallationSlots.TUE_START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTUE_END_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.TUE_END_TIMEColumn);
            }
            
            public void SetTUE_END_TIMENull() {
                this[this.tableInstallationSlots.TUE_END_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsWED_START_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.WED_START_TIMEColumn);
            }
            
            public void SetWED_START_TIMENull() {
                this[this.tableInstallationSlots.WED_START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsWED_END_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.WED_END_TIMEColumn);
            }
            
            public void SetWED_END_TIMENull() {
                this[this.tableInstallationSlots.WED_END_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTHU_START_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.THU_START_TIMEColumn);
            }
            
            public void SetTHU_START_TIMENull() {
                this[this.tableInstallationSlots.THU_START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTHU_END_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.THU_END_TIMEColumn);
            }
            
            public void SetTHU_END_TIMENull() {
                this[this.tableInstallationSlots.THU_END_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsFRI_START_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.FRI_START_TIMEColumn);
            }
            
            public void SetFRI_START_TIMENull() {
                this[this.tableInstallationSlots.FRI_START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsFRI_END_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.FRI_END_TIMEColumn);
            }
            
            public void SetFRI_END_TIMENull() {
                this[this.tableInstallationSlots.FRI_END_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSAT_START_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.SAT_START_TIMEColumn);
            }
            
            public void SetSAT_START_TIMENull() {
                this[this.tableInstallationSlots.SAT_START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSAT_END_TIMENull() {
                return this.IsNull(this.tableInstallationSlots.SAT_END_TIMEColumn);
            }
            
            public void SetSAT_END_TIMENull() {
                this[this.tableInstallationSlots.SAT_END_TIMEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class InstallationSlotsRowChangeEvent : EventArgs {
            
            private InstallationSlotsRow eventRow;
            
            private DataRowAction eventAction;
            
            public InstallationSlotsRowChangeEvent(InstallationSlotsRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public InstallationSlotsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
