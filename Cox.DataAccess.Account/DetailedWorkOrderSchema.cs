//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Cox.DataAccess.Account {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DetailedWorkOrderSchema : DataSet {
        
        private WorkOrderDataTable tableWorkOrder;
        
        private WorkOrderDetailDataTable tableWorkOrderDetail;
        
        public DetailedWorkOrderSchema() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DetailedWorkOrderSchema(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["WorkOrder"] != null)) {
                    this.Tables.Add(new WorkOrderDataTable(ds.Tables["WorkOrder"]));
                }
                if ((ds.Tables["WorkOrderDetail"] != null)) {
                    this.Tables.Add(new WorkOrderDetailDataTable(ds.Tables["WorkOrderDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkOrderDataTable WorkOrder {
            get {
                return this.tableWorkOrder;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkOrderDetailDataTable WorkOrderDetail {
            get {
                return this.tableWorkOrderDetail;
            }
        }
        
        public override DataSet Clone() {
            DetailedWorkOrderSchema cln = ((DetailedWorkOrderSchema)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["WorkOrder"] != null)) {
                this.Tables.Add(new WorkOrderDataTable(ds.Tables["WorkOrder"]));
            }
            if ((ds.Tables["WorkOrderDetail"] != null)) {
                this.Tables.Add(new WorkOrderDetailDataTable(ds.Tables["WorkOrderDetail"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableWorkOrder = ((WorkOrderDataTable)(this.Tables["WorkOrder"]));
            if ((this.tableWorkOrder != null)) {
                this.tableWorkOrder.InitVars();
            }
            this.tableWorkOrderDetail = ((WorkOrderDetailDataTable)(this.Tables["WorkOrderDetail"]));
            if ((this.tableWorkOrderDetail != null)) {
                this.tableWorkOrderDetail.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DetailedWorkOrderSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DetailedWorkOrderSchema.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableWorkOrder = new WorkOrderDataTable();
            this.Tables.Add(this.tableWorkOrder);
            this.tableWorkOrderDetail = new WorkOrderDetailDataTable();
            this.Tables.Add(this.tableWorkOrderDetail);
        }
        
        private bool ShouldSerializeWorkOrder() {
            return false;
        }
        
        private bool ShouldSerializeWorkOrderDetail() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void WorkOrderRowChangeEventHandler(object sender, WorkOrderRowChangeEvent e);
        
        public delegate void WorkOrderDetailRowChangeEventHandler(object sender, WorkOrderDetailRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class WorkOrderDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnWORK_ORDER_NUMBER;
            
            private DataColumn columnACCOUNT_NUMBER;
            
            private DataColumn columnDATE_ENTERED;
            
            private DataColumn columnSALESMAN_NUMBER;
            
            private DataColumn columnWO_COMMENT_LINE_01;
            
            private DataColumn columnWO_COMMENT_LINE_02;
            
            private DataColumn columnWO_COMMENT_LINE_03;
            
            private DataColumn columnSALES_REASON;
            
            private DataColumn columnQ_CODE;
            
            private DataColumn columnPROBLEM_CODE_01;
            
            private DataColumn columnPROBLEM_CODE_02;
            
            private DataColumn columnPROBLEM_CODE_03;
            
            private DataColumn columnPROBLEM_CODE_04;
            
            private DataColumn columnPROBLEM_CODE_05;
            
            private DataColumn columnSCHEDULE_DATE;
            
            private DataColumn columnTIME_SLOT;
            
            private DataColumn columnSTAGE_CODE;
            
            private DataColumn columnCAMPAIGN_CODE;
            
            private DataColumn columnFIRST_NAME;
            
            private DataColumn columnLAST_NAME;
            
            private DataColumn columnMONTHLY_AMOUNT;
            
            private DataColumn columnADDR_LOCATION;
            
            private DataColumn columnSTREET;
            
            private DataColumn columnADDR_CITY;
            
            private DataColumn columnADDR_STATE;
            
            private DataColumn columnADDR_ZIP_5;
            
            private DataColumn columnAPARTMENT;
            
            private DataColumn columnDWELLING_TYPE;
            
            private DataColumn columnSIGNAL_ACCESS_CODE;
            
            private DataColumn columnUNSERVICEABLE_ADDRESS;
            
            private DataColumn columnREPLACE_DROP_DATE;
            
            internal WorkOrderDataTable() : 
                    base("WorkOrder") {
                this.InitClass();
            }
            
            internal WorkOrderDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn WORK_ORDER_NUMBERColumn {
                get {
                    return this.columnWORK_ORDER_NUMBER;
                }
            }
            
            internal DataColumn ACCOUNT_NUMBERColumn {
                get {
                    return this.columnACCOUNT_NUMBER;
                }
            }
            
            internal DataColumn DATE_ENTEREDColumn {
                get {
                    return this.columnDATE_ENTERED;
                }
            }
            
            internal DataColumn SALESMAN_NUMBERColumn {
                get {
                    return this.columnSALESMAN_NUMBER;
                }
            }
            
            internal DataColumn WO_COMMENT_LINE_01Column {
                get {
                    return this.columnWO_COMMENT_LINE_01;
                }
            }
            
            internal DataColumn WO_COMMENT_LINE_02Column {
                get {
                    return this.columnWO_COMMENT_LINE_02;
                }
            }
            
            internal DataColumn WO_COMMENT_LINE_03Column {
                get {
                    return this.columnWO_COMMENT_LINE_03;
                }
            }
            
            internal DataColumn SALES_REASONColumn {
                get {
                    return this.columnSALES_REASON;
                }
            }
            
            internal DataColumn Q_CODEColumn {
                get {
                    return this.columnQ_CODE;
                }
            }
            
            internal DataColumn PROBLEM_CODE_01Column {
                get {
                    return this.columnPROBLEM_CODE_01;
                }
            }
            
            internal DataColumn PROBLEM_CODE_02Column {
                get {
                    return this.columnPROBLEM_CODE_02;
                }
            }
            
            internal DataColumn PROBLEM_CODE_03Column {
                get {
                    return this.columnPROBLEM_CODE_03;
                }
            }
            
            internal DataColumn PROBLEM_CODE_04Column {
                get {
                    return this.columnPROBLEM_CODE_04;
                }
            }
            
            internal DataColumn PROBLEM_CODE_05Column {
                get {
                    return this.columnPROBLEM_CODE_05;
                }
            }
            
            internal DataColumn SCHEDULE_DATEColumn {
                get {
                    return this.columnSCHEDULE_DATE;
                }
            }
            
            internal DataColumn TIME_SLOTColumn {
                get {
                    return this.columnTIME_SLOT;
                }
            }
            
            internal DataColumn STAGE_CODEColumn {
                get {
                    return this.columnSTAGE_CODE;
                }
            }
            
            internal DataColumn CAMPAIGN_CODEColumn {
                get {
                    return this.columnCAMPAIGN_CODE;
                }
            }
            
            internal DataColumn FIRST_NAMEColumn {
                get {
                    return this.columnFIRST_NAME;
                }
            }
            
            internal DataColumn LAST_NAMEColumn {
                get {
                    return this.columnLAST_NAME;
                }
            }
            
            internal DataColumn MONTHLY_AMOUNTColumn {
                get {
                    return this.columnMONTHLY_AMOUNT;
                }
            }
            
            internal DataColumn ADDR_LOCATIONColumn {
                get {
                    return this.columnADDR_LOCATION;
                }
            }
            
            internal DataColumn STREETColumn {
                get {
                    return this.columnSTREET;
                }
            }
            
            internal DataColumn ADDR_CITYColumn {
                get {
                    return this.columnADDR_CITY;
                }
            }
            
            internal DataColumn ADDR_STATEColumn {
                get {
                    return this.columnADDR_STATE;
                }
            }
            
            internal DataColumn ADDR_ZIP_5Column {
                get {
                    return this.columnADDR_ZIP_5;
                }
            }
            
            internal DataColumn APARTMENTColumn {
                get {
                    return this.columnAPARTMENT;
                }
            }
            
            internal DataColumn DWELLING_TYPEColumn {
                get {
                    return this.columnDWELLING_TYPE;
                }
            }
            
            internal DataColumn SIGNAL_ACCESS_CODEColumn {
                get {
                    return this.columnSIGNAL_ACCESS_CODE;
                }
            }
            
            internal DataColumn UNSERVICEABLE_ADDRESSColumn {
                get {
                    return this.columnUNSERVICEABLE_ADDRESS;
                }
            }
            
            internal DataColumn REPLACE_DROP_DATEColumn {
                get {
                    return this.columnREPLACE_DROP_DATE;
                }
            }
            
            public WorkOrderRow this[int index] {
                get {
                    return ((WorkOrderRow)(this.Rows[index]));
                }
            }
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowChanged;
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowChanging;
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowDeleted;
            
            public event WorkOrderRowChangeEventHandler WorkOrderRowDeleting;
            
            public void AddWorkOrderRow(WorkOrderRow row) {
                this.Rows.Add(row);
            }
            
            public WorkOrderRow AddWorkOrderRow(
                        int WORK_ORDER_NUMBER, 
                        int ACCOUNT_NUMBER, 
                        int DATE_ENTERED, 
                        int SALESMAN_NUMBER, 
                        string WO_COMMENT_LINE_01, 
                        string WO_COMMENT_LINE_02, 
                        string WO_COMMENT_LINE_03, 
                        string SALES_REASON, 
                        string Q_CODE, 
                        string PROBLEM_CODE_01, 
                        string PROBLEM_CODE_02, 
                        string PROBLEM_CODE_03, 
                        string PROBLEM_CODE_04, 
                        string PROBLEM_CODE_05, 
                        int SCHEDULE_DATE, 
                        string TIME_SLOT, 
                        string STAGE_CODE, 
                        string CAMPAIGN_CODE, 
                        string FIRST_NAME, 
                        string LAST_NAME, 
                        System.Double MONTHLY_AMOUNT, 
                        string ADDR_LOCATION, 
                        string STREET, 
                        string ADDR_CITY, 
                        string ADDR_STATE, 
                        string ADDR_ZIP_5, 
                        string APARTMENT, 
                        string DWELLING_TYPE, 
                        string SIGNAL_ACCESS_CODE, 
                        string UNSERVICEABLE_ADDRESS, 
                        int REPLACE_DROP_DATE) {
                WorkOrderRow rowWorkOrderRow = ((WorkOrderRow)(this.NewRow()));
                rowWorkOrderRow.ItemArray = new object[] {
                        WORK_ORDER_NUMBER,
                        ACCOUNT_NUMBER,
                        DATE_ENTERED,
                        SALESMAN_NUMBER,
                        WO_COMMENT_LINE_01,
                        WO_COMMENT_LINE_02,
                        WO_COMMENT_LINE_03,
                        SALES_REASON,
                        Q_CODE,
                        PROBLEM_CODE_01,
                        PROBLEM_CODE_02,
                        PROBLEM_CODE_03,
                        PROBLEM_CODE_04,
                        PROBLEM_CODE_05,
                        SCHEDULE_DATE,
                        TIME_SLOT,
                        STAGE_CODE,
                        CAMPAIGN_CODE,
                        FIRST_NAME,
                        LAST_NAME,
                        MONTHLY_AMOUNT,
                        ADDR_LOCATION,
                        STREET,
                        ADDR_CITY,
                        ADDR_STATE,
                        ADDR_ZIP_5,
                        APARTMENT,
                        DWELLING_TYPE,
                        SIGNAL_ACCESS_CODE,
                        UNSERVICEABLE_ADDRESS,
                        REPLACE_DROP_DATE};
                this.Rows.Add(rowWorkOrderRow);
                return rowWorkOrderRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                WorkOrderDataTable cln = ((WorkOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new WorkOrderDataTable();
            }
            
            internal void InitVars() {
                this.columnWORK_ORDER_NUMBER = this.Columns["WORK_ORDER_NUMBER"];
                this.columnACCOUNT_NUMBER = this.Columns["ACCOUNT_NUMBER"];
                this.columnDATE_ENTERED = this.Columns["DATE_ENTERED"];
                this.columnSALESMAN_NUMBER = this.Columns["SALESMAN_NUMBER"];
                this.columnWO_COMMENT_LINE_01 = this.Columns["WO_COMMENT_LINE_01"];
                this.columnWO_COMMENT_LINE_02 = this.Columns["WO_COMMENT_LINE_02"];
                this.columnWO_COMMENT_LINE_03 = this.Columns["WO_COMMENT_LINE_03"];
                this.columnSALES_REASON = this.Columns["SALES_REASON"];
                this.columnQ_CODE = this.Columns["Q_CODE"];
                this.columnPROBLEM_CODE_01 = this.Columns["PROBLEM_CODE_01"];
                this.columnPROBLEM_CODE_02 = this.Columns["PROBLEM_CODE_02"];
                this.columnPROBLEM_CODE_03 = this.Columns["PROBLEM_CODE_03"];
                this.columnPROBLEM_CODE_04 = this.Columns["PROBLEM_CODE_04"];
                this.columnPROBLEM_CODE_05 = this.Columns["PROBLEM_CODE_05"];
                this.columnSCHEDULE_DATE = this.Columns["SCHEDULE_DATE"];
                this.columnTIME_SLOT = this.Columns["TIME_SLOT"];
                this.columnSTAGE_CODE = this.Columns["STAGE_CODE"];
                this.columnCAMPAIGN_CODE = this.Columns["CAMPAIGN_CODE"];
                this.columnFIRST_NAME = this.Columns["FIRST_NAME"];
                this.columnLAST_NAME = this.Columns["LAST_NAME"];
                this.columnMONTHLY_AMOUNT = this.Columns["MONTHLY_AMOUNT"];
                this.columnADDR_LOCATION = this.Columns["ADDR_LOCATION"];
                this.columnSTREET = this.Columns["STREET"];
                this.columnADDR_CITY = this.Columns["ADDR_CITY"];
                this.columnADDR_STATE = this.Columns["ADDR_STATE"];
                this.columnADDR_ZIP_5 = this.Columns["ADDR_ZIP_5"];
                this.columnAPARTMENT = this.Columns["APARTMENT"];
                this.columnDWELLING_TYPE = this.Columns["DWELLING_TYPE"];
                this.columnSIGNAL_ACCESS_CODE = this.Columns["SIGNAL_ACCESS_CODE"];
                this.columnUNSERVICEABLE_ADDRESS = this.Columns["UNSERVICEABLE_ADDRESS"];
                this.columnREPLACE_DROP_DATE = this.Columns["REPLACE_DROP_DATE"];
            }
            
            private void InitClass() {
                this.columnWORK_ORDER_NUMBER = new DataColumn("WORK_ORDER_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWORK_ORDER_NUMBER);
                this.columnACCOUNT_NUMBER = new DataColumn("ACCOUNT_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnACCOUNT_NUMBER);
                this.columnDATE_ENTERED = new DataColumn("DATE_ENTERED", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATE_ENTERED);
                this.columnSALESMAN_NUMBER = new DataColumn("SALESMAN_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSALESMAN_NUMBER);
                this.columnWO_COMMENT_LINE_01 = new DataColumn("WO_COMMENT_LINE_01", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_COMMENT_LINE_01);
                this.columnWO_COMMENT_LINE_02 = new DataColumn("WO_COMMENT_LINE_02", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_COMMENT_LINE_02);
                this.columnWO_COMMENT_LINE_03 = new DataColumn("WO_COMMENT_LINE_03", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_COMMENT_LINE_03);
                this.columnSALES_REASON = new DataColumn("SALES_REASON", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSALES_REASON);
                this.columnQ_CODE = new DataColumn("Q_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQ_CODE);
                this.columnPROBLEM_CODE_01 = new DataColumn("PROBLEM_CODE_01", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROBLEM_CODE_01);
                this.columnPROBLEM_CODE_02 = new DataColumn("PROBLEM_CODE_02", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROBLEM_CODE_02);
                this.columnPROBLEM_CODE_03 = new DataColumn("PROBLEM_CODE_03", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROBLEM_CODE_03);
                this.columnPROBLEM_CODE_04 = new DataColumn("PROBLEM_CODE_04", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROBLEM_CODE_04);
                this.columnPROBLEM_CODE_05 = new DataColumn("PROBLEM_CODE_05", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROBLEM_CODE_05);
                this.columnSCHEDULE_DATE = new DataColumn("SCHEDULE_DATE", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSCHEDULE_DATE);
                this.columnTIME_SLOT = new DataColumn("TIME_SLOT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIME_SLOT);
                this.columnSTAGE_CODE = new DataColumn("STAGE_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTAGE_CODE);
                this.columnCAMPAIGN_CODE = new DataColumn("CAMPAIGN_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCAMPAIGN_CODE);
                this.columnFIRST_NAME = new DataColumn("FIRST_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFIRST_NAME);
                this.columnLAST_NAME = new DataColumn("LAST_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLAST_NAME);
                this.columnMONTHLY_AMOUNT = new DataColumn("MONTHLY_AMOUNT", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMONTHLY_AMOUNT);
                this.columnADDR_LOCATION = new DataColumn("ADDR_LOCATION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDR_LOCATION);
                this.columnSTREET = new DataColumn("STREET", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTREET);
                this.columnADDR_CITY = new DataColumn("ADDR_CITY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDR_CITY);
                this.columnADDR_STATE = new DataColumn("ADDR_STATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDR_STATE);
                this.columnADDR_ZIP_5 = new DataColumn("ADDR_ZIP_5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDR_ZIP_5);
                this.columnAPARTMENT = new DataColumn("APARTMENT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAPARTMENT);
                this.columnDWELLING_TYPE = new DataColumn("DWELLING_TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDWELLING_TYPE);
                this.columnSIGNAL_ACCESS_CODE = new DataColumn("SIGNAL_ACCESS_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSIGNAL_ACCESS_CODE);
                this.columnUNSERVICEABLE_ADDRESS = new DataColumn("UNSERVICEABLE_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUNSERVICEABLE_ADDRESS);
                this.columnREPLACE_DROP_DATE = new DataColumn("REPLACE_DROP_DATE", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnREPLACE_DROP_DATE);
                this.columnWORK_ORDER_NUMBER.AllowDBNull = false;
            }
            
            public WorkOrderRow NewWorkOrderRow() {
                return ((WorkOrderRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new WorkOrderRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(WorkOrderRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkOrderRowChanged != null)) {
                    this.WorkOrderRowChanged(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkOrderRowChanging != null)) {
                    this.WorkOrderRowChanging(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkOrderRowDeleted != null)) {
                    this.WorkOrderRowDeleted(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkOrderRowDeleting != null)) {
                    this.WorkOrderRowDeleting(this, new WorkOrderRowChangeEvent(((WorkOrderRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveWorkOrderRow(WorkOrderRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class WorkOrderRow : DataRow {
            
            private WorkOrderDataTable tableWorkOrder;
            
            internal WorkOrderRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkOrder = ((WorkOrderDataTable)(this.Table));
            }
            
            public int WORK_ORDER_NUMBER {
                get {
                    return ((int)(this[this.tableWorkOrder.WORK_ORDER_NUMBERColumn]));
                }
                set {
                    this[this.tableWorkOrder.WORK_ORDER_NUMBERColumn] = value;
                }
            }
            
            public int ACCOUNT_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.ACCOUNT_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ACCOUNT_NUMBERColumn] = value;
                }
            }
            
            public int DATE_ENTERED {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.DATE_ENTEREDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.DATE_ENTEREDColumn] = value;
                }
            }
            
            public int SALESMAN_NUMBER {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.SALESMAN_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SALESMAN_NUMBERColumn] = value;
                }
            }
            
            public string WO_COMMENT_LINE_01 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.WO_COMMENT_LINE_01Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.WO_COMMENT_LINE_01Column] = value;
                }
            }
            
            public string WO_COMMENT_LINE_02 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.WO_COMMENT_LINE_02Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.WO_COMMENT_LINE_02Column] = value;
                }
            }
            
            public string WO_COMMENT_LINE_03 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.WO_COMMENT_LINE_03Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.WO_COMMENT_LINE_03Column] = value;
                }
            }
            
            public string SALES_REASON {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.SALES_REASONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SALES_REASONColumn] = value;
                }
            }
            
            public string Q_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.Q_CODEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.Q_CODEColumn] = value;
                }
            }
            
            public string PROBLEM_CODE_01 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_01Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_01Column] = value;
                }
            }
            
            public string PROBLEM_CODE_02 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_02Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_02Column] = value;
                }
            }
            
            public string PROBLEM_CODE_03 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_03Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_03Column] = value;
                }
            }
            
            public string PROBLEM_CODE_04 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_04Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_04Column] = value;
                }
            }
            
            public string PROBLEM_CODE_05 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.PROBLEM_CODE_05Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.PROBLEM_CODE_05Column] = value;
                }
            }
            
            public int SCHEDULE_DATE {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.SCHEDULE_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SCHEDULE_DATEColumn] = value;
                }
            }
            
            public string TIME_SLOT {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.TIME_SLOTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.TIME_SLOTColumn] = value;
                }
            }
            
            public string STAGE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.STAGE_CODEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.STAGE_CODEColumn] = value;
                }
            }
            
            public string CAMPAIGN_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.CAMPAIGN_CODEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.CAMPAIGN_CODEColumn] = value;
                }
            }
            
            public string FIRST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.FIRST_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.FIRST_NAMEColumn] = value;
                }
            }
            
            public string LAST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.LAST_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.LAST_NAMEColumn] = value;
                }
            }
            
            public System.Double MONTHLY_AMOUNT {
                get {
                    try {
                        return ((System.Double)(this[this.tableWorkOrder.MONTHLY_AMOUNTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.MONTHLY_AMOUNTColumn] = value;
                }
            }
            
            public string ADDR_LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_LOCATIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_LOCATIONColumn] = value;
                }
            }
            
            public string STREET {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.STREETColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.STREETColumn] = value;
                }
            }
            
            public string ADDR_CITY {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_CITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_CITYColumn] = value;
                }
            }
            
            public string ADDR_STATE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_STATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_STATEColumn] = value;
                }
            }
            
            public string ADDR_ZIP_5 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.ADDR_ZIP_5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.ADDR_ZIP_5Column] = value;
                }
            }
            
            public string APARTMENT {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.APARTMENTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.APARTMENTColumn] = value;
                }
            }
            
            public string DWELLING_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.DWELLING_TYPEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.DWELLING_TYPEColumn] = value;
                }
            }
            
            public string SIGNAL_ACCESS_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn] = value;
                }
            }
            
            public string UNSERVICEABLE_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn] = value;
                }
            }
            
            public int REPLACE_DROP_DATE {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrder.REPLACE_DROP_DATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrder.REPLACE_DROP_DATEColumn] = value;
                }
            }
            
            public bool IsACCOUNT_NUMBERNull() {
                return this.IsNull(this.tableWorkOrder.ACCOUNT_NUMBERColumn);
            }
            
            public void SetACCOUNT_NUMBERNull() {
                this[this.tableWorkOrder.ACCOUNT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATE_ENTEREDNull() {
                return this.IsNull(this.tableWorkOrder.DATE_ENTEREDColumn);
            }
            
            public void SetDATE_ENTEREDNull() {
                this[this.tableWorkOrder.DATE_ENTEREDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSALESMAN_NUMBERNull() {
                return this.IsNull(this.tableWorkOrder.SALESMAN_NUMBERColumn);
            }
            
            public void SetSALESMAN_NUMBERNull() {
                this[this.tableWorkOrder.SALESMAN_NUMBERColumn] = System.Convert.DBNull;
            }
            
            public bool IsWO_COMMENT_LINE_01Null() {
                return this.IsNull(this.tableWorkOrder.WO_COMMENT_LINE_01Column);
            }
            
            public void SetWO_COMMENT_LINE_01Null() {
                this[this.tableWorkOrder.WO_COMMENT_LINE_01Column] = System.Convert.DBNull;
            }
            
            public bool IsWO_COMMENT_LINE_02Null() {
                return this.IsNull(this.tableWorkOrder.WO_COMMENT_LINE_02Column);
            }
            
            public void SetWO_COMMENT_LINE_02Null() {
                this[this.tableWorkOrder.WO_COMMENT_LINE_02Column] = System.Convert.DBNull;
            }
            
            public bool IsWO_COMMENT_LINE_03Null() {
                return this.IsNull(this.tableWorkOrder.WO_COMMENT_LINE_03Column);
            }
            
            public void SetWO_COMMENT_LINE_03Null() {
                this[this.tableWorkOrder.WO_COMMENT_LINE_03Column] = System.Convert.DBNull;
            }
            
            public bool IsSALES_REASONNull() {
                return this.IsNull(this.tableWorkOrder.SALES_REASONColumn);
            }
            
            public void SetSALES_REASONNull() {
                this[this.tableWorkOrder.SALES_REASONColumn] = System.Convert.DBNull;
            }
            
            public bool IsQ_CODENull() {
                return this.IsNull(this.tableWorkOrder.Q_CODEColumn);
            }
            
            public void SetQ_CODENull() {
                this[this.tableWorkOrder.Q_CODEColumn] = System.Convert.DBNull;
            }
            
            public bool IsPROBLEM_CODE_01Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_01Column);
            }
            
            public void SetPROBLEM_CODE_01Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_01Column] = System.Convert.DBNull;
            }
            
            public bool IsPROBLEM_CODE_02Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_02Column);
            }
            
            public void SetPROBLEM_CODE_02Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_02Column] = System.Convert.DBNull;
            }
            
            public bool IsPROBLEM_CODE_03Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_03Column);
            }
            
            public void SetPROBLEM_CODE_03Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_03Column] = System.Convert.DBNull;
            }
            
            public bool IsPROBLEM_CODE_04Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_04Column);
            }
            
            public void SetPROBLEM_CODE_04Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_04Column] = System.Convert.DBNull;
            }
            
            public bool IsPROBLEM_CODE_05Null() {
                return this.IsNull(this.tableWorkOrder.PROBLEM_CODE_05Column);
            }
            
            public void SetPROBLEM_CODE_05Null() {
                this[this.tableWorkOrder.PROBLEM_CODE_05Column] = System.Convert.DBNull;
            }
            
            public bool IsSCHEDULE_DATENull() {
                return this.IsNull(this.tableWorkOrder.SCHEDULE_DATEColumn);
            }
            
            public void SetSCHEDULE_DATENull() {
                this[this.tableWorkOrder.SCHEDULE_DATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIME_SLOTNull() {
                return this.IsNull(this.tableWorkOrder.TIME_SLOTColumn);
            }
            
            public void SetTIME_SLOTNull() {
                this[this.tableWorkOrder.TIME_SLOTColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTAGE_CODENull() {
                return this.IsNull(this.tableWorkOrder.STAGE_CODEColumn);
            }
            
            public void SetSTAGE_CODENull() {
                this[this.tableWorkOrder.STAGE_CODEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCAMPAIGN_CODENull() {
                return this.IsNull(this.tableWorkOrder.CAMPAIGN_CODEColumn);
            }
            
            public void SetCAMPAIGN_CODENull() {
                this[this.tableWorkOrder.CAMPAIGN_CODEColumn] = System.Convert.DBNull;
            }
            
            public bool IsFIRST_NAMENull() {
                return this.IsNull(this.tableWorkOrder.FIRST_NAMEColumn);
            }
            
            public void SetFIRST_NAMENull() {
                this[this.tableWorkOrder.FIRST_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsLAST_NAMENull() {
                return this.IsNull(this.tableWorkOrder.LAST_NAMEColumn);
            }
            
            public void SetLAST_NAMENull() {
                this[this.tableWorkOrder.LAST_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsMONTHLY_AMOUNTNull() {
                return this.IsNull(this.tableWorkOrder.MONTHLY_AMOUNTColumn);
            }
            
            public void SetMONTHLY_AMOUNTNull() {
                this[this.tableWorkOrder.MONTHLY_AMOUNTColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDR_LOCATIONNull() {
                return this.IsNull(this.tableWorkOrder.ADDR_LOCATIONColumn);
            }
            
            public void SetADDR_LOCATIONNull() {
                this[this.tableWorkOrder.ADDR_LOCATIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTREETNull() {
                return this.IsNull(this.tableWorkOrder.STREETColumn);
            }
            
            public void SetSTREETNull() {
                this[this.tableWorkOrder.STREETColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDR_CITYNull() {
                return this.IsNull(this.tableWorkOrder.ADDR_CITYColumn);
            }
            
            public void SetADDR_CITYNull() {
                this[this.tableWorkOrder.ADDR_CITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDR_STATENull() {
                return this.IsNull(this.tableWorkOrder.ADDR_STATEColumn);
            }
            
            public void SetADDR_STATENull() {
                this[this.tableWorkOrder.ADDR_STATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDR_ZIP_5Null() {
                return this.IsNull(this.tableWorkOrder.ADDR_ZIP_5Column);
            }
            
            public void SetADDR_ZIP_5Null() {
                this[this.tableWorkOrder.ADDR_ZIP_5Column] = System.Convert.DBNull;
            }
            
            public bool IsAPARTMENTNull() {
                return this.IsNull(this.tableWorkOrder.APARTMENTColumn);
            }
            
            public void SetAPARTMENTNull() {
                this[this.tableWorkOrder.APARTMENTColumn] = System.Convert.DBNull;
            }
            
            public bool IsDWELLING_TYPENull() {
                return this.IsNull(this.tableWorkOrder.DWELLING_TYPEColumn);
            }
            
            public void SetDWELLING_TYPENull() {
                this[this.tableWorkOrder.DWELLING_TYPEColumn] = System.Convert.DBNull;
            }
            
            public bool IsSIGNAL_ACCESS_CODENull() {
                return this.IsNull(this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn);
            }
            
            public void SetSIGNAL_ACCESS_CODENull() {
                this[this.tableWorkOrder.SIGNAL_ACCESS_CODEColumn] = System.Convert.DBNull;
            }
            
            public bool IsUNSERVICEABLE_ADDRESSNull() {
                return this.IsNull(this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn);
            }
            
            public void SetUNSERVICEABLE_ADDRESSNull() {
                this[this.tableWorkOrder.UNSERVICEABLE_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            public bool IsREPLACE_DROP_DATENull() {
                return this.IsNull(this.tableWorkOrder.REPLACE_DROP_DATEColumn);
            }
            
            public void SetREPLACE_DROP_DATENull() {
                this[this.tableWorkOrder.REPLACE_DROP_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class WorkOrderRowChangeEvent : EventArgs {
            
            private WorkOrderRow eventRow;
            
            private DataRowAction eventAction;
            
            public WorkOrderRowChangeEvent(WorkOrderRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public WorkOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class WorkOrderDetailDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnWORK_ORDER_NUMBER;
            
            private DataColumn columnSERVICE_CODE;
            
            private DataColumn columnSHORT_DESCRIPTION;
            
            private DataColumn columnLONG_DESCRIPTION;
            
            private DataColumn columnCATEGORY;
            
            private DataColumn columnOLD_RATE;
            
            private DataColumn columnNEW_RATE;
            
            private DataColumn columnWORK_ORDER_OCCURRENCE;
            
            private DataColumn columnFROM_QUANTITY;
            
            private DataColumn columnTO_QUANTITY;
            
            private DataColumn columnCAMPAIGN_CODE;
            
            private DataColumn columnEMPLOYEE_NUMBER;
            
            internal WorkOrderDetailDataTable() : 
                    base("WorkOrderDetail") {
                this.InitClass();
            }
            
            internal WorkOrderDetailDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn WORK_ORDER_NUMBERColumn {
                get {
                    return this.columnWORK_ORDER_NUMBER;
                }
            }
            
            internal DataColumn SERVICE_CODEColumn {
                get {
                    return this.columnSERVICE_CODE;
                }
            }
            
            internal DataColumn SHORT_DESCRIPTIONColumn {
                get {
                    return this.columnSHORT_DESCRIPTION;
                }
            }
            
            internal DataColumn LONG_DESCRIPTIONColumn {
                get {
                    return this.columnLONG_DESCRIPTION;
                }
            }
            
            internal DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            internal DataColumn OLD_RATEColumn {
                get {
                    return this.columnOLD_RATE;
                }
            }
            
            internal DataColumn NEW_RATEColumn {
                get {
                    return this.columnNEW_RATE;
                }
            }
            
            internal DataColumn WORK_ORDER_OCCURRENCEColumn {
                get {
                    return this.columnWORK_ORDER_OCCURRENCE;
                }
            }
            
            internal DataColumn FROM_QUANTITYColumn {
                get {
                    return this.columnFROM_QUANTITY;
                }
            }
            
            internal DataColumn TO_QUANTITYColumn {
                get {
                    return this.columnTO_QUANTITY;
                }
            }
            
            internal DataColumn CAMPAIGN_CODEColumn {
                get {
                    return this.columnCAMPAIGN_CODE;
                }
            }
            
            internal DataColumn EMPLOYEE_NUMBERColumn {
                get {
                    return this.columnEMPLOYEE_NUMBER;
                }
            }
            
            public WorkOrderDetailRow this[int index] {
                get {
                    return ((WorkOrderDetailRow)(this.Rows[index]));
                }
            }
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowChanged;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowChanging;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowDeleted;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowDeleting;
            
            public void AddWorkOrderDetailRow(WorkOrderDetailRow row) {
                this.Rows.Add(row);
            }
            
            public WorkOrderDetailRow AddWorkOrderDetailRow(int WORK_ORDER_NUMBER, string SERVICE_CODE, string SHORT_DESCRIPTION, string LONG_DESCRIPTION, string CATEGORY, System.Double OLD_RATE, System.Double NEW_RATE, int WORK_ORDER_OCCURRENCE, int FROM_QUANTITY, int TO_QUANTITY, string CAMPAIGN_CODE, string EMPLOYEE_NUMBER) {
                WorkOrderDetailRow rowWorkOrderDetailRow = ((WorkOrderDetailRow)(this.NewRow()));
                rowWorkOrderDetailRow.ItemArray = new object[] {
                        WORK_ORDER_NUMBER,
                        SERVICE_CODE,
                        SHORT_DESCRIPTION,
                        LONG_DESCRIPTION,
                        CATEGORY,
                        OLD_RATE,
                        NEW_RATE,
                        WORK_ORDER_OCCURRENCE,
                        FROM_QUANTITY,
                        TO_QUANTITY,
                        CAMPAIGN_CODE,
                        EMPLOYEE_NUMBER};
                this.Rows.Add(rowWorkOrderDetailRow);
                return rowWorkOrderDetailRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                WorkOrderDetailDataTable cln = ((WorkOrderDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new WorkOrderDetailDataTable();
            }
            
            internal void InitVars() {
                this.columnWORK_ORDER_NUMBER = this.Columns["WORK_ORDER_NUMBER"];
                this.columnSERVICE_CODE = this.Columns["SERVICE_CODE"];
                this.columnSHORT_DESCRIPTION = this.Columns["SHORT_DESCRIPTION"];
                this.columnLONG_DESCRIPTION = this.Columns["LONG_DESCRIPTION"];
                this.columnCATEGORY = this.Columns["CATEGORY"];
                this.columnOLD_RATE = this.Columns["OLD_RATE"];
                this.columnNEW_RATE = this.Columns["NEW_RATE"];
                this.columnWORK_ORDER_OCCURRENCE = this.Columns["WORK_ORDER_OCCURRENCE"];
                this.columnFROM_QUANTITY = this.Columns["FROM_QUANTITY"];
                this.columnTO_QUANTITY = this.Columns["TO_QUANTITY"];
                this.columnCAMPAIGN_CODE = this.Columns["CAMPAIGN_CODE"];
                this.columnEMPLOYEE_NUMBER = this.Columns["EMPLOYEE_NUMBER"];
            }
            
            private void InitClass() {
                this.columnWORK_ORDER_NUMBER = new DataColumn("WORK_ORDER_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWORK_ORDER_NUMBER);
                this.columnSERVICE_CODE = new DataColumn("SERVICE_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSERVICE_CODE);
                this.columnSHORT_DESCRIPTION = new DataColumn("SHORT_DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSHORT_DESCRIPTION);
                this.columnLONG_DESCRIPTION = new DataColumn("LONG_DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLONG_DESCRIPTION);
                this.columnCATEGORY = new DataColumn("CATEGORY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCATEGORY);
                this.columnOLD_RATE = new DataColumn("OLD_RATE", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOLD_RATE);
                this.columnNEW_RATE = new DataColumn("NEW_RATE", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNEW_RATE);
                this.columnWORK_ORDER_OCCURRENCE = new DataColumn("WORK_ORDER_OCCURRENCE", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWORK_ORDER_OCCURRENCE);
                this.columnFROM_QUANTITY = new DataColumn("FROM_QUANTITY", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFROM_QUANTITY);
                this.columnTO_QUANTITY = new DataColumn("TO_QUANTITY", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTO_QUANTITY);
                this.columnCAMPAIGN_CODE = new DataColumn("CAMPAIGN_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCAMPAIGN_CODE);
                this.columnEMPLOYEE_NUMBER = new DataColumn("EMPLOYEE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEMPLOYEE_NUMBER);
                this.columnWORK_ORDER_NUMBER.AllowDBNull = false;
                this.columnSERVICE_CODE.AllowDBNull = false;
                this.columnSHORT_DESCRIPTION.AllowDBNull = false;
                this.columnLONG_DESCRIPTION.AllowDBNull = false;
                this.columnWORK_ORDER_OCCURRENCE.AllowDBNull = false;
            }
            
            public WorkOrderDetailRow NewWorkOrderDetailRow() {
                return ((WorkOrderDetailRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new WorkOrderDetailRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(WorkOrderDetailRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkOrderDetailRowChanged != null)) {
                    this.WorkOrderDetailRowChanged(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkOrderDetailRowChanging != null)) {
                    this.WorkOrderDetailRowChanging(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkOrderDetailRowDeleted != null)) {
                    this.WorkOrderDetailRowDeleted(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkOrderDetailRowDeleting != null)) {
                    this.WorkOrderDetailRowDeleting(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveWorkOrderDetailRow(WorkOrderDetailRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class WorkOrderDetailRow : DataRow {
            
            private WorkOrderDetailDataTable tableWorkOrderDetail;
            
            internal WorkOrderDetailRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkOrderDetail = ((WorkOrderDetailDataTable)(this.Table));
            }
            
            public int WORK_ORDER_NUMBER {
                get {
                    return ((int)(this[this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn] = value;
                }
            }
            
            public string SERVICE_CODE {
                get {
                    return ((string)(this[this.tableWorkOrderDetail.SERVICE_CODEColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.SERVICE_CODEColumn] = value;
                }
            }
            
            public string SHORT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableWorkOrderDetail.SHORT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.SHORT_DESCRIPTIONColumn] = value;
                }
            }
            
            public string LONG_DESCRIPTION {
                get {
                    return ((string)(this[this.tableWorkOrderDetail.LONG_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.LONG_DESCRIPTIONColumn] = value;
                }
            }
            
            public string CATEGORY {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderDetail.CATEGORYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.CATEGORYColumn] = value;
                }
            }
            
            public System.Double OLD_RATE {
                get {
                    try {
                        return ((System.Double)(this[this.tableWorkOrderDetail.OLD_RATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.OLD_RATEColumn] = value;
                }
            }
            
            public System.Double NEW_RATE {
                get {
                    try {
                        return ((System.Double)(this[this.tableWorkOrderDetail.NEW_RATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.NEW_RATEColumn] = value;
                }
            }
            
            public int WORK_ORDER_OCCURRENCE {
                get {
                    return ((int)(this[this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn]));
                }
                set {
                    this[this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn] = value;
                }
            }
            
            public int FROM_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrderDetail.FROM_QUANTITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.FROM_QUANTITYColumn] = value;
                }
            }
            
            public int TO_QUANTITY {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrderDetail.TO_QUANTITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.TO_QUANTITYColumn] = value;
                }
            }
            
            public string CAMPAIGN_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderDetail.CAMPAIGN_CODEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.CAMPAIGN_CODEColumn] = value;
                }
            }
            
            public string EMPLOYEE_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn] = value;
                }
            }
            
            public bool IsCATEGORYNull() {
                return this.IsNull(this.tableWorkOrderDetail.CATEGORYColumn);
            }
            
            public void SetCATEGORYNull() {
                this[this.tableWorkOrderDetail.CATEGORYColumn] = System.Convert.DBNull;
            }
            
            public bool IsOLD_RATENull() {
                return this.IsNull(this.tableWorkOrderDetail.OLD_RATEColumn);
            }
            
            public void SetOLD_RATENull() {
                this[this.tableWorkOrderDetail.OLD_RATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsNEW_RATENull() {
                return this.IsNull(this.tableWorkOrderDetail.NEW_RATEColumn);
            }
            
            public void SetNEW_RATENull() {
                this[this.tableWorkOrderDetail.NEW_RATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsFROM_QUANTITYNull() {
                return this.IsNull(this.tableWorkOrderDetail.FROM_QUANTITYColumn);
            }
            
            public void SetFROM_QUANTITYNull() {
                this[this.tableWorkOrderDetail.FROM_QUANTITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsTO_QUANTITYNull() {
                return this.IsNull(this.tableWorkOrderDetail.TO_QUANTITYColumn);
            }
            
            public void SetTO_QUANTITYNull() {
                this[this.tableWorkOrderDetail.TO_QUANTITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsCAMPAIGN_CODENull() {
                return this.IsNull(this.tableWorkOrderDetail.CAMPAIGN_CODEColumn);
            }
            
            public void SetCAMPAIGN_CODENull() {
                this[this.tableWorkOrderDetail.CAMPAIGN_CODEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEMPLOYEE_NUMBERNull() {
                return this.IsNull(this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn);
            }
            
            public void SetEMPLOYEE_NUMBERNull() {
                this[this.tableWorkOrderDetail.EMPLOYEE_NUMBERColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class WorkOrderDetailRowChangeEvent : EventArgs {
            
            private WorkOrderDetailRow eventRow;
            
            private DataRowAction eventAction;
            
            public WorkOrderDetailRowChangeEvent(WorkOrderDetailRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public WorkOrderDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
