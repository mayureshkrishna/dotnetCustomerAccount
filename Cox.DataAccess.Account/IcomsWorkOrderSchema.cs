//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Cox.DataAccess.Account {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class IcomsWorkOrderSchema : DataSet {
        
        private IcomsWOrdersDataTable tableIcomsWOrders;
        
        private CFTimeSlotsDataTable tableCFTimeSlots;
        
        public IcomsWorkOrderSchema() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected IcomsWorkOrderSchema(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["IcomsWOrder"] != null)) {
                    this.Tables.Add(new IcomsWOrdersDataTable(ds.Tables["IcomsWOrder"]));
                }
                if ((ds.Tables["CFTimeSlot"] != null)) {
                    this.Tables.Add(new CFTimeSlotsDataTable(ds.Tables["CFTimeSlot"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IcomsWOrdersDataTable IcomsWOrders {
            get {
                return this.tableIcomsWOrders;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CFTimeSlotsDataTable CFTimeSlots {
            get {
                return this.tableCFTimeSlots;
            }
        }
        
        public override DataSet Clone() {
            IcomsWorkOrderSchema cln = ((IcomsWorkOrderSchema)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["IcomsWOrder"] != null)) {
                this.Tables.Add(new IcomsWOrdersDataTable(ds.Tables["IcomsWOrder"]));
            }
            if ((ds.Tables["CFTimeSlot"] != null)) {
                this.Tables.Add(new CFTimeSlotsDataTable(ds.Tables["CFTimeSlot"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableIcomsWOrders = ((IcomsWOrdersDataTable)(this.Tables["IcomsWOrder"]));
            if ((this.tableIcomsWOrders != null)) {
                this.tableIcomsWOrders.InitVars();
            }
            this.tableCFTimeSlots = ((CFTimeSlotsDataTable)(this.Tables["CFTimeSlot"]));
            if ((this.tableCFTimeSlots != null)) {
                this.tableCFTimeSlots.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "IcomsWorkOrderSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/IcomsWorkOrderSchema.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableIcomsWOrders = new IcomsWOrdersDataTable();
            this.Tables.Add(this.tableIcomsWOrders);
            this.tableCFTimeSlots = new CFTimeSlotsDataTable();
            this.Tables.Add(this.tableCFTimeSlots);
        }
        
        private bool ShouldSerializeIcomsWOrders() {
            return false;
        }
        
        private bool ShouldSerializeCFTimeSlots() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void IcomsWOrderChangeEventHandler(object sender, IcomsWOrderChangeEvent e);
        
        public delegate void CFTimeSlotChangeEventHandler(object sender, CFTimeSlotChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class IcomsWOrdersDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnAccountNumber;
            
            private DataColumn columnWorkOrderNumber;
            
            private DataColumn columnWorkOrderStatus;
            
            private DataColumn columnDateEntered;
            
            private DataColumn columnTimeEntered;
            
            private DataColumn columnWorkOrderType;
            
            internal IcomsWOrdersDataTable() : 
                    base("IcomsWOrder") {
                this.InitClass();
            }
            
            internal IcomsWOrdersDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn AccountNumberColumn {
                get {
                    return this.columnAccountNumber;
                }
            }
            
            internal DataColumn WorkOrderNumberColumn {
                get {
                    return this.columnWorkOrderNumber;
                }
            }
            
            internal DataColumn WorkOrderStatusColumn {
                get {
                    return this.columnWorkOrderStatus;
                }
            }
            
            internal DataColumn DateEnteredColumn {
                get {
                    return this.columnDateEntered;
                }
            }
            
            internal DataColumn TimeEnteredColumn {
                get {
                    return this.columnTimeEntered;
                }
            }
            
            internal DataColumn WorkOrderTypeColumn {
                get {
                    return this.columnWorkOrderType;
                }
            }
            
            public IcomsWOrder this[int index] {
                get {
                    return ((IcomsWOrder)(this.Rows[index]));
                }
            }
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderChanged;
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderChanging;
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderDeleted;
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderDeleting;
            
            public void AddIcomsWOrder(IcomsWOrder row) {
                this.Rows.Add(row);
            }
            
            public IcomsWOrder AddIcomsWOrder(System.Decimal AccountNumber, System.Decimal WorkOrderNumber, string WorkOrderStatus, System.Decimal DateEntered, System.Decimal TimeEntered, string WorkOrderType) {
                IcomsWOrder rowIcomsWOrder = ((IcomsWOrder)(this.NewRow()));
                rowIcomsWOrder.ItemArray = new object[] {
                        AccountNumber,
                        WorkOrderNumber,
                        WorkOrderStatus,
                        DateEntered,
                        TimeEntered,
                        WorkOrderType};
                this.Rows.Add(rowIcomsWOrder);
                return rowIcomsWOrder;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                IcomsWOrdersDataTable cln = ((IcomsWOrdersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new IcomsWOrdersDataTable();
            }
            
            internal void InitVars() {
                this.columnAccountNumber = this.Columns["WOCU#"];
                this.columnWorkOrderNumber = this.Columns["WONUM"];
                this.columnWorkOrderStatus = this.Columns["WOSTT"];
                this.columnDateEntered = this.Columns["WOEDT"];
                this.columnTimeEntered = this.Columns["WOETM"];
                this.columnWorkOrderType = this.Columns["WOTYC"];
            }
            
            private void InitClass() {
                this.columnAccountNumber = new DataColumn("WOCU#", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountNumber);
                this.columnWorkOrderNumber = new DataColumn("WONUM", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkOrderNumber);
                this.columnWorkOrderStatus = new DataColumn("WOSTT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkOrderStatus);
                this.columnDateEntered = new DataColumn("WOEDT", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateEntered);
                this.columnTimeEntered = new DataColumn("WOETM", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeEntered);
                this.columnWorkOrderType = new DataColumn("WOTYC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWorkOrderType);
                this.columnAccountNumber.AllowDBNull = false;
                this.columnWorkOrderNumber.AllowDBNull = false;
                this.columnWorkOrderStatus.AllowDBNull = false;
                this.columnDateEntered.AllowDBNull = false;
                this.columnTimeEntered.AllowDBNull = false;
                this.columnWorkOrderType.AllowDBNull = false;
            }
            
            public IcomsWOrder NewIcomsWOrder() {
                return ((IcomsWOrder)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new IcomsWOrder(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(IcomsWOrder);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IcomsWOrderChanged != null)) {
                    this.IcomsWOrderChanged(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IcomsWOrderChanging != null)) {
                    this.IcomsWOrderChanging(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IcomsWOrderDeleted != null)) {
                    this.IcomsWOrderDeleted(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IcomsWOrderDeleting != null)) {
                    this.IcomsWOrderDeleting(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            public void RemoveIcomsWOrder(IcomsWOrder row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class IcomsWOrder : DataRow {
            
            private IcomsWOrdersDataTable tableIcomsWOrders;
            
            internal IcomsWOrder(DataRowBuilder rb) : 
                    base(rb) {
                this.tableIcomsWOrders = ((IcomsWOrdersDataTable)(this.Table));
            }
            
            public System.Decimal AccountNumber {
                get {
                    return ((System.Decimal)(this[this.tableIcomsWOrders.AccountNumberColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.AccountNumberColumn] = value;
                }
            }
            
            public System.Decimal WorkOrderNumber {
                get {
                    return ((System.Decimal)(this[this.tableIcomsWOrders.WorkOrderNumberColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.WorkOrderNumberColumn] = value;
                }
            }
            
            public string WorkOrderStatus {
                get {
                    return ((string)(this[this.tableIcomsWOrders.WorkOrderStatusColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.WorkOrderStatusColumn] = value;
                }
            }
            
            public System.Decimal DateEntered {
                get {
                    return ((System.Decimal)(this[this.tableIcomsWOrders.DateEnteredColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.DateEnteredColumn] = value;
                }
            }
            
            public System.Decimal TimeEntered {
                get {
                    return ((System.Decimal)(this[this.tableIcomsWOrders.TimeEnteredColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.TimeEnteredColumn] = value;
                }
            }
            
            public string WorkOrderType {
                get {
                    return ((string)(this[this.tableIcomsWOrders.WorkOrderTypeColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.WorkOrderTypeColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class IcomsWOrderChangeEvent : EventArgs {
            
            private IcomsWOrder eventRow;
            
            private DataRowAction eventAction;
            
            public IcomsWOrderChangeEvent(IcomsWOrder row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public IcomsWOrder Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CFTimeSlotsDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSiteId;
            
            private DataColumn columnPool;
            
            private DataColumn columnTimeSlot;
            
            private DataColumn columnSundayStartTime;
            
            private DataColumn columnSundayEndTime;
            
            private DataColumn columnMondayStartTime;
            
            private DataColumn columnMondayEndTime;
            
            private DataColumn columnTuesdayStartTime;
            
            private DataColumn columnTuesdayEndTime;
            
            private DataColumn columnWednesdayStartTime;
            
            private DataColumn columnWednesdayEndTime;
            
            private DataColumn columnThursdayStartTime;
            
            private DataColumn columnThursdayEndTime;
            
            private DataColumn columnFridayStartTime;
            
            private DataColumn columnFridayEndTime;
            
            private DataColumn columnSaturdayStartTime;
            
            private DataColumn columnSaturdayEndTime;
            
            internal CFTimeSlotsDataTable() : 
                    base("CFTimeSlot") {
                this.InitClass();
            }
            
            internal CFTimeSlotsDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            internal DataColumn PoolColumn {
                get {
                    return this.columnPool;
                }
            }
            
            internal DataColumn TimeSlotColumn {
                get {
                    return this.columnTimeSlot;
                }
            }
            
            internal DataColumn SundayStartTimeColumn {
                get {
                    return this.columnSundayStartTime;
                }
            }
            
            internal DataColumn SundayEndTimeColumn {
                get {
                    return this.columnSundayEndTime;
                }
            }
            
            internal DataColumn MondayStartTimeColumn {
                get {
                    return this.columnMondayStartTime;
                }
            }
            
            internal DataColumn MondayEndTimeColumn {
                get {
                    return this.columnMondayEndTime;
                }
            }
            
            internal DataColumn TuesdayStartTimeColumn {
                get {
                    return this.columnTuesdayStartTime;
                }
            }
            
            internal DataColumn TuesdayEndTimeColumn {
                get {
                    return this.columnTuesdayEndTime;
                }
            }
            
            internal DataColumn WednesdayStartTimeColumn {
                get {
                    return this.columnWednesdayStartTime;
                }
            }
            
            internal DataColumn WednesdayEndTimeColumn {
                get {
                    return this.columnWednesdayEndTime;
                }
            }
            
            internal DataColumn ThursdayStartTimeColumn {
                get {
                    return this.columnThursdayStartTime;
                }
            }
            
            internal DataColumn ThursdayEndTimeColumn {
                get {
                    return this.columnThursdayEndTime;
                }
            }
            
            internal DataColumn FridayStartTimeColumn {
                get {
                    return this.columnFridayStartTime;
                }
            }
            
            internal DataColumn FridayEndTimeColumn {
                get {
                    return this.columnFridayEndTime;
                }
            }
            
            internal DataColumn SaturdayStartTimeColumn {
                get {
                    return this.columnSaturdayStartTime;
                }
            }
            
            internal DataColumn SaturdayEndTimeColumn {
                get {
                    return this.columnSaturdayEndTime;
                }
            }
            
            public CFTimeSlot this[int index] {
                get {
                    return ((CFTimeSlot)(this.Rows[index]));
                }
            }
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotChanged;
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotChanging;
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotDeleted;
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotDeleting;
            
            public void AddCFTimeSlot(CFTimeSlot row) {
                this.Rows.Add(row);
            }
            
            public CFTimeSlot AddCFTimeSlot(
                        System.Decimal SiteId, 
                        string Pool, 
                        string TimeSlot, 
                        System.Decimal SundayStartTime, 
                        System.Decimal SundayEndTime, 
                        System.Decimal MondayStartTime, 
                        System.Decimal MondayEndTime, 
                        System.Decimal TuesdayStartTime, 
                        System.Decimal TuesdayEndTime, 
                        System.Decimal WednesdayStartTime, 
                        System.Decimal WednesdayEndTime, 
                        System.Decimal ThursdayStartTime, 
                        System.Decimal ThursdayEndTime, 
                        System.Decimal FridayStartTime, 
                        System.Decimal FridayEndTime, 
                        System.Decimal SaturdayStartTime, 
                        System.Decimal SaturdayEndTime) {
                CFTimeSlot rowCFTimeSlot = ((CFTimeSlot)(this.NewRow()));
                rowCFTimeSlot.ItemArray = new object[] {
                        SiteId,
                        Pool,
                        TimeSlot,
                        SundayStartTime,
                        SundayEndTime,
                        MondayStartTime,
                        MondayEndTime,
                        TuesdayStartTime,
                        TuesdayEndTime,
                        WednesdayStartTime,
                        WednesdayEndTime,
                        ThursdayStartTime,
                        ThursdayEndTime,
                        FridayStartTime,
                        FridayEndTime,
                        SaturdayStartTime,
                        SaturdayEndTime};
                this.Rows.Add(rowCFTimeSlot);
                return rowCFTimeSlot;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CFTimeSlotsDataTable cln = ((CFTimeSlotsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CFTimeSlotsDataTable();
            }
            
            internal void InitVars() {
                this.columnSiteId = this.Columns["SITE_ID"];
                this.columnPool = this.Columns["POOL"];
                this.columnTimeSlot = this.Columns["POOL_TIME_SLOT"];
                this.columnSundayStartTime = this.Columns["SUN_START_TIME"];
                this.columnSundayEndTime = this.Columns["SUN_END_TIME"];
                this.columnMondayStartTime = this.Columns["MON_START_TIME"];
                this.columnMondayEndTime = this.Columns["MON_END_TIME"];
                this.columnTuesdayStartTime = this.Columns["TUE_START_TIME"];
                this.columnTuesdayEndTime = this.Columns["TUE_END_TIME"];
                this.columnWednesdayStartTime = this.Columns["WED_START_TIME"];
                this.columnWednesdayEndTime = this.Columns["WED_END_TIME"];
                this.columnThursdayStartTime = this.Columns["THU_START_TIME"];
                this.columnThursdayEndTime = this.Columns["THU_END_TIME"];
                this.columnFridayStartTime = this.Columns["FRI_START_TIME"];
                this.columnFridayEndTime = this.Columns["FRI_END_TIME"];
                this.columnSaturdayStartTime = this.Columns["SAT_START_TIME"];
                this.columnSaturdayEndTime = this.Columns["SAT_END_TIME"];
            }
            
            private void InitClass() {
                this.columnSiteId = new DataColumn("SITE_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSiteId);
                this.columnPool = new DataColumn("POOL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPool);
                this.columnTimeSlot = new DataColumn("POOL_TIME_SLOT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTimeSlot);
                this.columnSundayStartTime = new DataColumn("SUN_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSundayStartTime);
                this.columnSundayEndTime = new DataColumn("SUN_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSundayEndTime);
                this.columnMondayStartTime = new DataColumn("MON_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMondayStartTime);
                this.columnMondayEndTime = new DataColumn("MON_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMondayEndTime);
                this.columnTuesdayStartTime = new DataColumn("TUE_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTuesdayStartTime);
                this.columnTuesdayEndTime = new DataColumn("TUE_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTuesdayEndTime);
                this.columnWednesdayStartTime = new DataColumn("WED_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWednesdayStartTime);
                this.columnWednesdayEndTime = new DataColumn("WED_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWednesdayEndTime);
                this.columnThursdayStartTime = new DataColumn("THU_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThursdayStartTime);
                this.columnThursdayEndTime = new DataColumn("THU_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnThursdayEndTime);
                this.columnFridayStartTime = new DataColumn("FRI_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFridayStartTime);
                this.columnFridayEndTime = new DataColumn("FRI_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFridayEndTime);
                this.columnSaturdayStartTime = new DataColumn("SAT_START_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSaturdayStartTime);
                this.columnSaturdayEndTime = new DataColumn("SAT_END_TIME", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSaturdayEndTime);
                this.columnSiteId.AllowDBNull = false;
                this.columnPool.AllowDBNull = false;
                this.columnTimeSlot.AllowDBNull = false;
                this.columnSundayStartTime.AllowDBNull = false;
                this.columnSundayEndTime.AllowDBNull = false;
                this.columnMondayStartTime.AllowDBNull = false;
                this.columnMondayEndTime.AllowDBNull = false;
                this.columnTuesdayStartTime.AllowDBNull = false;
                this.columnTuesdayEndTime.AllowDBNull = false;
                this.columnWednesdayStartTime.AllowDBNull = false;
                this.columnWednesdayEndTime.AllowDBNull = false;
                this.columnThursdayStartTime.AllowDBNull = false;
                this.columnThursdayEndTime.AllowDBNull = false;
                this.columnFridayStartTime.AllowDBNull = false;
                this.columnFridayEndTime.AllowDBNull = false;
                this.columnSaturdayStartTime.AllowDBNull = false;
                this.columnSaturdayEndTime.AllowDBNull = false;
            }
            
            public CFTimeSlot NewCFTimeSlot() {
                return ((CFTimeSlot)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CFTimeSlot(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CFTimeSlot);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CFTimeSlotChanged != null)) {
                    this.CFTimeSlotChanged(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CFTimeSlotChanging != null)) {
                    this.CFTimeSlotChanging(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CFTimeSlotDeleted != null)) {
                    this.CFTimeSlotDeleted(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CFTimeSlotDeleting != null)) {
                    this.CFTimeSlotDeleting(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCFTimeSlot(CFTimeSlot row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CFTimeSlot : DataRow {
            
            private CFTimeSlotsDataTable tableCFTimeSlots;
            
            internal CFTimeSlot(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCFTimeSlots = ((CFTimeSlotsDataTable)(this.Table));
            }
            
            public System.Decimal SiteId {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.SiteIdColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SiteIdColumn] = value;
                }
            }
            
            public string Pool {
                get {
                    return ((string)(this[this.tableCFTimeSlots.PoolColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.PoolColumn] = value;
                }
            }
            
            public string TimeSlot {
                get {
                    return ((string)(this[this.tableCFTimeSlots.TimeSlotColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.TimeSlotColumn] = value;
                }
            }
            
            public System.Decimal SundayStartTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.SundayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SundayStartTimeColumn] = value;
                }
            }
            
            public System.Decimal SundayEndTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.SundayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SundayEndTimeColumn] = value;
                }
            }
            
            public System.Decimal MondayStartTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.MondayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.MondayStartTimeColumn] = value;
                }
            }
            
            public System.Decimal MondayEndTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.MondayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.MondayEndTimeColumn] = value;
                }
            }
            
            public System.Decimal TuesdayStartTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.TuesdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.TuesdayStartTimeColumn] = value;
                }
            }
            
            public System.Decimal TuesdayEndTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.TuesdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.TuesdayEndTimeColumn] = value;
                }
            }
            
            public System.Decimal WednesdayStartTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.WednesdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.WednesdayStartTimeColumn] = value;
                }
            }
            
            public System.Decimal WednesdayEndTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.WednesdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.WednesdayEndTimeColumn] = value;
                }
            }
            
            public System.Decimal ThursdayStartTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.ThursdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.ThursdayStartTimeColumn] = value;
                }
            }
            
            public System.Decimal ThursdayEndTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.ThursdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.ThursdayEndTimeColumn] = value;
                }
            }
            
            public System.Decimal FridayStartTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.FridayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.FridayStartTimeColumn] = value;
                }
            }
            
            public System.Decimal FridayEndTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.FridayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.FridayEndTimeColumn] = value;
                }
            }
            
            public System.Decimal SaturdayStartTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.SaturdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SaturdayStartTimeColumn] = value;
                }
            }
            
            public System.Decimal SaturdayEndTime {
                get {
                    return ((System.Decimal)(this[this.tableCFTimeSlots.SaturdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SaturdayEndTimeColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CFTimeSlotChangeEvent : EventArgs {
            
            private CFTimeSlot eventRow;
            
            private DataRowAction eventAction;
            
            public CFTimeSlotChangeEvent(CFTimeSlot row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CFTimeSlot Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
