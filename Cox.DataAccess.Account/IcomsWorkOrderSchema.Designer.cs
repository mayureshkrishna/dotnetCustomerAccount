//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Cox.DataAccess.Account {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("IcomsWorkOrderSchema")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class IcomsWorkOrderSchema : System.Data.DataSet {
        
        private IcomsWOrdersDataTable tableIcomsWOrders;
        
        private CFTimeSlotsDataTable tableCFTimeSlots;
        
        private WorkOrderMasterDataTable tableWorkOrderMaster;
        
        private WorkOrderDetailDataTable tableWorkOrderDetail;
        
        private WorkOrderCampaignDataTable tableWorkOrderCampaign;
        
        private System.Data.DataRelation relationWorkOrderMaster_WorkOrderDetail;
        
        private System.Data.DataRelation relationWorkOrderMaster_WorkOrderCampaign;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public IcomsWorkOrderSchema() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected IcomsWorkOrderSchema(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["IcomsWOrder"] != null)) {
                    base.Tables.Add(new IcomsWOrdersDataTable(ds.Tables["IcomsWOrder"]));
                }
                if ((ds.Tables["CFTimeSlot"] != null)) {
                    base.Tables.Add(new CFTimeSlotsDataTable(ds.Tables["CFTimeSlot"]));
                }
                if ((ds.Tables["WorkOrderMaster"] != null)) {
                    base.Tables.Add(new WorkOrderMasterDataTable(ds.Tables["WorkOrderMaster"]));
                }
                if ((ds.Tables["WorkOrderDetail"] != null)) {
                    base.Tables.Add(new WorkOrderDetailDataTable(ds.Tables["WorkOrderDetail"]));
                }
                if ((ds.Tables["WorkOrderCampaign"] != null)) {
                    base.Tables.Add(new WorkOrderCampaignDataTable(ds.Tables["WorkOrderCampaign"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IcomsWOrdersDataTable IcomsWOrders {
            get {
                return this.tableIcomsWOrders;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CFTimeSlotsDataTable CFTimeSlots {
            get {
                return this.tableCFTimeSlots;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkOrderMasterDataTable WorkOrderMaster {
            get {
                return this.tableWorkOrderMaster;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkOrderDetailDataTable WorkOrderDetail {
            get {
                return this.tableWorkOrderDetail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkOrderCampaignDataTable WorkOrderCampaign {
            get {
                return this.tableWorkOrderCampaign;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            IcomsWorkOrderSchema cln = ((IcomsWorkOrderSchema)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["IcomsWOrder"] != null)) {
                    base.Tables.Add(new IcomsWOrdersDataTable(ds.Tables["IcomsWOrder"]));
                }
                if ((ds.Tables["CFTimeSlot"] != null)) {
                    base.Tables.Add(new CFTimeSlotsDataTable(ds.Tables["CFTimeSlot"]));
                }
                if ((ds.Tables["WorkOrderMaster"] != null)) {
                    base.Tables.Add(new WorkOrderMasterDataTable(ds.Tables["WorkOrderMaster"]));
                }
                if ((ds.Tables["WorkOrderDetail"] != null)) {
                    base.Tables.Add(new WorkOrderDetailDataTable(ds.Tables["WorkOrderDetail"]));
                }
                if ((ds.Tables["WorkOrderCampaign"] != null)) {
                    base.Tables.Add(new WorkOrderCampaignDataTable(ds.Tables["WorkOrderCampaign"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableIcomsWOrders = ((IcomsWOrdersDataTable)(base.Tables["IcomsWOrder"]));
            if ((initTable == true)) {
                if ((this.tableIcomsWOrders != null)) {
                    this.tableIcomsWOrders.InitVars();
                }
            }
            this.tableCFTimeSlots = ((CFTimeSlotsDataTable)(base.Tables["CFTimeSlot"]));
            if ((initTable == true)) {
                if ((this.tableCFTimeSlots != null)) {
                    this.tableCFTimeSlots.InitVars();
                }
            }
            this.tableWorkOrderMaster = ((WorkOrderMasterDataTable)(base.Tables["WorkOrderMaster"]));
            if ((initTable == true)) {
                if ((this.tableWorkOrderMaster != null)) {
                    this.tableWorkOrderMaster.InitVars();
                }
            }
            this.tableWorkOrderDetail = ((WorkOrderDetailDataTable)(base.Tables["WorkOrderDetail"]));
            if ((initTable == true)) {
                if ((this.tableWorkOrderDetail != null)) {
                    this.tableWorkOrderDetail.InitVars();
                }
            }
            this.tableWorkOrderCampaign = ((WorkOrderCampaignDataTable)(base.Tables["WorkOrderCampaign"]));
            if ((initTable == true)) {
                if ((this.tableWorkOrderCampaign != null)) {
                    this.tableWorkOrderCampaign.InitVars();
                }
            }
            this.relationWorkOrderMaster_WorkOrderDetail = this.Relations["WorkOrderMaster_WorkOrderDetail"];
            this.relationWorkOrderMaster_WorkOrderCampaign = this.Relations["WorkOrderMaster_WorkOrderCampaign"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "IcomsWorkOrderSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/IcomsWorkOrderSchema.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableIcomsWOrders = new IcomsWOrdersDataTable();
            base.Tables.Add(this.tableIcomsWOrders);
            this.tableCFTimeSlots = new CFTimeSlotsDataTable();
            base.Tables.Add(this.tableCFTimeSlots);
            this.tableWorkOrderMaster = new WorkOrderMasterDataTable();
            base.Tables.Add(this.tableWorkOrderMaster);
            this.tableWorkOrderDetail = new WorkOrderDetailDataTable();
            base.Tables.Add(this.tableWorkOrderDetail);
            this.tableWorkOrderCampaign = new WorkOrderCampaignDataTable();
            base.Tables.Add(this.tableWorkOrderCampaign);
            this.relationWorkOrderMaster_WorkOrderDetail = new System.Data.DataRelation("WorkOrderMaster_WorkOrderDetail", new System.Data.DataColumn[] {
                        this.tableWorkOrderMaster.WORK_ORDER_NUMBERColumn}, new System.Data.DataColumn[] {
                        this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn}, false);
            this.Relations.Add(this.relationWorkOrderMaster_WorkOrderDetail);
            this.relationWorkOrderMaster_WorkOrderCampaign = new System.Data.DataRelation("WorkOrderMaster_WorkOrderCampaign", new System.Data.DataColumn[] {
                        this.tableWorkOrderMaster.WORK_ORDER_NUMBERColumn}, new System.Data.DataColumn[] {
                        this.tableWorkOrderCampaign.WORK_ORDER_NUMBERColumn}, false);
            this.Relations.Add(this.relationWorkOrderMaster_WorkOrderCampaign);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIcomsWOrders() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCFTimeSlots() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkOrderMaster() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkOrderDetail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWorkOrderCampaign() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            IcomsWorkOrderSchema ds = new IcomsWorkOrderSchema();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void IcomsWOrderChangeEventHandler(object sender, IcomsWOrderChangeEvent e);
        
        public delegate void CFTimeSlotChangeEventHandler(object sender, CFTimeSlotChangeEvent e);
        
        public delegate void WorkOrderMasterRowChangeEventHandler(object sender, WorkOrderMasterRowChangeEvent e);
        
        public delegate void WorkOrderDetailRowChangeEventHandler(object sender, WorkOrderDetailRowChangeEvent e);
        
        public delegate void WorkOrderCampaignRowChangeEventHandler(object sender, WorkOrderCampaignRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IcomsWOrdersDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnAccountNumber;
            
            private System.Data.DataColumn columnWorkOrderNumber;
            
            private System.Data.DataColumn columnWorkOrderStatus;
            
            private System.Data.DataColumn columnDateEntered;
            
            private System.Data.DataColumn columnTimeEntered;
            
            private System.Data.DataColumn columnWorkOrderType;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IcomsWOrdersDataTable() {
                this.TableName = "IcomsWOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IcomsWOrdersDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IcomsWOrdersDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountNumberColumn {
                get {
                    return this.columnAccountNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WorkOrderNumberColumn {
                get {
                    return this.columnWorkOrderNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WorkOrderStatusColumn {
                get {
                    return this.columnWorkOrderStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateEnteredColumn {
                get {
                    return this.columnDateEntered;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeEnteredColumn {
                get {
                    return this.columnTimeEntered;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WorkOrderTypeColumn {
                get {
                    return this.columnWorkOrderType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IcomsWOrder this[int index] {
                get {
                    return ((IcomsWOrder)(this.Rows[index]));
                }
            }
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderChanging;
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderChanged;
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderDeleting;
            
            public event IcomsWOrderChangeEventHandler IcomsWOrderDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIcomsWOrder(IcomsWOrder row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IcomsWOrder AddIcomsWOrder(decimal AccountNumber, decimal WorkOrderNumber, string WorkOrderStatus, decimal DateEntered, decimal TimeEntered, string WorkOrderType) {
                IcomsWOrder rowIcomsWOrder = ((IcomsWOrder)(this.NewRow()));
                rowIcomsWOrder.ItemArray = new object[] {
                        AccountNumber,
                        WorkOrderNumber,
                        WorkOrderStatus,
                        DateEntered,
                        TimeEntered,
                        WorkOrderType};
                this.Rows.Add(rowIcomsWOrder);
                return rowIcomsWOrder;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                IcomsWOrdersDataTable cln = ((IcomsWOrdersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new IcomsWOrdersDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAccountNumber = base.Columns["WOCU#"];
                this.columnWorkOrderNumber = base.Columns["WONUM"];
                this.columnWorkOrderStatus = base.Columns["WOSTT"];
                this.columnDateEntered = base.Columns["WOEDT"];
                this.columnTimeEntered = base.Columns["WOETM"];
                this.columnWorkOrderType = base.Columns["WOTYC"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAccountNumber = new System.Data.DataColumn("WOCU#", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAccountNumber.ExtendedProperties.Add("typedName", "AccountNumber");
                base.Columns.Add(this.columnAccountNumber);
                this.columnWorkOrderNumber = new System.Data.DataColumn("WONUM", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnWorkOrderNumber.ExtendedProperties.Add("typedName", "WorkOrderNumber");
                base.Columns.Add(this.columnWorkOrderNumber);
                this.columnWorkOrderStatus = new System.Data.DataColumn("WOSTT", typeof(string), null, System.Data.MappingType.Element);
                this.columnWorkOrderStatus.ExtendedProperties.Add("typedName", "WorkOrderStatus");
                base.Columns.Add(this.columnWorkOrderStatus);
                this.columnDateEntered = new System.Data.DataColumn("WOEDT", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnDateEntered.ExtendedProperties.Add("typedName", "DateEntered");
                base.Columns.Add(this.columnDateEntered);
                this.columnTimeEntered = new System.Data.DataColumn("WOETM", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnTimeEntered.ExtendedProperties.Add("typedName", "TimeEntered");
                base.Columns.Add(this.columnTimeEntered);
                this.columnWorkOrderType = new System.Data.DataColumn("WOTYC", typeof(string), null, System.Data.MappingType.Element);
                this.columnWorkOrderType.ExtendedProperties.Add("typedName", "WorkOrderType");
                base.Columns.Add(this.columnWorkOrderType);
                this.columnAccountNumber.AllowDBNull = false;
                this.columnWorkOrderNumber.AllowDBNull = false;
                this.columnWorkOrderStatus.AllowDBNull = false;
                this.columnDateEntered.AllowDBNull = false;
                this.columnTimeEntered.AllowDBNull = false;
                this.columnWorkOrderType.AllowDBNull = false;
                this.ExtendedProperties.Add("typedName", "IcomsWOrder");
                this.ExtendedProperties.Add("typedPlural", "IcomsWOrders");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IcomsWOrder NewIcomsWOrder() {
                return ((IcomsWOrder)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new IcomsWOrder(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(IcomsWOrder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IcomsWOrderChanged != null)) {
                    this.IcomsWOrderChanged(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IcomsWOrderChanging != null)) {
                    this.IcomsWOrderChanging(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IcomsWOrderDeleted != null)) {
                    this.IcomsWOrderDeleted(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IcomsWOrderDeleting != null)) {
                    this.IcomsWOrderDeleting(this, new IcomsWOrderChangeEvent(((IcomsWOrder)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIcomsWOrder(IcomsWOrder row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                IcomsWorkOrderSchema ds = new IcomsWorkOrderSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IcomsWOrdersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CFTimeSlotsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSiteId;
            
            private System.Data.DataColumn columnPool;
            
            private System.Data.DataColumn columnTimeSlot;
            
            private System.Data.DataColumn columnSundayStartTime;
            
            private System.Data.DataColumn columnSundayEndTime;
            
            private System.Data.DataColumn columnMondayStartTime;
            
            private System.Data.DataColumn columnMondayEndTime;
            
            private System.Data.DataColumn columnTuesdayStartTime;
            
            private System.Data.DataColumn columnTuesdayEndTime;
            
            private System.Data.DataColumn columnWednesdayStartTime;
            
            private System.Data.DataColumn columnWednesdayEndTime;
            
            private System.Data.DataColumn columnThursdayStartTime;
            
            private System.Data.DataColumn columnThursdayEndTime;
            
            private System.Data.DataColumn columnFridayStartTime;
            
            private System.Data.DataColumn columnFridayEndTime;
            
            private System.Data.DataColumn columnSaturdayStartTime;
            
            private System.Data.DataColumn columnSaturdayEndTime;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFTimeSlotsDataTable() {
                this.TableName = "CFTimeSlot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CFTimeSlotsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CFTimeSlotsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PoolColumn {
                get {
                    return this.columnPool;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TimeSlotColumn {
                get {
                    return this.columnTimeSlot;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SundayStartTimeColumn {
                get {
                    return this.columnSundayStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SundayEndTimeColumn {
                get {
                    return this.columnSundayEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MondayStartTimeColumn {
                get {
                    return this.columnMondayStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MondayEndTimeColumn {
                get {
                    return this.columnMondayEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TuesdayStartTimeColumn {
                get {
                    return this.columnTuesdayStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TuesdayEndTimeColumn {
                get {
                    return this.columnTuesdayEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WednesdayStartTimeColumn {
                get {
                    return this.columnWednesdayStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WednesdayEndTimeColumn {
                get {
                    return this.columnWednesdayEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThursdayStartTimeColumn {
                get {
                    return this.columnThursdayStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThursdayEndTimeColumn {
                get {
                    return this.columnThursdayEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FridayStartTimeColumn {
                get {
                    return this.columnFridayStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FridayEndTimeColumn {
                get {
                    return this.columnFridayEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SaturdayStartTimeColumn {
                get {
                    return this.columnSaturdayStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SaturdayEndTimeColumn {
                get {
                    return this.columnSaturdayEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFTimeSlot this[int index] {
                get {
                    return ((CFTimeSlot)(this.Rows[index]));
                }
            }
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotChanging;
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotChanged;
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotDeleting;
            
            public event CFTimeSlotChangeEventHandler CFTimeSlotDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCFTimeSlot(CFTimeSlot row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFTimeSlot AddCFTimeSlot(
                        decimal SiteId, 
                        string Pool, 
                        string TimeSlot, 
                        decimal SundayStartTime, 
                        decimal SundayEndTime, 
                        decimal MondayStartTime, 
                        decimal MondayEndTime, 
                        decimal TuesdayStartTime, 
                        decimal TuesdayEndTime, 
                        decimal WednesdayStartTime, 
                        decimal WednesdayEndTime, 
                        decimal ThursdayStartTime, 
                        decimal ThursdayEndTime, 
                        decimal FridayStartTime, 
                        decimal FridayEndTime, 
                        decimal SaturdayStartTime, 
                        decimal SaturdayEndTime) {
                CFTimeSlot rowCFTimeSlot = ((CFTimeSlot)(this.NewRow()));
                rowCFTimeSlot.ItemArray = new object[] {
                        SiteId,
                        Pool,
                        TimeSlot,
                        SundayStartTime,
                        SundayEndTime,
                        MondayStartTime,
                        MondayEndTime,
                        TuesdayStartTime,
                        TuesdayEndTime,
                        WednesdayStartTime,
                        WednesdayEndTime,
                        ThursdayStartTime,
                        ThursdayEndTime,
                        FridayStartTime,
                        FridayEndTime,
                        SaturdayStartTime,
                        SaturdayEndTime};
                this.Rows.Add(rowCFTimeSlot);
                return rowCFTimeSlot;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CFTimeSlotsDataTable cln = ((CFTimeSlotsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CFTimeSlotsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteId = base.Columns["SITE_ID"];
                this.columnPool = base.Columns["POOL"];
                this.columnTimeSlot = base.Columns["POOL_TIME_SLOT"];
                this.columnSundayStartTime = base.Columns["SUN_START_TIME"];
                this.columnSundayEndTime = base.Columns["SUN_END_TIME"];
                this.columnMondayStartTime = base.Columns["MON_START_TIME"];
                this.columnMondayEndTime = base.Columns["MON_END_TIME"];
                this.columnTuesdayStartTime = base.Columns["TUE_START_TIME"];
                this.columnTuesdayEndTime = base.Columns["TUE_END_TIME"];
                this.columnWednesdayStartTime = base.Columns["WED_START_TIME"];
                this.columnWednesdayEndTime = base.Columns["WED_END_TIME"];
                this.columnThursdayStartTime = base.Columns["THU_START_TIME"];
                this.columnThursdayEndTime = base.Columns["THU_END_TIME"];
                this.columnFridayStartTime = base.Columns["FRI_START_TIME"];
                this.columnFridayEndTime = base.Columns["FRI_END_TIME"];
                this.columnSaturdayStartTime = base.Columns["SAT_START_TIME"];
                this.columnSaturdayEndTime = base.Columns["SAT_END_TIME"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteId = new System.Data.DataColumn("SITE_ID", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSiteId.ExtendedProperties.Add("typedName", "SiteId");
                base.Columns.Add(this.columnSiteId);
                this.columnPool = new System.Data.DataColumn("POOL", typeof(string), null, System.Data.MappingType.Element);
                this.columnPool.ExtendedProperties.Add("typedName", "Pool");
                base.Columns.Add(this.columnPool);
                this.columnTimeSlot = new System.Data.DataColumn("POOL_TIME_SLOT", typeof(string), null, System.Data.MappingType.Element);
                this.columnTimeSlot.ExtendedProperties.Add("typedName", "TimeSlot");
                base.Columns.Add(this.columnTimeSlot);
                this.columnSundayStartTime = new System.Data.DataColumn("SUN_START_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSundayStartTime.ExtendedProperties.Add("typedName", "SundayStartTime");
                base.Columns.Add(this.columnSundayStartTime);
                this.columnSundayEndTime = new System.Data.DataColumn("SUN_END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSundayEndTime.ExtendedProperties.Add("typedName", "SundayEndTime");
                base.Columns.Add(this.columnSundayEndTime);
                this.columnMondayStartTime = new System.Data.DataColumn("MON_START_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnMondayStartTime.ExtendedProperties.Add("typedName", "MondayStartTime");
                base.Columns.Add(this.columnMondayStartTime);
                this.columnMondayEndTime = new System.Data.DataColumn("MON_END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnMondayEndTime.ExtendedProperties.Add("typedName", "MondayEndTime");
                base.Columns.Add(this.columnMondayEndTime);
                this.columnTuesdayStartTime = new System.Data.DataColumn("TUE_START_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnTuesdayStartTime.ExtendedProperties.Add("typedName", "TuesdayStartTime");
                base.Columns.Add(this.columnTuesdayStartTime);
                this.columnTuesdayEndTime = new System.Data.DataColumn("TUE_END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnTuesdayEndTime.ExtendedProperties.Add("typedName", "TuesdayEndTime");
                base.Columns.Add(this.columnTuesdayEndTime);
                this.columnWednesdayStartTime = new System.Data.DataColumn("WED_START_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnWednesdayStartTime.ExtendedProperties.Add("typedName", "WednesdayStartTime");
                base.Columns.Add(this.columnWednesdayStartTime);
                this.columnWednesdayEndTime = new System.Data.DataColumn("WED_END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnWednesdayEndTime.ExtendedProperties.Add("typedName", "WednesdayEndTime");
                base.Columns.Add(this.columnWednesdayEndTime);
                this.columnThursdayStartTime = new System.Data.DataColumn("THU_START_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnThursdayStartTime.ExtendedProperties.Add("typedName", "ThursdayStartTime");
                base.Columns.Add(this.columnThursdayStartTime);
                this.columnThursdayEndTime = new System.Data.DataColumn("THU_END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnThursdayEndTime.ExtendedProperties.Add("typedName", "ThursdayEndTime");
                base.Columns.Add(this.columnThursdayEndTime);
                this.columnFridayStartTime = new System.Data.DataColumn("FRI_START_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnFridayStartTime.ExtendedProperties.Add("typedName", "FridayStartTime");
                base.Columns.Add(this.columnFridayStartTime);
                this.columnFridayEndTime = new System.Data.DataColumn("FRI_END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnFridayEndTime.ExtendedProperties.Add("typedName", "FridayEndTime");
                base.Columns.Add(this.columnFridayEndTime);
                this.columnSaturdayStartTime = new System.Data.DataColumn("SAT_START_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSaturdayStartTime.ExtendedProperties.Add("typedName", "SaturdayStartTime");
                base.Columns.Add(this.columnSaturdayStartTime);
                this.columnSaturdayEndTime = new System.Data.DataColumn("SAT_END_TIME", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSaturdayEndTime.ExtendedProperties.Add("typedName", "SaturdayEndTime");
                base.Columns.Add(this.columnSaturdayEndTime);
                this.columnSiteId.AllowDBNull = false;
                this.columnPool.AllowDBNull = false;
                this.columnTimeSlot.AllowDBNull = false;
                this.columnSundayStartTime.AllowDBNull = false;
                this.columnSundayEndTime.AllowDBNull = false;
                this.columnMondayStartTime.AllowDBNull = false;
                this.columnMondayEndTime.AllowDBNull = false;
                this.columnTuesdayStartTime.AllowDBNull = false;
                this.columnTuesdayEndTime.AllowDBNull = false;
                this.columnWednesdayStartTime.AllowDBNull = false;
                this.columnWednesdayEndTime.AllowDBNull = false;
                this.columnThursdayStartTime.AllowDBNull = false;
                this.columnThursdayEndTime.AllowDBNull = false;
                this.columnFridayStartTime.AllowDBNull = false;
                this.columnFridayEndTime.AllowDBNull = false;
                this.columnSaturdayStartTime.AllowDBNull = false;
                this.columnSaturdayEndTime.AllowDBNull = false;
                this.ExtendedProperties.Add("typedName", "CFTimeSlot");
                this.ExtendedProperties.Add("typedPlural", "CFTimeSlots");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFTimeSlot NewCFTimeSlot() {
                return ((CFTimeSlot)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CFTimeSlot(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CFTimeSlot);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CFTimeSlotChanged != null)) {
                    this.CFTimeSlotChanged(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CFTimeSlotChanging != null)) {
                    this.CFTimeSlotChanging(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CFTimeSlotDeleted != null)) {
                    this.CFTimeSlotDeleted(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CFTimeSlotDeleting != null)) {
                    this.CFTimeSlotDeleting(this, new CFTimeSlotChangeEvent(((CFTimeSlot)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCFTimeSlot(CFTimeSlot row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                IcomsWorkOrderSchema ds = new IcomsWorkOrderSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CFTimeSlotsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkOrderMasterDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnWORK_ORDER_NUMBER;
            
            private System.Data.DataColumn columnSITE_ID;
            
            private System.Data.DataColumn columnACCOUNT_NUMBER;
            
            private System.Data.DataColumn columnCHECK_IN_STATUS;
            
            private System.Data.DataColumn columnDATE_ENTERED;
            
            private System.Data.DataColumn columnTIME_ENTERED;
            
            private System.Data.DataColumn columnWO_COMMENT_LINE_01;
            
            private System.Data.DataColumn columnWO_COMMENT_LINE_02;
            
            private System.Data.DataColumn columnWO_COMMENT_LINE_03;
            
            private System.Data.DataColumn columnINSTALL_COMPLETION_DATE;
            
            private System.Data.DataColumn columnWO_STATUS;
            
            private System.Data.DataColumn columnWO_TYPE;
            
            private System.Data.DataColumn columnCHECK_IN_DATE;
            
            private System.Data.DataColumn columnCANCEL_CODE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterDataTable() {
                this.TableName = "WorkOrderMaster";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderMasterDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkOrderMasterDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WORK_ORDER_NUMBERColumn {
                get {
                    return this.columnWORK_ORDER_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SITE_IDColumn {
                get {
                    return this.columnSITE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_NUMBERColumn {
                get {
                    return this.columnACCOUNT_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CHECK_IN_STATUSColumn {
                get {
                    return this.columnCHECK_IN_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATE_ENTEREDColumn {
                get {
                    return this.columnDATE_ENTERED;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIME_ENTEREDColumn {
                get {
                    return this.columnTIME_ENTERED;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_COMMENT_LINE_01Column {
                get {
                    return this.columnWO_COMMENT_LINE_01;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_COMMENT_LINE_02Column {
                get {
                    return this.columnWO_COMMENT_LINE_02;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_COMMENT_LINE_03Column {
                get {
                    return this.columnWO_COMMENT_LINE_03;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INSTALL_COMPLETION_DATEColumn {
                get {
                    return this.columnINSTALL_COMPLETION_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_STATUSColumn {
                get {
                    return this.columnWO_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WO_TYPEColumn {
                get {
                    return this.columnWO_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CHECK_IN_DATEColumn {
                get {
                    return this.columnCHECK_IN_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CANCEL_CODEColumn {
                get {
                    return this.columnCANCEL_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterRow this[int index] {
                get {
                    return ((WorkOrderMasterRow)(this.Rows[index]));
                }
            }
            
            public event WorkOrderMasterRowChangeEventHandler WorkOrderMasterRowChanging;
            
            public event WorkOrderMasterRowChangeEventHandler WorkOrderMasterRowChanged;
            
            public event WorkOrderMasterRowChangeEventHandler WorkOrderMasterRowDeleting;
            
            public event WorkOrderMasterRowChangeEventHandler WorkOrderMasterRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkOrderMasterRow(WorkOrderMasterRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterRow AddWorkOrderMasterRow(decimal WORK_ORDER_NUMBER, int SITE_ID, decimal ACCOUNT_NUMBER, string CHECK_IN_STATUS, decimal DATE_ENTERED, decimal TIME_ENTERED, string WO_COMMENT_LINE_01, string WO_COMMENT_LINE_02, string WO_COMMENT_LINE_03, decimal INSTALL_COMPLETION_DATE, string WO_STATUS, string WO_TYPE, decimal CHECK_IN_DATE, string CANCEL_CODE) {
                WorkOrderMasterRow rowWorkOrderMasterRow = ((WorkOrderMasterRow)(this.NewRow()));
                rowWorkOrderMasterRow.ItemArray = new object[] {
                        WORK_ORDER_NUMBER,
                        SITE_ID,
                        ACCOUNT_NUMBER,
                        CHECK_IN_STATUS,
                        DATE_ENTERED,
                        TIME_ENTERED,
                        WO_COMMENT_LINE_01,
                        WO_COMMENT_LINE_02,
                        WO_COMMENT_LINE_03,
                        INSTALL_COMPLETION_DATE,
                        WO_STATUS,
                        WO_TYPE,
                        CHECK_IN_DATE,
                        CANCEL_CODE};
                this.Rows.Add(rowWorkOrderMasterRow);
                return rowWorkOrderMasterRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                WorkOrderMasterDataTable cln = ((WorkOrderMasterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new WorkOrderMasterDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWORK_ORDER_NUMBER = base.Columns["WORK_ORDER_NUMBER"];
                this.columnSITE_ID = base.Columns["SITE_ID"];
                this.columnACCOUNT_NUMBER = base.Columns["ACCOUNT_NUMBER"];
                this.columnCHECK_IN_STATUS = base.Columns["CHECK_IN_STATUS"];
                this.columnDATE_ENTERED = base.Columns["DATE_ENTERED"];
                this.columnTIME_ENTERED = base.Columns["TIME_ENTERED"];
                this.columnWO_COMMENT_LINE_01 = base.Columns["WO_COMMENT_LINE_01"];
                this.columnWO_COMMENT_LINE_02 = base.Columns["WO_COMMENT_LINE_02"];
                this.columnWO_COMMENT_LINE_03 = base.Columns["WO_COMMENT_LINE_03"];
                this.columnINSTALL_COMPLETION_DATE = base.Columns["INSTALL_COMPLETION_DATE"];
                this.columnWO_STATUS = base.Columns["WO_STATUS"];
                this.columnWO_TYPE = base.Columns["WO_TYPE"];
                this.columnCHECK_IN_DATE = base.Columns["CHECK_IN_DATE"];
                this.columnCANCEL_CODE = base.Columns["CANCEL_CODE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWORK_ORDER_NUMBER = new System.Data.DataColumn("WORK_ORDER_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_ORDER_NUMBER);
                this.columnSITE_ID = new System.Data.DataColumn("SITE_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITE_ID);
                this.columnACCOUNT_NUMBER = new System.Data.DataColumn("ACCOUNT_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NUMBER);
                this.columnCHECK_IN_STATUS = new System.Data.DataColumn("CHECK_IN_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECK_IN_STATUS);
                this.columnDATE_ENTERED = new System.Data.DataColumn("DATE_ENTERED", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_ENTERED);
                this.columnTIME_ENTERED = new System.Data.DataColumn("TIME_ENTERED", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME_ENTERED);
                this.columnWO_COMMENT_LINE_01 = new System.Data.DataColumn("WO_COMMENT_LINE_01", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_COMMENT_LINE_01);
                this.columnWO_COMMENT_LINE_02 = new System.Data.DataColumn("WO_COMMENT_LINE_02", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_COMMENT_LINE_02);
                this.columnWO_COMMENT_LINE_03 = new System.Data.DataColumn("WO_COMMENT_LINE_03", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_COMMENT_LINE_03);
                this.columnINSTALL_COMPLETION_DATE = new System.Data.DataColumn("INSTALL_COMPLETION_DATE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTALL_COMPLETION_DATE);
                this.columnWO_STATUS = new System.Data.DataColumn("WO_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_STATUS);
                this.columnWO_TYPE = new System.Data.DataColumn("WO_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWO_TYPE);
                this.columnCHECK_IN_DATE = new System.Data.DataColumn("CHECK_IN_DATE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECK_IN_DATE);
                this.columnCANCEL_CODE = new System.Data.DataColumn("CANCEL_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCEL_CODE);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterRow NewWorkOrderMasterRow() {
                return ((WorkOrderMasterRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new WorkOrderMasterRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(WorkOrderMasterRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkOrderMasterRowChanged != null)) {
                    this.WorkOrderMasterRowChanged(this, new WorkOrderMasterRowChangeEvent(((WorkOrderMasterRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkOrderMasterRowChanging != null)) {
                    this.WorkOrderMasterRowChanging(this, new WorkOrderMasterRowChangeEvent(((WorkOrderMasterRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkOrderMasterRowDeleted != null)) {
                    this.WorkOrderMasterRowDeleted(this, new WorkOrderMasterRowChangeEvent(((WorkOrderMasterRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkOrderMasterRowDeleting != null)) {
                    this.WorkOrderMasterRowDeleting(this, new WorkOrderMasterRowChangeEvent(((WorkOrderMasterRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkOrderMasterRow(WorkOrderMasterRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                IcomsWorkOrderSchema ds = new IcomsWorkOrderSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkOrderMasterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkOrderDetailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnWORK_ORDER_NUMBER;
            
            private System.Data.DataColumn columnSERVICE_CODE;
            
            private System.Data.DataColumn columnPRODUCT_LINE_CD;
            
            private System.Data.DataColumn columnWORK_ORDER_OCCURRENCE;
            
            private System.Data.DataColumn columnFROM_QUANTITY;
            
            private System.Data.DataColumn columnTO_QUANTITY;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailDataTable() {
                this.TableName = "WorkOrderDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderDetailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkOrderDetailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WORK_ORDER_NUMBERColumn {
                get {
                    return this.columnWORK_ORDER_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_CODEColumn {
                get {
                    return this.columnSERVICE_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRODUCT_LINE_CDColumn {
                get {
                    return this.columnPRODUCT_LINE_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WORK_ORDER_OCCURRENCEColumn {
                get {
                    return this.columnWORK_ORDER_OCCURRENCE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FROM_QUANTITYColumn {
                get {
                    return this.columnFROM_QUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TO_QUANTITYColumn {
                get {
                    return this.columnTO_QUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow this[int index] {
                get {
                    return ((WorkOrderDetailRow)(this.Rows[index]));
                }
            }
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowChanging;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowChanged;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowDeleting;
            
            public event WorkOrderDetailRowChangeEventHandler WorkOrderDetailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkOrderDetailRow(WorkOrderDetailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow AddWorkOrderDetailRow(WorkOrderMasterRow parentWorkOrderMasterRowByWorkOrderMaster_WorkOrderDetail, string SERVICE_CODE, decimal PRODUCT_LINE_CD, decimal WORK_ORDER_OCCURRENCE, decimal FROM_QUANTITY, decimal TO_QUANTITY) {
                WorkOrderDetailRow rowWorkOrderDetailRow = ((WorkOrderDetailRow)(this.NewRow()));
                rowWorkOrderDetailRow.ItemArray = new object[] {
                        parentWorkOrderMasterRowByWorkOrderMaster_WorkOrderDetail[0],
                        SERVICE_CODE,
                        PRODUCT_LINE_CD,
                        WORK_ORDER_OCCURRENCE,
                        FROM_QUANTITY,
                        TO_QUANTITY};
                this.Rows.Add(rowWorkOrderDetailRow);
                return rowWorkOrderDetailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                WorkOrderDetailDataTable cln = ((WorkOrderDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new WorkOrderDetailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWORK_ORDER_NUMBER = base.Columns["WORK_ORDER_NUMBER"];
                this.columnSERVICE_CODE = base.Columns["SERVICE_CODE"];
                this.columnPRODUCT_LINE_CD = base.Columns["PRODUCT_LINE_CD"];
                this.columnWORK_ORDER_OCCURRENCE = base.Columns["WORK_ORDER_OCCURRENCE"];
                this.columnFROM_QUANTITY = base.Columns["FROM_QUANTITY"];
                this.columnTO_QUANTITY = base.Columns["TO_QUANTITY"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWORK_ORDER_NUMBER = new System.Data.DataColumn("WORK_ORDER_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_ORDER_NUMBER);
                this.columnSERVICE_CODE = new System.Data.DataColumn("SERVICE_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_CODE);
                this.columnPRODUCT_LINE_CD = new System.Data.DataColumn("PRODUCT_LINE_CD", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_LINE_CD);
                this.columnWORK_ORDER_OCCURRENCE = new System.Data.DataColumn("WORK_ORDER_OCCURRENCE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_ORDER_OCCURRENCE);
                this.columnFROM_QUANTITY = new System.Data.DataColumn("FROM_QUANTITY", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFROM_QUANTITY);
                this.columnTO_QUANTITY = new System.Data.DataColumn("TO_QUANTITY", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTO_QUANTITY);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow NewWorkOrderDetailRow() {
                return ((WorkOrderDetailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new WorkOrderDetailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(WorkOrderDetailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkOrderDetailRowChanged != null)) {
                    this.WorkOrderDetailRowChanged(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkOrderDetailRowChanging != null)) {
                    this.WorkOrderDetailRowChanging(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkOrderDetailRowDeleted != null)) {
                    this.WorkOrderDetailRowDeleted(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkOrderDetailRowDeleting != null)) {
                    this.WorkOrderDetailRowDeleting(this, new WorkOrderDetailRowChangeEvent(((WorkOrderDetailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkOrderDetailRow(WorkOrderDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                IcomsWorkOrderSchema ds = new IcomsWorkOrderSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkOrderDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkOrderCampaignDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnWORK_ORDER_NUMBER;
            
            private System.Data.DataColumn columnPROMOTION_CODE;
            
            private System.Data.DataColumn columnPROMOTION_GROUP_CODE;
            
            private System.Data.DataColumn columnPROMOTION_TYPE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderCampaignDataTable() {
                this.TableName = "WorkOrderCampaign";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderCampaignDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WorkOrderCampaignDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WORK_ORDER_NUMBERColumn {
                get {
                    return this.columnWORK_ORDER_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROMOTION_CODEColumn {
                get {
                    return this.columnPROMOTION_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROMOTION_GROUP_CODEColumn {
                get {
                    return this.columnPROMOTION_GROUP_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROMOTION_TYPEColumn {
                get {
                    return this.columnPROMOTION_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderCampaignRow this[int index] {
                get {
                    return ((WorkOrderCampaignRow)(this.Rows[index]));
                }
            }
            
            public event WorkOrderCampaignRowChangeEventHandler WorkOrderCampaignRowChanging;
            
            public event WorkOrderCampaignRowChangeEventHandler WorkOrderCampaignRowChanged;
            
            public event WorkOrderCampaignRowChangeEventHandler WorkOrderCampaignRowDeleting;
            
            public event WorkOrderCampaignRowChangeEventHandler WorkOrderCampaignRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWorkOrderCampaignRow(WorkOrderCampaignRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderCampaignRow AddWorkOrderCampaignRow(WorkOrderMasterRow parentWorkOrderMasterRowByWorkOrderMaster_WorkOrderCampaign, string PROMOTION_CODE, decimal PROMOTION_GROUP_CODE, string PROMOTION_TYPE) {
                WorkOrderCampaignRow rowWorkOrderCampaignRow = ((WorkOrderCampaignRow)(this.NewRow()));
                rowWorkOrderCampaignRow.ItemArray = new object[] {
                        parentWorkOrderMasterRowByWorkOrderMaster_WorkOrderCampaign[0],
                        PROMOTION_CODE,
                        PROMOTION_GROUP_CODE,
                        PROMOTION_TYPE};
                this.Rows.Add(rowWorkOrderCampaignRow);
                return rowWorkOrderCampaignRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                WorkOrderCampaignDataTable cln = ((WorkOrderCampaignDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new WorkOrderCampaignDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWORK_ORDER_NUMBER = base.Columns["WORK_ORDER_NUMBER"];
                this.columnPROMOTION_CODE = base.Columns["PROMOTION_CODE"];
                this.columnPROMOTION_GROUP_CODE = base.Columns["PROMOTION_GROUP_CODE"];
                this.columnPROMOTION_TYPE = base.Columns["PROMOTION_TYPE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWORK_ORDER_NUMBER = new System.Data.DataColumn("WORK_ORDER_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_ORDER_NUMBER);
                this.columnPROMOTION_CODE = new System.Data.DataColumn("PROMOTION_CODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROMOTION_CODE);
                this.columnPROMOTION_GROUP_CODE = new System.Data.DataColumn("PROMOTION_GROUP_CODE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROMOTION_GROUP_CODE);
                this.columnPROMOTION_TYPE = new System.Data.DataColumn("PROMOTION_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROMOTION_TYPE);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderCampaignRow NewWorkOrderCampaignRow() {
                return ((WorkOrderCampaignRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new WorkOrderCampaignRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(WorkOrderCampaignRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkOrderCampaignRowChanged != null)) {
                    this.WorkOrderCampaignRowChanged(this, new WorkOrderCampaignRowChangeEvent(((WorkOrderCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkOrderCampaignRowChanging != null)) {
                    this.WorkOrderCampaignRowChanging(this, new WorkOrderCampaignRowChangeEvent(((WorkOrderCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkOrderCampaignRowDeleted != null)) {
                    this.WorkOrderCampaignRowDeleted(this, new WorkOrderCampaignRowChangeEvent(((WorkOrderCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkOrderCampaignRowDeleting != null)) {
                    this.WorkOrderCampaignRowDeleting(this, new WorkOrderCampaignRowChangeEvent(((WorkOrderCampaignRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWorkOrderCampaignRow(WorkOrderCampaignRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                IcomsWorkOrderSchema ds = new IcomsWorkOrderSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkOrderCampaignDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IcomsWOrder : System.Data.DataRow {
            
            private IcomsWOrdersDataTable tableIcomsWOrders;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IcomsWOrder(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIcomsWOrders = ((IcomsWOrdersDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AccountNumber {
                get {
                    return ((decimal)(this[this.tableIcomsWOrders.AccountNumberColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.AccountNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WorkOrderNumber {
                get {
                    return ((decimal)(this[this.tableIcomsWOrders.WorkOrderNumberColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.WorkOrderNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkOrderStatus {
                get {
                    return ((string)(this[this.tableIcomsWOrders.WorkOrderStatusColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.WorkOrderStatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DateEntered {
                get {
                    return ((decimal)(this[this.tableIcomsWOrders.DateEnteredColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.DateEnteredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TimeEntered {
                get {
                    return ((decimal)(this[this.tableIcomsWOrders.TimeEnteredColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.TimeEnteredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkOrderType {
                get {
                    return ((string)(this[this.tableIcomsWOrders.WorkOrderTypeColumn]));
                }
                set {
                    this[this.tableIcomsWOrders.WorkOrderTypeColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CFTimeSlot : System.Data.DataRow {
            
            private CFTimeSlotsDataTable tableCFTimeSlots;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CFTimeSlot(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCFTimeSlots = ((CFTimeSlotsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteId {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.SiteIdColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SiteIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pool {
                get {
                    return ((string)(this[this.tableCFTimeSlots.PoolColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.PoolColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeSlot {
                get {
                    return ((string)(this[this.tableCFTimeSlots.TimeSlotColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.TimeSlotColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SundayStartTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.SundayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SundayStartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SundayEndTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.SundayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SundayEndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MondayStartTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.MondayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.MondayStartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MondayEndTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.MondayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.MondayEndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TuesdayStartTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.TuesdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.TuesdayStartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TuesdayEndTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.TuesdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.TuesdayEndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WednesdayStartTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.WednesdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.WednesdayStartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WednesdayEndTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.WednesdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.WednesdayEndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ThursdayStartTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.ThursdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.ThursdayStartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ThursdayEndTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.ThursdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.ThursdayEndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FridayStartTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.FridayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.FridayStartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FridayEndTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.FridayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.FridayEndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaturdayStartTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.SaturdayStartTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SaturdayStartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaturdayEndTime {
                get {
                    return ((decimal)(this[this.tableCFTimeSlots.SaturdayEndTimeColumn]));
                }
                set {
                    this[this.tableCFTimeSlots.SaturdayEndTimeColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkOrderMasterRow : System.Data.DataRow {
            
            private WorkOrderMasterDataTable tableWorkOrderMaster;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderMasterRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkOrderMaster = ((WorkOrderMasterDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WORK_ORDER_NUMBER {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderMaster.WORK_ORDER_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WORK_ORDER_NUMBER\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.WORK_ORDER_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SITE_ID {
                get {
                    try {
                        return ((int)(this[this.tableWorkOrderMaster.SITE_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SITE_ID\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.SITE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ACCOUNT_NUMBER {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderMaster.ACCOUNT_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_NUMBER\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.ACCOUNT_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHECK_IN_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderMaster.CHECK_IN_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CHECK_IN_STATUS\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.CHECK_IN_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DATE_ENTERED {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderMaster.DATE_ENTEREDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATE_ENTERED\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.DATE_ENTEREDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIME_ENTERED {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderMaster.TIME_ENTEREDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TIME_ENTERED\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.TIME_ENTEREDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_COMMENT_LINE_01 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderMaster.WO_COMMENT_LINE_01Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_COMMENT_LINE_01\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.WO_COMMENT_LINE_01Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_COMMENT_LINE_02 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderMaster.WO_COMMENT_LINE_02Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_COMMENT_LINE_02\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.WO_COMMENT_LINE_02Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_COMMENT_LINE_03 {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderMaster.WO_COMMENT_LINE_03Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_COMMENT_LINE_03\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.WO_COMMENT_LINE_03Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INSTALL_COMPLETION_DATE {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderMaster.INSTALL_COMPLETION_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'INSTALL_COMPLETION_DATE\' in table \'WorkOrderMaster\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.INSTALL_COMPLETION_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderMaster.WO_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_STATUS\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.WO_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WO_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderMaster.WO_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WO_TYPE\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.WO_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CHECK_IN_DATE {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderMaster.CHECK_IN_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CHECK_IN_DATE\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.CHECK_IN_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CANCEL_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderMaster.CANCEL_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CANCEL_CODE\' in table \'WorkOrderMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderMaster.CANCEL_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWORK_ORDER_NUMBERNull() {
                return this.IsNull(this.tableWorkOrderMaster.WORK_ORDER_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWORK_ORDER_NUMBERNull() {
                this[this.tableWorkOrderMaster.WORK_ORDER_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITE_IDNull() {
                return this.IsNull(this.tableWorkOrderMaster.SITE_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITE_IDNull() {
                this[this.tableWorkOrderMaster.SITE_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_NUMBERNull() {
                return this.IsNull(this.tableWorkOrderMaster.ACCOUNT_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_NUMBERNull() {
                this[this.tableWorkOrderMaster.ACCOUNT_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHECK_IN_STATUSNull() {
                return this.IsNull(this.tableWorkOrderMaster.CHECK_IN_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHECK_IN_STATUSNull() {
                this[this.tableWorkOrderMaster.CHECK_IN_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_ENTEREDNull() {
                return this.IsNull(this.tableWorkOrderMaster.DATE_ENTEREDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_ENTEREDNull() {
                this[this.tableWorkOrderMaster.DATE_ENTEREDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIME_ENTEREDNull() {
                return this.IsNull(this.tableWorkOrderMaster.TIME_ENTEREDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIME_ENTEREDNull() {
                this[this.tableWorkOrderMaster.TIME_ENTEREDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_COMMENT_LINE_01Null() {
                return this.IsNull(this.tableWorkOrderMaster.WO_COMMENT_LINE_01Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_COMMENT_LINE_01Null() {
                this[this.tableWorkOrderMaster.WO_COMMENT_LINE_01Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_COMMENT_LINE_02Null() {
                return this.IsNull(this.tableWorkOrderMaster.WO_COMMENT_LINE_02Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_COMMENT_LINE_02Null() {
                this[this.tableWorkOrderMaster.WO_COMMENT_LINE_02Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_COMMENT_LINE_03Null() {
                return this.IsNull(this.tableWorkOrderMaster.WO_COMMENT_LINE_03Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_COMMENT_LINE_03Null() {
                this[this.tableWorkOrderMaster.WO_COMMENT_LINE_03Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSTALL_COMPLETION_DATENull() {
                return this.IsNull(this.tableWorkOrderMaster.INSTALL_COMPLETION_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSTALL_COMPLETION_DATENull() {
                this[this.tableWorkOrderMaster.INSTALL_COMPLETION_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_STATUSNull() {
                return this.IsNull(this.tableWorkOrderMaster.WO_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_STATUSNull() {
                this[this.tableWorkOrderMaster.WO_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWO_TYPENull() {
                return this.IsNull(this.tableWorkOrderMaster.WO_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWO_TYPENull() {
                this[this.tableWorkOrderMaster.WO_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHECK_IN_DATENull() {
                return this.IsNull(this.tableWorkOrderMaster.CHECK_IN_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHECK_IN_DATENull() {
                this[this.tableWorkOrderMaster.CHECK_IN_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCANCEL_CODENull() {
                return this.IsNull(this.tableWorkOrderMaster.CANCEL_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCANCEL_CODENull() {
                this[this.tableWorkOrderMaster.CANCEL_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow[] GetWorkOrderDetailRows() {
                return ((WorkOrderDetailRow[])(base.GetChildRows(this.Table.ChildRelations["WorkOrderMaster_WorkOrderDetail"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderCampaignRow[] GetWorkOrderCampaignRows() {
                return ((WorkOrderCampaignRow[])(base.GetChildRows(this.Table.ChildRelations["WorkOrderMaster_WorkOrderCampaign"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkOrderDetailRow : System.Data.DataRow {
            
            private WorkOrderDetailDataTable tableWorkOrderDetail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderDetailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkOrderDetail = ((WorkOrderDetailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WORK_ORDER_NUMBER {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WORK_ORDER_NUMBER\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderDetail.SERVICE_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_CODE\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.SERVICE_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRODUCT_LINE_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderDetail.PRODUCT_LINE_CDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRODUCT_LINE_CD\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.PRODUCT_LINE_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WORK_ORDER_OCCURRENCE {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WORK_ORDER_OCCURRENCE\' in table \'WorkOrderDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FROM_QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderDetail.FROM_QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FROM_QUANTITY\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.FROM_QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TO_QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderDetail.TO_QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TO_QUANTITY\' in table \'WorkOrderDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderDetail.TO_QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterRow WorkOrderMasterRow {
                get {
                    return ((WorkOrderMasterRow)(this.GetParentRow(this.Table.ParentRelations["WorkOrderMaster_WorkOrderDetail"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["WorkOrderMaster_WorkOrderDetail"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWORK_ORDER_NUMBERNull() {
                return this.IsNull(this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWORK_ORDER_NUMBERNull() {
                this[this.tableWorkOrderDetail.WORK_ORDER_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_CODENull() {
                return this.IsNull(this.tableWorkOrderDetail.SERVICE_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_CODENull() {
                this[this.tableWorkOrderDetail.SERVICE_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_LINE_CDNull() {
                return this.IsNull(this.tableWorkOrderDetail.PRODUCT_LINE_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_LINE_CDNull() {
                this[this.tableWorkOrderDetail.PRODUCT_LINE_CDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWORK_ORDER_OCCURRENCENull() {
                return this.IsNull(this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWORK_ORDER_OCCURRENCENull() {
                this[this.tableWorkOrderDetail.WORK_ORDER_OCCURRENCEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFROM_QUANTITYNull() {
                return this.IsNull(this.tableWorkOrderDetail.FROM_QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFROM_QUANTITYNull() {
                this[this.tableWorkOrderDetail.FROM_QUANTITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTO_QUANTITYNull() {
                return this.IsNull(this.tableWorkOrderDetail.TO_QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTO_QUANTITYNull() {
                this[this.tableWorkOrderDetail.TO_QUANTITYColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WorkOrderCampaignRow : System.Data.DataRow {
            
            private WorkOrderCampaignDataTable tableWorkOrderCampaign;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WorkOrderCampaignRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkOrderCampaign = ((WorkOrderCampaignDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WORK_ORDER_NUMBER {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderCampaign.WORK_ORDER_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WORK_ORDER_NUMBER\' in table \'WorkOrderCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderCampaign.WORK_ORDER_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROMOTION_CODE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderCampaign.PROMOTION_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROMOTION_CODE\' in table \'WorkOrderCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderCampaign.PROMOTION_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROMOTION_GROUP_CODE {
                get {
                    try {
                        return ((decimal)(this[this.tableWorkOrderCampaign.PROMOTION_GROUP_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROMOTION_GROUP_CODE\' in table \'WorkOrderCampaign\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderCampaign.PROMOTION_GROUP_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROMOTION_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableWorkOrderCampaign.PROMOTION_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PROMOTION_TYPE\' in table \'WorkOrderCampaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkOrderCampaign.PROMOTION_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterRow WorkOrderMasterRow {
                get {
                    return ((WorkOrderMasterRow)(this.GetParentRow(this.Table.ParentRelations["WorkOrderMaster_WorkOrderCampaign"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["WorkOrderMaster_WorkOrderCampaign"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWORK_ORDER_NUMBERNull() {
                return this.IsNull(this.tableWorkOrderCampaign.WORK_ORDER_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWORK_ORDER_NUMBERNull() {
                this[this.tableWorkOrderCampaign.WORK_ORDER_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROMOTION_CODENull() {
                return this.IsNull(this.tableWorkOrderCampaign.PROMOTION_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROMOTION_CODENull() {
                this[this.tableWorkOrderCampaign.PROMOTION_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROMOTION_GROUP_CODENull() {
                return this.IsNull(this.tableWorkOrderCampaign.PROMOTION_GROUP_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROMOTION_GROUP_CODENull() {
                this[this.tableWorkOrderCampaign.PROMOTION_GROUP_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROMOTION_TYPENull() {
                return this.IsNull(this.tableWorkOrderCampaign.PROMOTION_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROMOTION_TYPENull() {
                this[this.tableWorkOrderCampaign.PROMOTION_TYPEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IcomsWOrderChangeEvent : System.EventArgs {
            
            private IcomsWOrder eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IcomsWOrderChangeEvent(IcomsWOrder row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IcomsWOrder Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CFTimeSlotChangeEvent : System.EventArgs {
            
            private CFTimeSlot eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFTimeSlotChangeEvent(CFTimeSlot row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CFTimeSlot Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkOrderMasterRowChangeEvent : System.EventArgs {
            
            private WorkOrderMasterRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterRowChangeEvent(WorkOrderMasterRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderMasterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkOrderDetailRowChangeEvent : System.EventArgs {
            
            private WorkOrderDetailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRowChangeEvent(WorkOrderDetailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WorkOrderCampaignRowChangeEvent : System.EventArgs {
            
            private WorkOrderCampaignRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderCampaignRowChangeEvent(WorkOrderCampaignRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WorkOrderCampaignRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591