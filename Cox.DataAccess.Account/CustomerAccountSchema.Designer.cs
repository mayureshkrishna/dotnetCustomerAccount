//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Cox.DataAccess.Account {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("CustomerAccountSchema")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CustomerAccountSchema : System.Data.DataSet {
        
        private CustomerAccountsDataTable tableCustomerAccounts;
        
        private CustomerAddressesDataTable tableCustomerAddresses;
        
        private CustomerNamesDataTable tableCustomerNames;
        
        private CustomerStatementsDataTable tableCustomerStatements;
        
        private CustomerServiceCodesDataTable tableCustomerServiceCodes;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomerAccountSchema() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CustomerAccountSchema(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomerAccount"] != null)) {
                    base.Tables.Add(new CustomerAccountsDataTable(ds.Tables["CustomerAccount"]));
                }
                if ((ds.Tables["CustomerAddress"] != null)) {
                    base.Tables.Add(new CustomerAddressesDataTable(ds.Tables["CustomerAddress"]));
                }
                if ((ds.Tables["CustomerName"] != null)) {
                    base.Tables.Add(new CustomerNamesDataTable(ds.Tables["CustomerName"]));
                }
                if ((ds.Tables["CustomerStatement"] != null)) {
                    base.Tables.Add(new CustomerStatementsDataTable(ds.Tables["CustomerStatement"]));
                }
                if ((ds.Tables["CustomerServiceCode"] != null)) {
                    base.Tables.Add(new CustomerServiceCodesDataTable(ds.Tables["CustomerServiceCode"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerAccountsDataTable CustomerAccounts {
            get {
                return this.tableCustomerAccounts;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerAddressesDataTable CustomerAddresses {
            get {
                return this.tableCustomerAddresses;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerNamesDataTable CustomerNames {
            get {
                return this.tableCustomerNames;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerStatementsDataTable CustomerStatements {
            get {
                return this.tableCustomerStatements;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerServiceCodesDataTable CustomerServiceCodes {
            get {
                return this.tableCustomerServiceCodes;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            CustomerAccountSchema cln = ((CustomerAccountSchema)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomerAccount"] != null)) {
                    base.Tables.Add(new CustomerAccountsDataTable(ds.Tables["CustomerAccount"]));
                }
                if ((ds.Tables["CustomerAddress"] != null)) {
                    base.Tables.Add(new CustomerAddressesDataTable(ds.Tables["CustomerAddress"]));
                }
                if ((ds.Tables["CustomerName"] != null)) {
                    base.Tables.Add(new CustomerNamesDataTable(ds.Tables["CustomerName"]));
                }
                if ((ds.Tables["CustomerStatement"] != null)) {
                    base.Tables.Add(new CustomerStatementsDataTable(ds.Tables["CustomerStatement"]));
                }
                if ((ds.Tables["CustomerServiceCode"] != null)) {
                    base.Tables.Add(new CustomerServiceCodesDataTable(ds.Tables["CustomerServiceCode"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomerAccounts = ((CustomerAccountsDataTable)(base.Tables["CustomerAccount"]));
            if ((initTable == true)) {
                if ((this.tableCustomerAccounts != null)) {
                    this.tableCustomerAccounts.InitVars();
                }
            }
            this.tableCustomerAddresses = ((CustomerAddressesDataTable)(base.Tables["CustomerAddress"]));
            if ((initTable == true)) {
                if ((this.tableCustomerAddresses != null)) {
                    this.tableCustomerAddresses.InitVars();
                }
            }
            this.tableCustomerNames = ((CustomerNamesDataTable)(base.Tables["CustomerName"]));
            if ((initTable == true)) {
                if ((this.tableCustomerNames != null)) {
                    this.tableCustomerNames.InitVars();
                }
            }
            this.tableCustomerStatements = ((CustomerStatementsDataTable)(base.Tables["CustomerStatement"]));
            if ((initTable == true)) {
                if ((this.tableCustomerStatements != null)) {
                    this.tableCustomerStatements.InitVars();
                }
            }
            this.tableCustomerServiceCodes = ((CustomerServiceCodesDataTable)(base.Tables["CustomerServiceCode"]));
            if ((initTable == true)) {
                if ((this.tableCustomerServiceCodes != null)) {
                    this.tableCustomerServiceCodes.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CustomerAccountSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CustomerAccountSchema.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomerAccounts = new CustomerAccountsDataTable();
            base.Tables.Add(this.tableCustomerAccounts);
            this.tableCustomerAddresses = new CustomerAddressesDataTable();
            base.Tables.Add(this.tableCustomerAddresses);
            this.tableCustomerNames = new CustomerNamesDataTable();
            base.Tables.Add(this.tableCustomerNames);
            this.tableCustomerStatements = new CustomerStatementsDataTable();
            base.Tables.Add(this.tableCustomerStatements);
            this.tableCustomerServiceCodes = new CustomerServiceCodesDataTable();
            base.Tables.Add(this.tableCustomerServiceCodes);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerAccounts() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerAddresses() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerNames() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerStatements() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerServiceCodes() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            CustomerAccountSchema ds = new CustomerAccountSchema();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void CustomerAccountChangeEventHandler(object sender, CustomerAccountChangeEvent e);
        
        public delegate void CustomerAddressChangeEventHandler(object sender, CustomerAddressChangeEvent e);
        
        public delegate void CustomerNameChangeEventHandler(object sender, CustomerNameChangeEvent e);
        
        public delegate void CustomerStatementChangeEventHandler(object sender, CustomerStatementChangeEvent e);
        
        public delegate void CustomerServiceCodeChangeEventHandler(object sender, CustomerServiceCodeChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerAccountsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSiteId;
            
            private System.Data.DataColumn columnAccountNumber;
            
            private System.Data.DataColumn columnCompanyNumber;
            
            private System.Data.DataColumn columnDivisionNumber;
            
            private System.Data.DataColumn columnAddressLocation;
            
            private System.Data.DataColumn columnINSTALL_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountsDataTable() {
                this.TableName = "CustomerAccount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerAccountsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerAccountsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountNumberColumn {
                get {
                    return this.columnAccountNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CompanyNumberColumn {
                get {
                    return this.columnCompanyNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DivisionNumberColumn {
                get {
                    return this.columnDivisionNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressLocationColumn {
                get {
                    return this.columnAddressLocation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INSTALL_DATEColumn {
                get {
                    return this.columnINSTALL_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccount this[int index] {
                get {
                    return ((CustomerAccount)(this.Rows[index]));
                }
            }
            
            public event CustomerAccountChangeEventHandler CustomerAccountChanging;
            
            public event CustomerAccountChangeEventHandler CustomerAccountChanged;
            
            public event CustomerAccountChangeEventHandler CustomerAccountDeleting;
            
            public event CustomerAccountChangeEventHandler CustomerAccountDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerAccount(CustomerAccount row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccount AddCustomerAccount(decimal SiteId, decimal AccountNumber, decimal CompanyNumber, decimal DivisionNumber, string AddressLocation, decimal INSTALL_DATE) {
                CustomerAccount rowCustomerAccount = ((CustomerAccount)(this.NewRow()));
                rowCustomerAccount.ItemArray = new object[] {
                        SiteId,
                        AccountNumber,
                        CompanyNumber,
                        DivisionNumber,
                        AddressLocation,
                        INSTALL_DATE};
                this.Rows.Add(rowCustomerAccount);
                return rowCustomerAccount;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CustomerAccountsDataTable cln = ((CustomerAccountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CustomerAccountsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteId = base.Columns["SITE_ID"];
                this.columnAccountNumber = base.Columns["ACCOUNT_NUMBER"];
                this.columnCompanyNumber = base.Columns["COMPANY_NUMBER"];
                this.columnDivisionNumber = base.Columns["DIVISION_NUMBER"];
                this.columnAddressLocation = base.Columns["ADDR_LOCATION"];
                this.columnINSTALL_DATE = base.Columns["INSTALL_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteId = new System.Data.DataColumn("SITE_ID", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSiteId.ExtendedProperties.Add("typedName", "SiteId");
                base.Columns.Add(this.columnSiteId);
                this.columnAccountNumber = new System.Data.DataColumn("ACCOUNT_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAccountNumber.ExtendedProperties.Add("typedName", "AccountNumber");
                base.Columns.Add(this.columnAccountNumber);
                this.columnCompanyNumber = new System.Data.DataColumn("COMPANY_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnCompanyNumber.ExtendedProperties.Add("typedName", "CompanyNumber");
                base.Columns.Add(this.columnCompanyNumber);
                this.columnDivisionNumber = new System.Data.DataColumn("DIVISION_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnDivisionNumber.ExtendedProperties.Add("typedName", "DivisionNumber");
                base.Columns.Add(this.columnDivisionNumber);
                this.columnAddressLocation = new System.Data.DataColumn("ADDR_LOCATION", typeof(string), null, System.Data.MappingType.Element);
                this.columnAddressLocation.ExtendedProperties.Add("typedName", "AddressLocation");
                base.Columns.Add(this.columnAddressLocation);
                this.columnINSTALL_DATE = new System.Data.DataColumn("INSTALL_DATE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTALL_DATE);
                this.ExtendedProperties.Add("typedName", "CustomerAccount");
                this.ExtendedProperties.Add("typedPlural", "CustomerAccounts");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccount NewCustomerAccount() {
                return ((CustomerAccount)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CustomerAccount(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CustomerAccount);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerAccountChanged != null)) {
                    this.CustomerAccountChanged(this, new CustomerAccountChangeEvent(((CustomerAccount)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerAccountChanging != null)) {
                    this.CustomerAccountChanging(this, new CustomerAccountChangeEvent(((CustomerAccount)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerAccountDeleted != null)) {
                    this.CustomerAccountDeleted(this, new CustomerAccountChangeEvent(((CustomerAccount)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerAccountDeleting != null)) {
                    this.CustomerAccountDeleting(this, new CustomerAccountChangeEvent(((CustomerAccount)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerAccount(CustomerAccount row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountSchema ds = new CustomerAccountSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerAccountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerAddressesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnFirstName;
            
            private System.Data.DataColumn columnMiddleInitial;
            
            private System.Data.DataColumn columnLastName;
            
            private System.Data.DataColumn columnCustomerName;
            
            private System.Data.DataColumn columnHomeAreaCode;
            
            private System.Data.DataColumn columnHomeExchangeCode;
            
            private System.Data.DataColumn columnHomeTelephoneNumber;
            
            private System.Data.DataColumn columnBusinessAreaCode;
            
            private System.Data.DataColumn columnBusinessExchangeCode;
            
            private System.Data.DataColumn columnBusinessTelephoneNumber;
            
            private System.Data.DataColumn columnOtherAreaCode;
            
            private System.Data.DataColumn columnOtherExchangeCode;
            
            private System.Data.DataColumn columnOtherTelephoneNumber;
            
            private System.Data.DataColumn columnAddressLine1;
            
            private System.Data.DataColumn columnAddressLine2;
            
            private System.Data.DataColumn columnAddressLine3;
            
            private System.Data.DataColumn columnAddressLine4;
            
            private System.Data.DataColumn columnCity;
            
            private System.Data.DataColumn columnState;
            
            private System.Data.DataColumn columnZip4;
            
            private System.Data.DataColumn columnZip5;
            
            private System.Data.DataColumn columnBILL_TYPE_CODE;
            
            private System.Data.DataColumn columnONLINE_ORDERING_OPT_OUT;
            
            private System.Data.DataColumn columnFranchise_Number;
            
            private System.Data.DataColumn columnPricing_Group;
            
            private System.Data.DataColumn columnAccountStatus;
            
            private System.Data.DataColumn columnAccount_Number13;
            
            private System.Data.DataColumn columnSite_ID;
            
            private System.Data.DataColumn columnsiteCode;
            
            private System.Data.DataColumn columnBill_type_code;
            
            private System.Data.DataColumn columnHomeTelephoneNumberFull;
            
            private System.Data.DataColumn columnBusinessTelephoneNumberFull;
            
            private System.Data.DataColumn columnOtherTelephoneNumberFull;
            
            private System.Data.DataColumn columnCustomerTNTelephoneNumberFull;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAddressesDataTable() {
                this.TableName = "CustomerAddress";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerAddressesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerAddressesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MiddleInitialColumn {
                get {
                    return this.columnMiddleInitial;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HomeAreaCodeColumn {
                get {
                    return this.columnHomeAreaCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HomeExchangeCodeColumn {
                get {
                    return this.columnHomeExchangeCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HomeTelephoneNumberColumn {
                get {
                    return this.columnHomeTelephoneNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BusinessAreaCodeColumn {
                get {
                    return this.columnBusinessAreaCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BusinessExchangeCodeColumn {
                get {
                    return this.columnBusinessExchangeCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BusinessTelephoneNumberColumn {
                get {
                    return this.columnBusinessTelephoneNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OtherAreaCodeColumn {
                get {
                    return this.columnOtherAreaCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OtherExchangeCodeColumn {
                get {
                    return this.columnOtherExchangeCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OtherTelephoneNumberColumn {
                get {
                    return this.columnOtherTelephoneNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressLine1Column {
                get {
                    return this.columnAddressLine1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressLine2Column {
                get {
                    return this.columnAddressLine2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressLine3Column {
                get {
                    return this.columnAddressLine3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressLine4Column {
                get {
                    return this.columnAddressLine4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Zip4Column {
                get {
                    return this.columnZip4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Zip5Column {
                get {
                    return this.columnZip5;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BILL_TYPE_CODEColumn {
                get {
                    return this.columnBILL_TYPE_CODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ONLINE_ORDERING_OPT_OUTColumn {
                get {
                    return this.columnONLINE_ORDERING_OPT_OUT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Franchise_NumberColumn {
                get {
                    return this.columnFranchise_Number;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pricing_GroupColumn {
                get {
                    return this.columnPricing_Group;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountStatusColumn {
                get {
                    return this.columnAccountStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Account_Number13Column {
                get {
                    return this.columnAccount_Number13;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Site_IDColumn {
                get {
                    return this.columnSite_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn siteCodeColumn {
                get {
                    return this.columnsiteCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Bill_type_codeColumn {
                get {
                    return this.columnBill_type_code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HomeTelephoneNumberFullColumn {
                get {
                    return this.columnHomeTelephoneNumberFull;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BusinessTelephoneNumberFullColumn {
                get {
                    return this.columnBusinessTelephoneNumberFull;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OtherTelephoneNumberFullColumn {
                get {
                    return this.columnOtherTelephoneNumberFull;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerTNTelephoneNumberFullColumn {
                get {
                    return this.columnCustomerTNTelephoneNumberFull;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAddress this[int index] {
                get {
                    return ((CustomerAddress)(this.Rows[index]));
                }
            }
            
            public event CustomerAddressChangeEventHandler CustomerAddressChanging;
            
            public event CustomerAddressChangeEventHandler CustomerAddressChanged;
            
            public event CustomerAddressChangeEventHandler CustomerAddressDeleting;
            
            public event CustomerAddressChangeEventHandler CustomerAddressDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerAddress(CustomerAddress row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAddress AddCustomerAddress(
                        string FirstName, 
                        string MiddleInitial, 
                        string LastName, 
                        string CustomerName, 
                        string HomeAreaCode, 
                        string HomeExchangeCode, 
                        string HomeTelephoneNumber, 
                        string BusinessAreaCode, 
                        string BusinessExchangeCode, 
                        string BusinessTelephoneNumber, 
                        string OtherAreaCode, 
                        string OtherExchangeCode, 
                        string OtherTelephoneNumber, 
                        string AddressLine1, 
                        string AddressLine2, 
                        string AddressLine3, 
                        string AddressLine4, 
                        string City, 
                        string State, 
                        string Zip4, 
                        string Zip5, 
                        string BillType, 
                        int ONLINE_ORDERING_OPT_OUT, 
                        string Franchise_Number, 
                        string Pricing_Group, 
                        string AccountStatus, 
                        string Account_Number13, 
                        string Site_ID, 
                        string siteCode, 
                        char Bill_type_code, 
                        ulong HomeTelephoneNumberFull, 
                        ulong BusinessTelephoneNumberFull, 
                        ulong OtherTelephoneNumberFull, 
                        ulong CustomerTNTelephoneNumberFull) {
                CustomerAddress rowCustomerAddress = ((CustomerAddress)(this.NewRow()));
                rowCustomerAddress.ItemArray = new object[] {
                        FirstName,
                        MiddleInitial,
                        LastName,
                        CustomerName,
                        HomeAreaCode,
                        HomeExchangeCode,
                        HomeTelephoneNumber,
                        BusinessAreaCode,
                        BusinessExchangeCode,
                        BusinessTelephoneNumber,
                        OtherAreaCode,
                        OtherExchangeCode,
                        OtherTelephoneNumber,
                        AddressLine1,
                        AddressLine2,
                        AddressLine3,
                        AddressLine4,
                        City,
                        State,
                        Zip4,
                        Zip5,
                        BillType,
                        ONLINE_ORDERING_OPT_OUT,
                        Franchise_Number,
                        Pricing_Group,
                        AccountStatus,
                        Account_Number13,
                        Site_ID,
                        siteCode,
                        Bill_type_code,
                        HomeTelephoneNumberFull,
                        BusinessTelephoneNumberFull,
                        OtherTelephoneNumberFull,
                        CustomerTNTelephoneNumberFull};
                this.Rows.Add(rowCustomerAddress);
                return rowCustomerAddress;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CustomerAddressesDataTable cln = ((CustomerAddressesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CustomerAddressesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFirstName = base.Columns["FIRST_NAME"];
                this.columnMiddleInitial = base.Columns["MIDDLE_INITIAL"];
                this.columnLastName = base.Columns["LAST_NAME"];
                this.columnCustomerName = base.Columns["CUSTOMER_NAME"];
                this.columnHomeAreaCode = base.Columns["HOME_AREA_CODE"];
                this.columnHomeExchangeCode = base.Columns["HOME_EXCHANGE_NUMBER"];
                this.columnHomeTelephoneNumber = base.Columns["HOME_TELEPHONE_NUMBER"];
                this.columnBusinessAreaCode = base.Columns["BUSINESS_AREA_CODE"];
                this.columnBusinessExchangeCode = base.Columns["BUSINESS_EXCHANGE_NUMBER"];
                this.columnBusinessTelephoneNumber = base.Columns["BUSINESS_TELEPHONE_NUMBER"];
                this.columnOtherAreaCode = base.Columns["OTHER_AREA_CODE"];
                this.columnOtherExchangeCode = base.Columns["OTHER_EXCHANGE_NUMBER"];
                this.columnOtherTelephoneNumber = base.Columns["OTHER_TELEPHONE_NUMBER"];
                this.columnAddressLine1 = base.Columns["ADDRESS_LINE_1"];
                this.columnAddressLine2 = base.Columns["ADDRESS_LINE_2"];
                this.columnAddressLine3 = base.Columns["ADDRESS_LINE_3"];
                this.columnAddressLine4 = base.Columns["ADDRESS_LINE_4"];
                this.columnCity = base.Columns["ADDR_CITY"];
                this.columnState = base.Columns["ADDR_STATE"];
                this.columnZip4 = base.Columns["ADDR_ZIP_4"];
                this.columnZip5 = base.Columns["ADDR_ZIP_5"];
                this.columnBILL_TYPE_CODE = base.Columns["BILL_TYPE_CODE"];
                this.columnONLINE_ORDERING_OPT_OUT = base.Columns["ONLINE_ORDERING_OPT_OUT"];
                this.columnFranchise_Number = base.Columns["Franchise_Number"];
                this.columnPricing_Group = base.Columns["Pricing_Group"];
                this.columnAccountStatus = base.Columns["AccountStatus"];
                this.columnAccount_Number13 = base.Columns["Account_Number13"];
                this.columnSite_ID = base.Columns["Site_ID"];
                this.columnsiteCode = base.Columns["siteCode"];
                this.columnBill_type_code = base.Columns["Bill_type_code"];
                this.columnHomeTelephoneNumberFull = base.Columns["HomeTelephoneNumberFull"];
                this.columnBusinessTelephoneNumberFull = base.Columns["BusinessTelephoneNumberFull"];
                this.columnOtherTelephoneNumberFull = base.Columns["OtherTelephoneNumberFull"];
                this.columnCustomerTNTelephoneNumberFull = base.Columns["CustomerTNTelephoneNumberFull"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFirstName = new System.Data.DataColumn("FIRST_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.columnFirstName.ExtendedProperties.Add("typedName", "FirstName");
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleInitial = new System.Data.DataColumn("MIDDLE_INITIAL", typeof(string), null, System.Data.MappingType.Element);
                this.columnMiddleInitial.ExtendedProperties.Add("typedName", "MiddleInitial");
                base.Columns.Add(this.columnMiddleInitial);
                this.columnLastName = new System.Data.DataColumn("LAST_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.columnLastName.ExtendedProperties.Add("typedName", "LastName");
                base.Columns.Add(this.columnLastName);
                this.columnCustomerName = new System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.columnCustomerName.ExtendedProperties.Add("typedName", "CustomerName");
                base.Columns.Add(this.columnCustomerName);
                this.columnHomeAreaCode = new System.Data.DataColumn("HOME_AREA_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnHomeAreaCode.ExtendedProperties.Add("typedName", "HomeAreaCode");
                base.Columns.Add(this.columnHomeAreaCode);
                this.columnHomeExchangeCode = new System.Data.DataColumn("HOME_EXCHANGE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.columnHomeExchangeCode.ExtendedProperties.Add("typedName", "HomeExchangeCode");
                base.Columns.Add(this.columnHomeExchangeCode);
                this.columnHomeTelephoneNumber = new System.Data.DataColumn("HOME_TELEPHONE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.columnHomeTelephoneNumber.ExtendedProperties.Add("typedName", "HomeTelephoneNumber");
                base.Columns.Add(this.columnHomeTelephoneNumber);
                this.columnBusinessAreaCode = new System.Data.DataColumn("BUSINESS_AREA_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnBusinessAreaCode.ExtendedProperties.Add("typedName", "BusinessAreaCode");
                base.Columns.Add(this.columnBusinessAreaCode);
                this.columnBusinessExchangeCode = new System.Data.DataColumn("BUSINESS_EXCHANGE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.columnBusinessExchangeCode.ExtendedProperties.Add("typedName", "BusinessExchangeCode");
                base.Columns.Add(this.columnBusinessExchangeCode);
                this.columnBusinessTelephoneNumber = new System.Data.DataColumn("BUSINESS_TELEPHONE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.columnBusinessTelephoneNumber.ExtendedProperties.Add("typedName", "BusinessTelephoneNumber");
                base.Columns.Add(this.columnBusinessTelephoneNumber);
                this.columnOtherAreaCode = new System.Data.DataColumn("OTHER_AREA_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnOtherAreaCode.ExtendedProperties.Add("typedName", "OtherAreaCode");
                base.Columns.Add(this.columnOtherAreaCode);
                this.columnOtherExchangeCode = new System.Data.DataColumn("OTHER_EXCHANGE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.columnOtherExchangeCode.ExtendedProperties.Add("typedName", "OtherExchangeCode");
                base.Columns.Add(this.columnOtherExchangeCode);
                this.columnOtherTelephoneNumber = new System.Data.DataColumn("OTHER_TELEPHONE_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                this.columnOtherTelephoneNumber.ExtendedProperties.Add("typedName", "OtherTelephoneNumber");
                base.Columns.Add(this.columnOtherTelephoneNumber);
                this.columnAddressLine1 = new System.Data.DataColumn("ADDRESS_LINE_1", typeof(string), null, System.Data.MappingType.Element);
                this.columnAddressLine1.ExtendedProperties.Add("typedName", "AddressLine1");
                base.Columns.Add(this.columnAddressLine1);
                this.columnAddressLine2 = new System.Data.DataColumn("ADDRESS_LINE_2", typeof(string), null, System.Data.MappingType.Element);
                this.columnAddressLine2.ExtendedProperties.Add("typedName", "AddressLine2");
                base.Columns.Add(this.columnAddressLine2);
                this.columnAddressLine3 = new System.Data.DataColumn("ADDRESS_LINE_3", typeof(string), null, System.Data.MappingType.Element);
                this.columnAddressLine3.ExtendedProperties.Add("typedName", "AddressLine3");
                base.Columns.Add(this.columnAddressLine3);
                this.columnAddressLine4 = new System.Data.DataColumn("ADDRESS_LINE_4", typeof(string), null, System.Data.MappingType.Element);
                this.columnAddressLine4.ExtendedProperties.Add("typedName", "AddressLine4");
                base.Columns.Add(this.columnAddressLine4);
                this.columnCity = new System.Data.DataColumn("ADDR_CITY", typeof(string), null, System.Data.MappingType.Element);
                this.columnCity.ExtendedProperties.Add("typedName", "City");
                base.Columns.Add(this.columnCity);
                this.columnState = new System.Data.DataColumn("ADDR_STATE", typeof(string), null, System.Data.MappingType.Element);
                this.columnState.ExtendedProperties.Add("typedName", "State");
                base.Columns.Add(this.columnState);
                this.columnZip4 = new System.Data.DataColumn("ADDR_ZIP_4", typeof(string), null, System.Data.MappingType.Element);
                this.columnZip4.ExtendedProperties.Add("typedName", "Zip4");
                base.Columns.Add(this.columnZip4);
                this.columnZip5 = new System.Data.DataColumn("ADDR_ZIP_5", typeof(string), null, System.Data.MappingType.Element);
                this.columnZip5.ExtendedProperties.Add("typedName", "Zip5");
                base.Columns.Add(this.columnZip5);
                this.columnBILL_TYPE_CODE = new System.Data.DataColumn("BILL_TYPE_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnBILL_TYPE_CODE.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "BillType");
                this.columnBILL_TYPE_CODE.ExtendedProperties.Add("Generator_UserColumnName", "BILL_TYPE_CODE");
                base.Columns.Add(this.columnBILL_TYPE_CODE);
                this.columnONLINE_ORDERING_OPT_OUT = new System.Data.DataColumn("ONLINE_ORDERING_OPT_OUT", typeof(int), null, System.Data.MappingType.Element);
                this.columnONLINE_ORDERING_OPT_OUT.ExtendedProperties.Add("typedName", "ONLINE_ORDERING_OPT_OUT");
                base.Columns.Add(this.columnONLINE_ORDERING_OPT_OUT);
                this.columnFranchise_Number = new System.Data.DataColumn("Franchise_Number", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFranchise_Number);
                this.columnPricing_Group = new System.Data.DataColumn("Pricing_Group", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPricing_Group);
                this.columnAccountStatus = new System.Data.DataColumn("AccountStatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountStatus);
                this.columnAccount_Number13 = new System.Data.DataColumn("Account_Number13", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number13);
                this.columnSite_ID = new System.Data.DataColumn("Site_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSite_ID);
                this.columnsiteCode = new System.Data.DataColumn("siteCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsiteCode);
                this.columnBill_type_code = new System.Data.DataColumn("Bill_type_code", typeof(char), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_type_code);
                this.columnHomeTelephoneNumberFull = new System.Data.DataColumn("HomeTelephoneNumberFull", typeof(ulong), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeTelephoneNumberFull);
                this.columnBusinessTelephoneNumberFull = new System.Data.DataColumn("BusinessTelephoneNumberFull", typeof(ulong), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessTelephoneNumberFull);
                this.columnOtherTelephoneNumberFull = new System.Data.DataColumn("OtherTelephoneNumberFull", typeof(ulong), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTelephoneNumberFull);
                this.columnCustomerTNTelephoneNumberFull = new System.Data.DataColumn("CustomerTNTelephoneNumberFull", typeof(ulong), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerTNTelephoneNumberFull);
                this.ExtendedProperties.Add("typedName", "CustomerAddress");
                this.ExtendedProperties.Add("typedPlural", "CustomerAddresses");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAddress NewCustomerAddress() {
                return ((CustomerAddress)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CustomerAddress(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CustomerAddress);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerAddressChanged != null)) {
                    this.CustomerAddressChanged(this, new CustomerAddressChangeEvent(((CustomerAddress)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerAddressChanging != null)) {
                    this.CustomerAddressChanging(this, new CustomerAddressChangeEvent(((CustomerAddress)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerAddressDeleted != null)) {
                    this.CustomerAddressDeleted(this, new CustomerAddressChangeEvent(((CustomerAddress)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerAddressDeleting != null)) {
                    this.CustomerAddressDeleting(this, new CustomerAddressChangeEvent(((CustomerAddress)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerAddress(CustomerAddress row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountSchema ds = new CustomerAccountSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerAddressesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerNamesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnFirstName;
            
            private System.Data.DataColumn columnMiddleInitial;
            
            private System.Data.DataColumn columnLastName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerNamesDataTable() {
                this.TableName = "CustomerName";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerNamesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerNamesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MiddleInitialColumn {
                get {
                    return this.columnMiddleInitial;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerName this[int index] {
                get {
                    return ((CustomerName)(this.Rows[index]));
                }
            }
            
            public event CustomerNameChangeEventHandler CustomerNameChanging;
            
            public event CustomerNameChangeEventHandler CustomerNameChanged;
            
            public event CustomerNameChangeEventHandler CustomerNameDeleting;
            
            public event CustomerNameChangeEventHandler CustomerNameDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerName(CustomerName row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerName AddCustomerName(string FirstName, string MiddleInitial, string LastName) {
                CustomerName rowCustomerName = ((CustomerName)(this.NewRow()));
                rowCustomerName.ItemArray = new object[] {
                        FirstName,
                        MiddleInitial,
                        LastName};
                this.Rows.Add(rowCustomerName);
                return rowCustomerName;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CustomerNamesDataTable cln = ((CustomerNamesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CustomerNamesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFirstName = base.Columns["FIRST_NAME"];
                this.columnMiddleInitial = base.Columns["MIDDLE_INITIAL"];
                this.columnLastName = base.Columns["LAST_NAME"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFirstName = new System.Data.DataColumn("FIRST_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.columnFirstName.ExtendedProperties.Add("typedName", "FirstName");
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleInitial = new System.Data.DataColumn("MIDDLE_INITIAL", typeof(string), null, System.Data.MappingType.Element);
                this.columnMiddleInitial.ExtendedProperties.Add("typedName", "MiddleInitial");
                base.Columns.Add(this.columnMiddleInitial);
                this.columnLastName = new System.Data.DataColumn("LAST_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.columnLastName.ExtendedProperties.Add("typedName", "LastName");
                base.Columns.Add(this.columnLastName);
                this.ExtendedProperties.Add("typedName", "CustomerName");
                this.ExtendedProperties.Add("typedPlural", "CustomerNames");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerName NewCustomerName() {
                return ((CustomerName)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CustomerName(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CustomerName);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerNameChanged != null)) {
                    this.CustomerNameChanged(this, new CustomerNameChangeEvent(((CustomerName)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerNameChanging != null)) {
                    this.CustomerNameChanging(this, new CustomerNameChangeEvent(((CustomerName)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerNameDeleted != null)) {
                    this.CustomerNameDeleted(this, new CustomerNameChangeEvent(((CustomerName)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerNameDeleting != null)) {
                    this.CustomerNameDeleting(this, new CustomerNameChangeEvent(((CustomerName)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerName(CustomerName row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountSchema ds = new CustomerAccountSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerNamesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerStatementsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSiteId;
            
            private System.Data.DataColumn columnAccountNumber;
            
            private System.Data.DataColumn columnStatementCode;
            
            private System.Data.DataColumn columnServiceCode;
            
            private System.Data.DataColumn columnBillHandlingCode;
            
            private System.Data.DataColumn columnDueDate;
            
            private System.Data.DataColumn columnAmountBilled;
            
            private System.Data.DataColumn columnMopCode;
            
            private System.Data.DataColumn columnLastPaymentAmount1;
            
            private System.Data.DataColumn columnLastPaymentDate1;
            
            private System.Data.DataColumn columnLastPaymentAmount2;
            
            private System.Data.DataColumn columnLastPaymentDate2;
            
            private System.Data.DataColumn columnLastPaymentAmount3;
            
            private System.Data.DataColumn columnLastPaymentDate3;
            
            private System.Data.DataColumn columnLastStatementDate;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnArBalanceAmount;
            
            private System.Data.DataColumn columnCurrentArBalanceAmount;
            
            private System.Data.DataColumn columnAr1To30Amount;
            
            private System.Data.DataColumn columnAr31To60Amount;
            
            private System.Data.DataColumn columnAr61To90Amount;
            
            private System.Data.DataColumn columnAr91To120Amount;
            
            private System.Data.DataColumn columnAr121To150Amount;
            
            private System.Data.DataColumn columnAr150PlusAmount;
            
            private System.Data.DataColumn columnDepositDueAmount;
            
            private System.Data.DataColumn columnWRITE_OFF_DOLLARS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerStatementsDataTable() {
                this.TableName = "CustomerStatement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerStatementsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerStatementsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountNumberColumn {
                get {
                    return this.columnAccountNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementCodeColumn {
                get {
                    return this.columnStatementCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ServiceCodeColumn {
                get {
                    return this.columnServiceCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BillHandlingCodeColumn {
                get {
                    return this.columnBillHandlingCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountBilledColumn {
                get {
                    return this.columnAmountBilled;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MopCodeColumn {
                get {
                    return this.columnMopCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastPaymentAmount1Column {
                get {
                    return this.columnLastPaymentAmount1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastPaymentDate1Column {
                get {
                    return this.columnLastPaymentDate1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastPaymentAmount2Column {
                get {
                    return this.columnLastPaymentAmount2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastPaymentDate2Column {
                get {
                    return this.columnLastPaymentDate2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastPaymentAmount3Column {
                get {
                    return this.columnLastPaymentAmount3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastPaymentDate3Column {
                get {
                    return this.columnLastPaymentDate3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastStatementDateColumn {
                get {
                    return this.columnLastStatementDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ArBalanceAmountColumn {
                get {
                    return this.columnArBalanceAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrentArBalanceAmountColumn {
                get {
                    return this.columnCurrentArBalanceAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Ar1To30AmountColumn {
                get {
                    return this.columnAr1To30Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Ar31To60AmountColumn {
                get {
                    return this.columnAr31To60Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Ar61To90AmountColumn {
                get {
                    return this.columnAr61To90Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Ar91To120AmountColumn {
                get {
                    return this.columnAr91To120Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Ar121To150AmountColumn {
                get {
                    return this.columnAr121To150Amount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Ar150PlusAmountColumn {
                get {
                    return this.columnAr150PlusAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DepositDueAmountColumn {
                get {
                    return this.columnDepositDueAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WRITE_OFF_DOLLARSColumn {
                get {
                    return this.columnWRITE_OFF_DOLLARS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerStatement this[int index] {
                get {
                    return ((CustomerStatement)(this.Rows[index]));
                }
            }
            
            public event CustomerStatementChangeEventHandler CustomerStatementChanging;
            
            public event CustomerStatementChangeEventHandler CustomerStatementChanged;
            
            public event CustomerStatementChangeEventHandler CustomerStatementDeleting;
            
            public event CustomerStatementChangeEventHandler CustomerStatementDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerStatement(CustomerStatement row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerStatement AddCustomerStatement(
                        decimal SiteId, 
                        decimal AccountNumber, 
                        decimal StatementCode, 
                        string ServiceCode, 
                        string BillHandlingCode, 
                        decimal DueDate, 
                        decimal AmountBilled, 
                        decimal MopCode, 
                        decimal LastPaymentAmount1, 
                        decimal LastPaymentDate1, 
                        decimal LastPaymentAmount2, 
                        decimal LastPaymentDate2, 
                        decimal LastPaymentAmount3, 
                        decimal LastPaymentDate3, 
                        decimal LastStatementDate, 
                        string Status, 
                        decimal ArBalanceAmount, 
                        decimal CurrentArBalanceAmount, 
                        decimal Ar1To30Amount, 
                        decimal Ar31To60Amount, 
                        decimal Ar61To90Amount, 
                        decimal Ar91To120Amount, 
                        decimal Ar121To150Amount, 
                        decimal Ar150PlusAmount, 
                        decimal DepositDueAmount, 
                        decimal WriteOffAmount) {
                CustomerStatement rowCustomerStatement = ((CustomerStatement)(this.NewRow()));
                rowCustomerStatement.ItemArray = new object[] {
                        SiteId,
                        AccountNumber,
                        StatementCode,
                        ServiceCode,
                        BillHandlingCode,
                        DueDate,
                        AmountBilled,
                        MopCode,
                        LastPaymentAmount1,
                        LastPaymentDate1,
                        LastPaymentAmount2,
                        LastPaymentDate2,
                        LastPaymentAmount3,
                        LastPaymentDate3,
                        LastStatementDate,
                        Status,
                        ArBalanceAmount,
                        CurrentArBalanceAmount,
                        Ar1To30Amount,
                        Ar31To60Amount,
                        Ar61To90Amount,
                        Ar91To120Amount,
                        Ar121To150Amount,
                        Ar150PlusAmount,
                        DepositDueAmount,
                        WriteOffAmount};
                this.Rows.Add(rowCustomerStatement);
                return rowCustomerStatement;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CustomerStatementsDataTable cln = ((CustomerStatementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CustomerStatementsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteId = base.Columns["SITE_ID"];
                this.columnAccountNumber = base.Columns["ACCOUNT_NUMBER"];
                this.columnStatementCode = base.Columns["STATEMENT_CODE"];
                this.columnServiceCode = base.Columns["SERVICE_CATEGORY_CODE"];
                this.columnBillHandlingCode = base.Columns["BILL_HANDLING_CODE"];
                this.columnDueDate = base.Columns["STATEMENT_DUE_DATE"];
                this.columnAmountBilled = base.Columns["BALANCE_LAST_STATEMENT"];
                this.columnMopCode = base.Columns["METHOD_OF_PAYMENT_CODE"];
                this.columnLastPaymentAmount1 = base.Columns["LAST_PAYMENT_AMOUNT_1"];
                this.columnLastPaymentDate1 = base.Columns["LAST_PAYMENT_DATE_1"];
                this.columnLastPaymentAmount2 = base.Columns["LAST_PAYMENT_AMOUNT_2"];
                this.columnLastPaymentDate2 = base.Columns["LAST_PAYMENT_DATE_2"];
                this.columnLastPaymentAmount3 = base.Columns["LAST_PAYMENT_AMOUNT_3"];
                this.columnLastPaymentDate3 = base.Columns["LAST_PAYMENT_DATE_3"];
                this.columnLastStatementDate = base.Columns["LAST_STATEMENT_DATE"];
                this.columnStatus = base.Columns["CUST_SRV_STMT_STATUS"];
                this.columnArBalanceAmount = base.Columns["AR_BALANCE"];
                this.columnCurrentArBalanceAmount = base.Columns["CURRENT_AR_BALANCE"];
                this.columnAr1To30Amount = base.Columns["AR_1_TO_30"];
                this.columnAr31To60Amount = base.Columns["AR_31_TO_60"];
                this.columnAr61To90Amount = base.Columns["AR_61_TO_90"];
                this.columnAr91To120Amount = base.Columns["AR_91_TO_120"];
                this.columnAr121To150Amount = base.Columns["AR_121_TO_150"];
                this.columnAr150PlusAmount = base.Columns["AR_OVER_150_DAYS"];
                this.columnDepositDueAmount = base.Columns["DEPOSIT_DUE_AMT"];
                this.columnWRITE_OFF_DOLLARS = base.Columns["WRITE_OFF_DOLLARS"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteId = new System.Data.DataColumn("SITE_ID", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSiteId.ExtendedProperties.Add("typedName", "SiteId");
                base.Columns.Add(this.columnSiteId);
                this.columnAccountNumber = new System.Data.DataColumn("ACCOUNT_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAccountNumber.ExtendedProperties.Add("typedName", "AccountNumber");
                base.Columns.Add(this.columnAccountNumber);
                this.columnStatementCode = new System.Data.DataColumn("STATEMENT_CODE", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnStatementCode.ExtendedProperties.Add("typedName", "StatementCode");
                base.Columns.Add(this.columnStatementCode);
                this.columnServiceCode = new System.Data.DataColumn("SERVICE_CATEGORY_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnServiceCode.ExtendedProperties.Add("typedName", "ServiceCode");
                base.Columns.Add(this.columnServiceCode);
                this.columnBillHandlingCode = new System.Data.DataColumn("BILL_HANDLING_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnBillHandlingCode.ExtendedProperties.Add("typedName", "BillHandlingCode");
                base.Columns.Add(this.columnBillHandlingCode);
                this.columnDueDate = new System.Data.DataColumn("STATEMENT_DUE_DATE", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnDueDate.ExtendedProperties.Add("typedName", "DueDate");
                base.Columns.Add(this.columnDueDate);
                this.columnAmountBilled = new System.Data.DataColumn("BALANCE_LAST_STATEMENT", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAmountBilled.ExtendedProperties.Add("typedName", "AmountBilled");
                base.Columns.Add(this.columnAmountBilled);
                this.columnMopCode = new System.Data.DataColumn("METHOD_OF_PAYMENT_CODE", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnMopCode.ExtendedProperties.Add("typedName", "MopCode");
                base.Columns.Add(this.columnMopCode);
                this.columnLastPaymentAmount1 = new System.Data.DataColumn("LAST_PAYMENT_AMOUNT_1", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnLastPaymentAmount1.ExtendedProperties.Add("typedName", "LastPaymentAmount1");
                base.Columns.Add(this.columnLastPaymentAmount1);
                this.columnLastPaymentDate1 = new System.Data.DataColumn("LAST_PAYMENT_DATE_1", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnLastPaymentDate1.ExtendedProperties.Add("typedName", "LastPaymentDate1");
                base.Columns.Add(this.columnLastPaymentDate1);
                this.columnLastPaymentAmount2 = new System.Data.DataColumn("LAST_PAYMENT_AMOUNT_2", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnLastPaymentAmount2.ExtendedProperties.Add("typedName", "LastPaymentAmount2");
                base.Columns.Add(this.columnLastPaymentAmount2);
                this.columnLastPaymentDate2 = new System.Data.DataColumn("LAST_PAYMENT_DATE_2", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnLastPaymentDate2.ExtendedProperties.Add("typedName", "LastPaymentDate2");
                base.Columns.Add(this.columnLastPaymentDate2);
                this.columnLastPaymentAmount3 = new System.Data.DataColumn("LAST_PAYMENT_AMOUNT_3", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnLastPaymentAmount3.ExtendedProperties.Add("typedName", "LastPaymentAmount3");
                base.Columns.Add(this.columnLastPaymentAmount3);
                this.columnLastPaymentDate3 = new System.Data.DataColumn("LAST_PAYMENT_DATE_3", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnLastPaymentDate3.ExtendedProperties.Add("typedName", "LastPaymentDate3");
                base.Columns.Add(this.columnLastPaymentDate3);
                this.columnLastStatementDate = new System.Data.DataColumn("LAST_STATEMENT_DATE", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnLastStatementDate.ExtendedProperties.Add("typedName", "LastStatementDate");
                base.Columns.Add(this.columnLastStatementDate);
                this.columnStatus = new System.Data.DataColumn("CUST_SRV_STMT_STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.columnStatus.ExtendedProperties.Add("typedName", "Status");
                base.Columns.Add(this.columnStatus);
                this.columnArBalanceAmount = new System.Data.DataColumn("AR_BALANCE", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnArBalanceAmount.ExtendedProperties.Add("typedName", "ArBalanceAmount");
                base.Columns.Add(this.columnArBalanceAmount);
                this.columnCurrentArBalanceAmount = new System.Data.DataColumn("CURRENT_AR_BALANCE", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnCurrentArBalanceAmount.ExtendedProperties.Add("typedName", "CurrentArBalanceAmount");
                base.Columns.Add(this.columnCurrentArBalanceAmount);
                this.columnAr1To30Amount = new System.Data.DataColumn("AR_1_TO_30", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAr1To30Amount.ExtendedProperties.Add("typedName", "Ar1To30Amount");
                base.Columns.Add(this.columnAr1To30Amount);
                this.columnAr31To60Amount = new System.Data.DataColumn("AR_31_TO_60", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAr31To60Amount.ExtendedProperties.Add("typedName", "Ar31To60Amount");
                base.Columns.Add(this.columnAr31To60Amount);
                this.columnAr61To90Amount = new System.Data.DataColumn("AR_61_TO_90", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAr61To90Amount.ExtendedProperties.Add("typedName", "Ar61To90Amount");
                base.Columns.Add(this.columnAr61To90Amount);
                this.columnAr91To120Amount = new System.Data.DataColumn("AR_91_TO_120", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAr91To120Amount.ExtendedProperties.Add("typedName", "Ar91To120Amount");
                base.Columns.Add(this.columnAr91To120Amount);
                this.columnAr121To150Amount = new System.Data.DataColumn("AR_121_TO_150", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAr121To150Amount.ExtendedProperties.Add("typedName", "Ar121To150Amount");
                base.Columns.Add(this.columnAr121To150Amount);
                this.columnAr150PlusAmount = new System.Data.DataColumn("AR_OVER_150_DAYS", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAr150PlusAmount.ExtendedProperties.Add("typedName", "Ar150PlusAmount");
                base.Columns.Add(this.columnAr150PlusAmount);
                this.columnDepositDueAmount = new System.Data.DataColumn("DEPOSIT_DUE_AMT", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnDepositDueAmount.ExtendedProperties.Add("typedName", "DepositDueAmount");
                base.Columns.Add(this.columnDepositDueAmount);
                this.columnWRITE_OFF_DOLLARS = new System.Data.DataColumn("WRITE_OFF_DOLLARS", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnWRITE_OFF_DOLLARS.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "WriteOffAmount");
                this.columnWRITE_OFF_DOLLARS.ExtendedProperties.Add("Generator_UserColumnName", "WRITE_OFF_DOLLARS");
                base.Columns.Add(this.columnWRITE_OFF_DOLLARS);
                this.columnSiteId.AllowDBNull = false;
                this.columnAccountNumber.AllowDBNull = false;
                this.columnStatementCode.AllowDBNull = false;
                this.ExtendedProperties.Add("typedName", "CustomerStatement");
                this.ExtendedProperties.Add("typedPlural", "CustomerStatements");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerStatement NewCustomerStatement() {
                return ((CustomerStatement)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CustomerStatement(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CustomerStatement);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerStatementChanged != null)) {
                    this.CustomerStatementChanged(this, new CustomerStatementChangeEvent(((CustomerStatement)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerStatementChanging != null)) {
                    this.CustomerStatementChanging(this, new CustomerStatementChangeEvent(((CustomerStatement)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerStatementDeleted != null)) {
                    this.CustomerStatementDeleted(this, new CustomerStatementChangeEvent(((CustomerStatement)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerStatementDeleting != null)) {
                    this.CustomerStatementDeleting(this, new CustomerStatementChangeEvent(((CustomerStatement)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerStatement(CustomerStatement row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountSchema ds = new CustomerAccountSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerStatementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerServiceCodesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSiteId;
            
            private System.Data.DataColumn columnAccountNumber;
            
            private System.Data.DataColumn columnServiceCode;
            
            private System.Data.DataColumn columnServiceCategoryCode;
            
            private System.Data.DataColumn columnServiceOccurrence;
            
            private System.Data.DataColumn columnServiceQuantity;
            
            private System.Data.DataColumn columnINSTALL_DATE;
            
            private System.Data.DataColumn columnPRODUCT_LINE_CD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServiceCodesDataTable() {
                this.TableName = "CustomerServiceCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerServiceCodesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerServiceCodesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountNumberColumn {
                get {
                    return this.columnAccountNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ServiceCodeColumn {
                get {
                    return this.columnServiceCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ServiceCategoryCodeColumn {
                get {
                    return this.columnServiceCategoryCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ServiceOccurrenceColumn {
                get {
                    return this.columnServiceOccurrence;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ServiceQuantityColumn {
                get {
                    return this.columnServiceQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INSTALL_DATEColumn {
                get {
                    return this.columnINSTALL_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRODUCT_LINE_CDColumn {
                get {
                    return this.columnPRODUCT_LINE_CD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServiceCode this[int index] {
                get {
                    return ((CustomerServiceCode)(this.Rows[index]));
                }
            }
            
            public event CustomerServiceCodeChangeEventHandler CustomerServiceCodeChanging;
            
            public event CustomerServiceCodeChangeEventHandler CustomerServiceCodeChanged;
            
            public event CustomerServiceCodeChangeEventHandler CustomerServiceCodeDeleting;
            
            public event CustomerServiceCodeChangeEventHandler CustomerServiceCodeDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerServiceCode(CustomerServiceCode row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServiceCode AddCustomerServiceCode(decimal SiteId, decimal AccountNumber, string ServiceCode, string ServiceCategoryCode, decimal ServiceOccurrence, decimal ServiceQuantity, decimal INSTALL_DATE, decimal PRODUCT_LINE_CD) {
                CustomerServiceCode rowCustomerServiceCode = ((CustomerServiceCode)(this.NewRow()));
                rowCustomerServiceCode.ItemArray = new object[] {
                        SiteId,
                        AccountNumber,
                        ServiceCode,
                        ServiceCategoryCode,
                        ServiceOccurrence,
                        ServiceQuantity,
                        INSTALL_DATE,
                        PRODUCT_LINE_CD};
                this.Rows.Add(rowCustomerServiceCode);
                return rowCustomerServiceCode;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CustomerServiceCodesDataTable cln = ((CustomerServiceCodesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CustomerServiceCodesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteId = base.Columns["SITE_ID"];
                this.columnAccountNumber = base.Columns["ACCOUNT_NUMBER"];
                this.columnServiceCode = base.Columns["SERVICE_CODE"];
                this.columnServiceCategoryCode = base.Columns["SERVICE_CATEGORY_CODE"];
                this.columnServiceOccurrence = base.Columns["SERVICE_OCCURRENCE"];
                this.columnServiceQuantity = base.Columns["SERVICE_QUANTITY"];
                this.columnINSTALL_DATE = base.Columns["INSTALL_DATE"];
                this.columnPRODUCT_LINE_CD = base.Columns["PRODUCT_LINE_CD"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteId = new System.Data.DataColumn("SITE_ID", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnSiteId.ExtendedProperties.Add("typedName", "SiteId");
                base.Columns.Add(this.columnSiteId);
                this.columnAccountNumber = new System.Data.DataColumn("ACCOUNT_NUMBER", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnAccountNumber.ExtendedProperties.Add("typedName", "AccountNumber");
                base.Columns.Add(this.columnAccountNumber);
                this.columnServiceCode = new System.Data.DataColumn("SERVICE_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnServiceCode.ExtendedProperties.Add("typedName", "ServiceCode");
                base.Columns.Add(this.columnServiceCode);
                this.columnServiceCategoryCode = new System.Data.DataColumn("SERVICE_CATEGORY_CODE", typeof(string), null, System.Data.MappingType.Element);
                this.columnServiceCategoryCode.ExtendedProperties.Add("typedName", "ServiceCategoryCode");
                base.Columns.Add(this.columnServiceCategoryCode);
                this.columnServiceOccurrence = new System.Data.DataColumn("SERVICE_OCCURRENCE", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnServiceOccurrence.ExtendedProperties.Add("typedName", "ServiceOccurrence");
                base.Columns.Add(this.columnServiceOccurrence);
                this.columnServiceQuantity = new System.Data.DataColumn("SERVICE_QUANTITY", typeof(decimal), null, System.Data.MappingType.Element);
                this.columnServiceQuantity.ExtendedProperties.Add("typedName", "ServiceQuantity");
                base.Columns.Add(this.columnServiceQuantity);
                this.columnINSTALL_DATE = new System.Data.DataColumn("INSTALL_DATE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTALL_DATE);
                this.columnPRODUCT_LINE_CD = new System.Data.DataColumn("PRODUCT_LINE_CD", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_LINE_CD);
                this.ExtendedProperties.Add("typedName", "CustomerServiceCode");
                this.ExtendedProperties.Add("typedPlural", "CustomerServiceCodes");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServiceCode NewCustomerServiceCode() {
                return ((CustomerServiceCode)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CustomerServiceCode(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CustomerServiceCode);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerServiceCodeChanged != null)) {
                    this.CustomerServiceCodeChanged(this, new CustomerServiceCodeChangeEvent(((CustomerServiceCode)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerServiceCodeChanging != null)) {
                    this.CustomerServiceCodeChanging(this, new CustomerServiceCodeChangeEvent(((CustomerServiceCode)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerServiceCodeDeleted != null)) {
                    this.CustomerServiceCodeDeleted(this, new CustomerServiceCodeChangeEvent(((CustomerServiceCode)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerServiceCodeDeleting != null)) {
                    this.CustomerServiceCodeDeleting(this, new CustomerServiceCodeChangeEvent(((CustomerServiceCode)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerServiceCode(CustomerServiceCode row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                CustomerAccountSchema ds = new CustomerAccountSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerServiceCodesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerAccount : System.Data.DataRow {
            
            private CustomerAccountsDataTable tableCustomerAccounts;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerAccount(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerAccounts = ((CustomerAccountsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteId {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerAccounts.SiteIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SITE_ID\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccounts.SiteIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AccountNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerAccounts.AccountNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_NUMBER\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccounts.AccountNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CompanyNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerAccounts.CompanyNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_NUMBER\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccounts.CompanyNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DivisionNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerAccounts.DivisionNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DIVISION_NUMBER\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccounts.DivisionNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLocation {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAccounts.AddressLocationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_LOCATION\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccounts.AddressLocationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INSTALL_DATE {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerAccounts.INSTALL_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'INSTALL_DATE\' in table \'CustomerAccount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAccounts.INSTALL_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIdNull() {
                return this.IsNull(this.tableCustomerAccounts.SiteIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIdNull() {
                this[this.tableCustomerAccounts.SiteIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNumberNull() {
                return this.IsNull(this.tableCustomerAccounts.AccountNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNumberNull() {
                this[this.tableCustomerAccounts.AccountNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNumberNull() {
                return this.IsNull(this.tableCustomerAccounts.CompanyNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNumberNull() {
                this[this.tableCustomerAccounts.CompanyNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNumberNull() {
                return this.IsNull(this.tableCustomerAccounts.DivisionNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNumberNull() {
                this[this.tableCustomerAccounts.DivisionNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLocationNull() {
                return this.IsNull(this.tableCustomerAccounts.AddressLocationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLocationNull() {
                this[this.tableCustomerAccounts.AddressLocationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSTALL_DATENull() {
                return this.IsNull(this.tableCustomerAccounts.INSTALL_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSTALL_DATENull() {
                this[this.tableCustomerAccounts.INSTALL_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerAddress : System.Data.DataRow {
            
            private CustomerAddressesDataTable tableCustomerAddresses;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerAddress(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerAddresses = ((CustomerAddressesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.FirstNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FIRST_NAME\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.FirstNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleInitial {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.MiddleInitialColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MIDDLE_INITIAL\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.MiddleInitialColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.LastNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_NAME\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.LastNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.CustomerNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_NAME\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.CustomerNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HomeAreaCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.HomeAreaCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HOME_AREA_CODE\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.HomeAreaCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HomeExchangeCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.HomeExchangeCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HOME_EXCHANGE_NUMBER\' in table \'CustomerAddress\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.HomeExchangeCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HomeTelephoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.HomeTelephoneNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HOME_TELEPHONE_NUMBER\' in table \'CustomerAddress\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.HomeTelephoneNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessAreaCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.BusinessAreaCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BUSINESS_AREA_CODE\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.BusinessAreaCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessExchangeCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.BusinessExchangeCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BUSINESS_EXCHANGE_NUMBER\' in table \'CustomerAddress\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.BusinessExchangeCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessTelephoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.BusinessTelephoneNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BUSINESS_TELEPHONE_NUMBER\' in table \'CustomerAddress\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.BusinessTelephoneNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherAreaCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.OtherAreaCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OTHER_AREA_CODE\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.OtherAreaCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherExchangeCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.OtherExchangeCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OTHER_EXCHANGE_NUMBER\' in table \'CustomerAddress\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.OtherExchangeCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherTelephoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.OtherTelephoneNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OTHER_TELEPHONE_NUMBER\' in table \'CustomerAddress\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.OtherTelephoneNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLine1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.AddressLine1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDRESS_LINE_1\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.AddressLine1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLine2 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.AddressLine2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDRESS_LINE_2\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.AddressLine2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLine3 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.AddressLine3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDRESS_LINE_3\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.AddressLine3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressLine4 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.AddressLine4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDRESS_LINE_4\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.AddressLine4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_CITY\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.CityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.StateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_STATE\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.StateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip4 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.Zip4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_ZIP_4\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.Zip4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip5 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.Zip5Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADDR_ZIP_5\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.Zip5Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillType {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.BILL_TYPE_CODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BILL_TYPE_CODE\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.BILL_TYPE_CODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ONLINE_ORDERING_OPT_OUT {
                get {
                    try {
                        return ((int)(this[this.tableCustomerAddresses.ONLINE_ORDERING_OPT_OUTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ONLINE_ORDERING_OPT_OUT\' in table \'CustomerAddress\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.ONLINE_ORDERING_OPT_OUTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Franchise_Number {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.Franchise_NumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Franchise_Number\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.Franchise_NumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pricing_Group {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.Pricing_GroupColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pricing_Group\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.Pricing_GroupColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountStatus {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.AccountStatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AccountStatus\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.AccountStatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number13 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.Account_Number13Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Account_Number13\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.Account_Number13Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Site_ID {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.Site_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Site_ID\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.Site_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string siteCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerAddresses.siteCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'siteCode\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.siteCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public char Bill_type_code {
                get {
                    try {
                        return ((char)(this[this.tableCustomerAddresses.Bill_type_codeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bill_type_code\' in table \'CustomerAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.Bill_type_codeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong HomeTelephoneNumberFull {
                get {
                    try {
                        return ((ulong)(this[this.tableCustomerAddresses.HomeTelephoneNumberFullColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HomeTelephoneNumberFull\' in table \'CustomerAddress\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.HomeTelephoneNumberFullColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong BusinessTelephoneNumberFull {
                get {
                    try {
                        return ((ulong)(this[this.tableCustomerAddresses.BusinessTelephoneNumberFullColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BusinessTelephoneNumberFull\' in table \'CustomerAddress\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.BusinessTelephoneNumberFullColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong OtherTelephoneNumberFull {
                get {
                    try {
                        return ((ulong)(this[this.tableCustomerAddresses.OtherTelephoneNumberFullColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OtherTelephoneNumberFull\' in table \'CustomerAddress\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.OtherTelephoneNumberFullColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong CustomerTNTelephoneNumberFull {
                get {
                    try {
                        return ((ulong)(this[this.tableCustomerAddresses.CustomerTNTelephoneNumberFullColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerTNTelephoneNumberFull\' in table \'CustomerAddress\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerAddresses.CustomerTNTelephoneNumberFullColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableCustomerAddresses.FirstNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableCustomerAddresses.FirstNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleInitialNull() {
                return this.IsNull(this.tableCustomerAddresses.MiddleInitialColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleInitialNull() {
                this[this.tableCustomerAddresses.MiddleInitialColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableCustomerAddresses.LastNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tableCustomerAddresses.LastNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomerAddresses.CustomerNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomerAddresses.CustomerNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomeAreaCodeNull() {
                return this.IsNull(this.tableCustomerAddresses.HomeAreaCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomeAreaCodeNull() {
                this[this.tableCustomerAddresses.HomeAreaCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomeExchangeCodeNull() {
                return this.IsNull(this.tableCustomerAddresses.HomeExchangeCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomeExchangeCodeNull() {
                this[this.tableCustomerAddresses.HomeExchangeCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomeTelephoneNumberNull() {
                return this.IsNull(this.tableCustomerAddresses.HomeTelephoneNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomeTelephoneNumberNull() {
                this[this.tableCustomerAddresses.HomeTelephoneNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessAreaCodeNull() {
                return this.IsNull(this.tableCustomerAddresses.BusinessAreaCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessAreaCodeNull() {
                this[this.tableCustomerAddresses.BusinessAreaCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessExchangeCodeNull() {
                return this.IsNull(this.tableCustomerAddresses.BusinessExchangeCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessExchangeCodeNull() {
                this[this.tableCustomerAddresses.BusinessExchangeCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessTelephoneNumberNull() {
                return this.IsNull(this.tableCustomerAddresses.BusinessTelephoneNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessTelephoneNumberNull() {
                this[this.tableCustomerAddresses.BusinessTelephoneNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAreaCodeNull() {
                return this.IsNull(this.tableCustomerAddresses.OtherAreaCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAreaCodeNull() {
                this[this.tableCustomerAddresses.OtherAreaCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherExchangeCodeNull() {
                return this.IsNull(this.tableCustomerAddresses.OtherExchangeCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherExchangeCodeNull() {
                this[this.tableCustomerAddresses.OtherExchangeCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherTelephoneNumberNull() {
                return this.IsNull(this.tableCustomerAddresses.OtherTelephoneNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherTelephoneNumberNull() {
                this[this.tableCustomerAddresses.OtherTelephoneNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLine1Null() {
                return this.IsNull(this.tableCustomerAddresses.AddressLine1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLine1Null() {
                this[this.tableCustomerAddresses.AddressLine1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLine2Null() {
                return this.IsNull(this.tableCustomerAddresses.AddressLine2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLine2Null() {
                this[this.tableCustomerAddresses.AddressLine2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLine3Null() {
                return this.IsNull(this.tableCustomerAddresses.AddressLine3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLine3Null() {
                this[this.tableCustomerAddresses.AddressLine3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressLine4Null() {
                return this.IsNull(this.tableCustomerAddresses.AddressLine4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressLine4Null() {
                this[this.tableCustomerAddresses.AddressLine4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableCustomerAddresses.CityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableCustomerAddresses.CityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableCustomerAddresses.StateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableCustomerAddresses.StateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZip4Null() {
                return this.IsNull(this.tableCustomerAddresses.Zip4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZip4Null() {
                this[this.tableCustomerAddresses.Zip4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZip5Null() {
                return this.IsNull(this.tableCustomerAddresses.Zip5Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZip5Null() {
                this[this.tableCustomerAddresses.Zip5Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillTypeNull() {
                return this.IsNull(this.tableCustomerAddresses.BILL_TYPE_CODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillTypeNull() {
                this[this.tableCustomerAddresses.BILL_TYPE_CODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsONLINE_ORDERING_OPT_OUTNull() {
                return this.IsNull(this.tableCustomerAddresses.ONLINE_ORDERING_OPT_OUTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetONLINE_ORDERING_OPT_OUTNull() {
                this[this.tableCustomerAddresses.ONLINE_ORDERING_OPT_OUTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFranchise_NumberNull() {
                return this.IsNull(this.tableCustomerAddresses.Franchise_NumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFranchise_NumberNull() {
                this[this.tableCustomerAddresses.Franchise_NumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPricing_GroupNull() {
                return this.IsNull(this.tableCustomerAddresses.Pricing_GroupColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPricing_GroupNull() {
                this[this.tableCustomerAddresses.Pricing_GroupColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountStatusNull() {
                return this.IsNull(this.tableCustomerAddresses.AccountStatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountStatusNull() {
                this[this.tableCustomerAddresses.AccountStatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_Number13Null() {
                return this.IsNull(this.tableCustomerAddresses.Account_Number13Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_Number13Null() {
                this[this.tableCustomerAddresses.Account_Number13Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSite_IDNull() {
                return this.IsNull(this.tableCustomerAddresses.Site_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSite_IDNull() {
                this[this.tableCustomerAddresses.Site_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssiteCodeNull() {
                return this.IsNull(this.tableCustomerAddresses.siteCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsiteCodeNull() {
                this[this.tableCustomerAddresses.siteCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_type_codeNull() {
                return this.IsNull(this.tableCustomerAddresses.Bill_type_codeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_type_codeNull() {
                this[this.tableCustomerAddresses.Bill_type_codeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomeTelephoneNumberFullNull() {
                return this.IsNull(this.tableCustomerAddresses.HomeTelephoneNumberFullColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomeTelephoneNumberFullNull() {
                this[this.tableCustomerAddresses.HomeTelephoneNumberFullColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessTelephoneNumberFullNull() {
                return this.IsNull(this.tableCustomerAddresses.BusinessTelephoneNumberFullColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessTelephoneNumberFullNull() {
                this[this.tableCustomerAddresses.BusinessTelephoneNumberFullColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherTelephoneNumberFullNull() {
                return this.IsNull(this.tableCustomerAddresses.OtherTelephoneNumberFullColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherTelephoneNumberFullNull() {
                this[this.tableCustomerAddresses.OtherTelephoneNumberFullColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerTNTelephoneNumberFullNull() {
                return this.IsNull(this.tableCustomerAddresses.CustomerTNTelephoneNumberFullColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerTNTelephoneNumberFullNull() {
                this[this.tableCustomerAddresses.CustomerTNTelephoneNumberFullColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerName : System.Data.DataRow {
            
            private CustomerNamesDataTable tableCustomerNames;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerName(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerNames = ((CustomerNamesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerNames.FirstNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FIRST_NAME\' in table \'CustomerName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerNames.FirstNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleInitial {
                get {
                    try {
                        return ((string)(this[this.tableCustomerNames.MiddleInitialColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MIDDLE_INITIAL\' in table \'CustomerName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerNames.MiddleInitialColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerNames.LastNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_NAME\' in table \'CustomerName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerNames.LastNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableCustomerNames.FirstNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableCustomerNames.FirstNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleInitialNull() {
                return this.IsNull(this.tableCustomerNames.MiddleInitialColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleInitialNull() {
                this[this.tableCustomerNames.MiddleInitialColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableCustomerNames.LastNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tableCustomerNames.LastNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerStatement : System.Data.DataRow {
            
            private CustomerStatementsDataTable tableCustomerStatements;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerStatement(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerStatements = ((CustomerStatementsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteId {
                get {
                    return ((decimal)(this[this.tableCustomerStatements.SiteIdColumn]));
                }
                set {
                    this[this.tableCustomerStatements.SiteIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AccountNumber {
                get {
                    return ((decimal)(this[this.tableCustomerStatements.AccountNumberColumn]));
                }
                set {
                    this[this.tableCustomerStatements.AccountNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StatementCode {
                get {
                    return ((decimal)(this[this.tableCustomerStatements.StatementCodeColumn]));
                }
                set {
                    this[this.tableCustomerStatements.StatementCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerStatements.ServiceCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_CATEGORY_CODE\' in table \'CustomerStatement\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.ServiceCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillHandlingCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerStatements.BillHandlingCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BILL_HANDLING_CODE\' in table \'CustomerStatement\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.BillHandlingCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DueDate {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.DueDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STATEMENT_DUE_DATE\' in table \'CustomerStatement\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.DueDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountBilled {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.AmountBilledColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BALANCE_LAST_STATEMENT\' in table \'CustomerStatement\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.AmountBilledColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MopCode {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.MopCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'METHOD_OF_PAYMENT_CODE\' in table \'CustomerStatement\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.MopCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPaymentAmount1 {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.LastPaymentAmount1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_PAYMENT_AMOUNT_1\' in table \'CustomerStatement\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.LastPaymentAmount1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPaymentDate1 {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.LastPaymentDate1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_PAYMENT_DATE_1\' in table \'CustomerStatement\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.LastPaymentDate1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPaymentAmount2 {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.LastPaymentAmount2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_PAYMENT_AMOUNT_2\' in table \'CustomerStatement\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.LastPaymentAmount2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPaymentDate2 {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.LastPaymentDate2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_PAYMENT_DATE_2\' in table \'CustomerStatement\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.LastPaymentDate2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPaymentAmount3 {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.LastPaymentAmount3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_PAYMENT_AMOUNT_3\' in table \'CustomerStatement\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.LastPaymentAmount3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPaymentDate3 {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.LastPaymentDate3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_PAYMENT_DATE_3\' in table \'CustomerStatement\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.LastPaymentDate3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastStatementDate {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.LastStatementDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_STATEMENT_DATE\' in table \'CustomerStatement\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.LastStatementDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableCustomerStatements.StatusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUST_SRV_STMT_STATUS\' in table \'CustomerStatement\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ArBalanceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.ArBalanceAmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AR_BALANCE\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.ArBalanceAmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CurrentArBalanceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.CurrentArBalanceAmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CURRENT_AR_BALANCE\' in table \'CustomerStatement\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.CurrentArBalanceAmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ar1To30Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.Ar1To30AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AR_1_TO_30\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.Ar1To30AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ar31To60Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.Ar31To60AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AR_31_TO_60\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.Ar31To60AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ar61To90Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.Ar61To90AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AR_61_TO_90\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.Ar61To90AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ar91To120Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.Ar91To120AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AR_91_TO_120\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.Ar91To120AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ar121To150Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.Ar121To150AmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AR_121_TO_150\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.Ar121To150AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ar150PlusAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.Ar150PlusAmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AR_OVER_150_DAYS\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.Ar150PlusAmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DepositDueAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.DepositDueAmountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEPOSIT_DUE_AMT\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.DepositDueAmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WriteOffAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerStatements.WRITE_OFF_DOLLARSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WRITE_OFF_DOLLARS\' in table \'CustomerStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerStatements.WRITE_OFF_DOLLARSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceCodeNull() {
                return this.IsNull(this.tableCustomerStatements.ServiceCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceCodeNull() {
                this[this.tableCustomerStatements.ServiceCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillHandlingCodeNull() {
                return this.IsNull(this.tableCustomerStatements.BillHandlingCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillHandlingCodeNull() {
                this[this.tableCustomerStatements.BillHandlingCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tableCustomerStatements.DueDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tableCustomerStatements.DueDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountBilledNull() {
                return this.IsNull(this.tableCustomerStatements.AmountBilledColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountBilledNull() {
                this[this.tableCustomerStatements.AmountBilledColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMopCodeNull() {
                return this.IsNull(this.tableCustomerStatements.MopCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMopCodeNull() {
                this[this.tableCustomerStatements.MopCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPaymentAmount1Null() {
                return this.IsNull(this.tableCustomerStatements.LastPaymentAmount1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPaymentAmount1Null() {
                this[this.tableCustomerStatements.LastPaymentAmount1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPaymentDate1Null() {
                return this.IsNull(this.tableCustomerStatements.LastPaymentDate1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPaymentDate1Null() {
                this[this.tableCustomerStatements.LastPaymentDate1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPaymentAmount2Null() {
                return this.IsNull(this.tableCustomerStatements.LastPaymentAmount2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPaymentAmount2Null() {
                this[this.tableCustomerStatements.LastPaymentAmount2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPaymentDate2Null() {
                return this.IsNull(this.tableCustomerStatements.LastPaymentDate2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPaymentDate2Null() {
                this[this.tableCustomerStatements.LastPaymentDate2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPaymentAmount3Null() {
                return this.IsNull(this.tableCustomerStatements.LastPaymentAmount3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPaymentAmount3Null() {
                this[this.tableCustomerStatements.LastPaymentAmount3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPaymentDate3Null() {
                return this.IsNull(this.tableCustomerStatements.LastPaymentDate3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPaymentDate3Null() {
                this[this.tableCustomerStatements.LastPaymentDate3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastStatementDateNull() {
                return this.IsNull(this.tableCustomerStatements.LastStatementDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastStatementDateNull() {
                this[this.tableCustomerStatements.LastStatementDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableCustomerStatements.StatusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableCustomerStatements.StatusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArBalanceAmountNull() {
                return this.IsNull(this.tableCustomerStatements.ArBalanceAmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArBalanceAmountNull() {
                this[this.tableCustomerStatements.ArBalanceAmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentArBalanceAmountNull() {
                return this.IsNull(this.tableCustomerStatements.CurrentArBalanceAmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentArBalanceAmountNull() {
                this[this.tableCustomerStatements.CurrentArBalanceAmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAr1To30AmountNull() {
                return this.IsNull(this.tableCustomerStatements.Ar1To30AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAr1To30AmountNull() {
                this[this.tableCustomerStatements.Ar1To30AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAr31To60AmountNull() {
                return this.IsNull(this.tableCustomerStatements.Ar31To60AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAr31To60AmountNull() {
                this[this.tableCustomerStatements.Ar31To60AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAr61To90AmountNull() {
                return this.IsNull(this.tableCustomerStatements.Ar61To90AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAr61To90AmountNull() {
                this[this.tableCustomerStatements.Ar61To90AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAr91To120AmountNull() {
                return this.IsNull(this.tableCustomerStatements.Ar91To120AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAr91To120AmountNull() {
                this[this.tableCustomerStatements.Ar91To120AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAr121To150AmountNull() {
                return this.IsNull(this.tableCustomerStatements.Ar121To150AmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAr121To150AmountNull() {
                this[this.tableCustomerStatements.Ar121To150AmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAr150PlusAmountNull() {
                return this.IsNull(this.tableCustomerStatements.Ar150PlusAmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAr150PlusAmountNull() {
                this[this.tableCustomerStatements.Ar150PlusAmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositDueAmountNull() {
                return this.IsNull(this.tableCustomerStatements.DepositDueAmountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositDueAmountNull() {
                this[this.tableCustomerStatements.DepositDueAmountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWriteOffAmountNull() {
                return this.IsNull(this.tableCustomerStatements.WRITE_OFF_DOLLARSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWriteOffAmountNull() {
                this[this.tableCustomerStatements.WRITE_OFF_DOLLARSColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerServiceCode : System.Data.DataRow {
            
            private CustomerServiceCodesDataTable tableCustomerServiceCodes;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerServiceCode(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerServiceCodes = ((CustomerServiceCodesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SiteId {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerServiceCodes.SiteIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SITE_ID\' in table \'CustomerServiceCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.SiteIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AccountNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerServiceCodes.AccountNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_NUMBER\' in table \'CustomerServiceCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.AccountNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerServiceCodes.ServiceCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_CODE\' in table \'CustomerServiceCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.ServiceCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceCategoryCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerServiceCodes.ServiceCategoryCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_CATEGORY_CODE\' in table \'CustomerServiceCode\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.ServiceCategoryCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceOccurrence {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerServiceCodes.ServiceOccurrenceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_OCCURRENCE\' in table \'CustomerServiceCode\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.ServiceOccurrenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerServiceCodes.ServiceQuantityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_QUANTITY\' in table \'CustomerServiceCode\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.ServiceQuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal INSTALL_DATE {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerServiceCodes.INSTALL_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'INSTALL_DATE\' in table \'CustomerServiceCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.INSTALL_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRODUCT_LINE_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerServiceCodes.PRODUCT_LINE_CDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRODUCT_LINE_CD\' in table \'CustomerServiceCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerServiceCodes.PRODUCT_LINE_CDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIdNull() {
                return this.IsNull(this.tableCustomerServiceCodes.SiteIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIdNull() {
                this[this.tableCustomerServiceCodes.SiteIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNumberNull() {
                return this.IsNull(this.tableCustomerServiceCodes.AccountNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNumberNull() {
                this[this.tableCustomerServiceCodes.AccountNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceCodeNull() {
                return this.IsNull(this.tableCustomerServiceCodes.ServiceCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceCodeNull() {
                this[this.tableCustomerServiceCodes.ServiceCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceCategoryCodeNull() {
                return this.IsNull(this.tableCustomerServiceCodes.ServiceCategoryCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceCategoryCodeNull() {
                this[this.tableCustomerServiceCodes.ServiceCategoryCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceOccurrenceNull() {
                return this.IsNull(this.tableCustomerServiceCodes.ServiceOccurrenceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceOccurrenceNull() {
                this[this.tableCustomerServiceCodes.ServiceOccurrenceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceQuantityNull() {
                return this.IsNull(this.tableCustomerServiceCodes.ServiceQuantityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceQuantityNull() {
                this[this.tableCustomerServiceCodes.ServiceQuantityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSTALL_DATENull() {
                return this.IsNull(this.tableCustomerServiceCodes.INSTALL_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSTALL_DATENull() {
                this[this.tableCustomerServiceCodes.INSTALL_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_LINE_CDNull() {
                return this.IsNull(this.tableCustomerServiceCodes.PRODUCT_LINE_CDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_LINE_CDNull() {
                this[this.tableCustomerServiceCodes.PRODUCT_LINE_CDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerAccountChangeEvent : System.EventArgs {
            
            private CustomerAccount eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccountChangeEvent(CustomerAccount row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAccount Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerAddressChangeEvent : System.EventArgs {
            
            private CustomerAddress eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAddressChangeEvent(CustomerAddress row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerAddress Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerNameChangeEvent : System.EventArgs {
            
            private CustomerName eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerNameChangeEvent(CustomerName row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerName Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerStatementChangeEvent : System.EventArgs {
            
            private CustomerStatement eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerStatementChangeEvent(CustomerStatement row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerStatement Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerServiceCodeChangeEvent : System.EventArgs {
            
            private CustomerServiceCode eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServiceCodeChangeEvent(CustomerServiceCode row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerServiceCode Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591