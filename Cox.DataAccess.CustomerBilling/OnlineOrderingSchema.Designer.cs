//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Cox.DataAccess.CustomerBilling {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("OnlineOrderingSchema")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OnlineOrderingSchema : System.Data.DataSet {
        
        private OnlineOrderingDataTable tableOnlineOrdering;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OnlineOrderingSchema() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OnlineOrderingSchema(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["OnlineOrdering"] != null)) {
                    base.Tables.Add(new OnlineOrderingDataTable(ds.Tables["OnlineOrdering"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OnlineOrderingDataTable OnlineOrdering {
            get {
                return this.tableOnlineOrdering;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            OnlineOrderingSchema cln = ((OnlineOrderingSchema)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OnlineOrdering"] != null)) {
                    base.Tables.Add(new OnlineOrderingDataTable(ds.Tables["OnlineOrdering"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableOnlineOrdering = ((OnlineOrderingDataTable)(base.Tables["OnlineOrdering"]));
            if ((initTable == true)) {
                if ((this.tableOnlineOrdering != null)) {
                    this.tableOnlineOrdering.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OnlineOrderingSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OnlineOrderingSchema.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOnlineOrdering = new OnlineOrderingDataTable();
            base.Tables.Add(this.tableOnlineOrdering);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOnlineOrdering() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            OnlineOrderingSchema ds = new OnlineOrderingSchema();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void OnlineOrderingRowChangeEventHandler(object sender, OnlineOrderingRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OnlineOrderingDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSiteId;
            
            private System.Data.DataColumn columnMaxCurrentBalance;
            
            private System.Data.DataColumn columnMaxAR1To30Balance;
            
            private System.Data.DataColumn columnMaxAR31To60Balance;
            
            private System.Data.DataColumn columnMaxAR61To90Balance;
            
            private System.Data.DataColumn columnMaxAR91To120Balance;
            
            private System.Data.DataColumn columnMaxAR121to150Balance;
            
            private System.Data.DataColumn columnMaxAR150PlusBalance;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OnlineOrderingDataTable() {
                this.TableName = "OnlineOrdering";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OnlineOrderingDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OnlineOrderingDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaxCurrentBalanceColumn {
                get {
                    return this.columnMaxCurrentBalance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaxAR1To30BalanceColumn {
                get {
                    return this.columnMaxAR1To30Balance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaxAR31To60BalanceColumn {
                get {
                    return this.columnMaxAR31To60Balance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaxAR61To90BalanceColumn {
                get {
                    return this.columnMaxAR61To90Balance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaxAR91To120BalanceColumn {
                get {
                    return this.columnMaxAR91To120Balance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaxAR121to150BalanceColumn {
                get {
                    return this.columnMaxAR121to150Balance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaxAR150PlusBalanceColumn {
                get {
                    return this.columnMaxAR150PlusBalance;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OnlineOrderingRow this[int index] {
                get {
                    return ((OnlineOrderingRow)(this.Rows[index]));
                }
            }
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowChanging;
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowChanged;
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowDeleting;
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOnlineOrderingRow(OnlineOrderingRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OnlineOrderingRow AddOnlineOrderingRow(int SiteId, double MaxCurrentBalance, double MaxAR1To30Balance, double MaxAR31To60Balance, double MaxAR61To90Balance, double MaxAR91To120Balance, double MaxAR121to150Balance, double MaxAR150PlusBalance) {
                OnlineOrderingRow rowOnlineOrderingRow = ((OnlineOrderingRow)(this.NewRow()));
                rowOnlineOrderingRow.ItemArray = new object[] {
                        SiteId,
                        MaxCurrentBalance,
                        MaxAR1To30Balance,
                        MaxAR31To60Balance,
                        MaxAR61To90Balance,
                        MaxAR91To120Balance,
                        MaxAR121to150Balance,
                        MaxAR150PlusBalance};
                this.Rows.Add(rowOnlineOrderingRow);
                return rowOnlineOrderingRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                OnlineOrderingDataTable cln = ((OnlineOrderingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new OnlineOrderingDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteId = base.Columns["SiteId"];
                this.columnMaxCurrentBalance = base.Columns["MaxCurrentBalance"];
                this.columnMaxAR1To30Balance = base.Columns["MaxAR1To30Balance"];
                this.columnMaxAR31To60Balance = base.Columns["MaxAR31To60Balance"];
                this.columnMaxAR61To90Balance = base.Columns["MaxAR61To90Balance"];
                this.columnMaxAR91To120Balance = base.Columns["MaxAR91To120Balance"];
                this.columnMaxAR121to150Balance = base.Columns["MaxAR121to150Balance"];
                this.columnMaxAR150PlusBalance = base.Columns["MaxAR150PlusBalance"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteId = new System.Data.DataColumn("SiteId", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteId);
                this.columnMaxCurrentBalance = new System.Data.DataColumn("MaxCurrentBalance", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxCurrentBalance);
                this.columnMaxAR1To30Balance = new System.Data.DataColumn("MaxAR1To30Balance", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAR1To30Balance);
                this.columnMaxAR31To60Balance = new System.Data.DataColumn("MaxAR31To60Balance", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAR31To60Balance);
                this.columnMaxAR61To90Balance = new System.Data.DataColumn("MaxAR61To90Balance", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAR61To90Balance);
                this.columnMaxAR91To120Balance = new System.Data.DataColumn("MaxAR91To120Balance", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAR91To120Balance);
                this.columnMaxAR121to150Balance = new System.Data.DataColumn("MaxAR121to150Balance", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAR121to150Balance);
                this.columnMaxAR150PlusBalance = new System.Data.DataColumn("MaxAR150PlusBalance", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAR150PlusBalance);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OnlineOrderingRow NewOnlineOrderingRow() {
                return ((OnlineOrderingRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new OnlineOrderingRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(OnlineOrderingRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OnlineOrderingRowChanged != null)) {
                    this.OnlineOrderingRowChanged(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OnlineOrderingRowChanging != null)) {
                    this.OnlineOrderingRowChanging(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OnlineOrderingRowDeleted != null)) {
                    this.OnlineOrderingRowDeleted(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OnlineOrderingRowDeleting != null)) {
                    this.OnlineOrderingRowDeleting(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOnlineOrderingRow(OnlineOrderingRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                OnlineOrderingSchema ds = new OnlineOrderingSchema();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OnlineOrderingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OnlineOrderingRow : System.Data.DataRow {
            
            private OnlineOrderingDataTable tableOnlineOrdering;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OnlineOrderingRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOnlineOrdering = ((OnlineOrderingDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SiteId {
                get {
                    try {
                        return ((int)(this[this.tableOnlineOrdering.SiteIdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SiteId\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.SiteIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaxCurrentBalance {
                get {
                    try {
                        return ((double)(this[this.tableOnlineOrdering.MaxCurrentBalanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaxCurrentBalance\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxCurrentBalanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaxAR1To30Balance {
                get {
                    try {
                        return ((double)(this[this.tableOnlineOrdering.MaxAR1To30BalanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaxAR1To30Balance\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR1To30BalanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaxAR31To60Balance {
                get {
                    try {
                        return ((double)(this[this.tableOnlineOrdering.MaxAR31To60BalanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaxAR31To60Balance\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR31To60BalanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaxAR61To90Balance {
                get {
                    try {
                        return ((double)(this[this.tableOnlineOrdering.MaxAR61To90BalanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaxAR61To90Balance\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR61To90BalanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaxAR91To120Balance {
                get {
                    try {
                        return ((double)(this[this.tableOnlineOrdering.MaxAR91To120BalanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaxAR91To120Balance\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR91To120BalanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaxAR121to150Balance {
                get {
                    try {
                        return ((double)(this[this.tableOnlineOrdering.MaxAR121to150BalanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaxAR121to150Balance\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR121to150BalanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaxAR150PlusBalance {
                get {
                    try {
                        return ((double)(this[this.tableOnlineOrdering.MaxAR150PlusBalanceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MaxAR150PlusBalance\' in table \'OnlineOrdering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR150PlusBalanceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIdNull() {
                return this.IsNull(this.tableOnlineOrdering.SiteIdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIdNull() {
                this[this.tableOnlineOrdering.SiteIdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxCurrentBalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxCurrentBalanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxCurrentBalanceNull() {
                this[this.tableOnlineOrdering.MaxCurrentBalanceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxAR1To30BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR1To30BalanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxAR1To30BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR1To30BalanceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxAR31To60BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR31To60BalanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxAR31To60BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR31To60BalanceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxAR61To90BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR61To90BalanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxAR61To90BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR61To90BalanceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxAR91To120BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR91To120BalanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxAR91To120BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR91To120BalanceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxAR121to150BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR121to150BalanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxAR121to150BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR121to150BalanceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxAR150PlusBalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR150PlusBalanceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxAR150PlusBalanceNull() {
                this[this.tableOnlineOrdering.MaxAR150PlusBalanceColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OnlineOrderingRowChangeEvent : System.EventArgs {
            
            private OnlineOrderingRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OnlineOrderingRowChangeEvent(OnlineOrderingRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OnlineOrderingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591