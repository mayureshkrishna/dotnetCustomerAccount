//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Cox.DataAccess.CustomerBilling {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class OnlineOrderingSchema : DataSet {
        
        private OnlineOrderingDataTable tableOnlineOrdering;
        
        public OnlineOrderingSchema() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected OnlineOrderingSchema(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["OnlineOrdering"] != null)) {
                    this.Tables.Add(new OnlineOrderingDataTable(ds.Tables["OnlineOrdering"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OnlineOrderingDataTable OnlineOrdering {
            get {
                return this.tableOnlineOrdering;
            }
        }
        
        public override DataSet Clone() {
            OnlineOrderingSchema cln = ((OnlineOrderingSchema)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["OnlineOrdering"] != null)) {
                this.Tables.Add(new OnlineOrderingDataTable(ds.Tables["OnlineOrdering"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableOnlineOrdering = ((OnlineOrderingDataTable)(this.Tables["OnlineOrdering"]));
            if ((this.tableOnlineOrdering != null)) {
                this.tableOnlineOrdering.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "OnlineOrderingSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OnlineOrderingSchema.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableOnlineOrdering = new OnlineOrderingDataTable();
            this.Tables.Add(this.tableOnlineOrdering);
        }
        
        private bool ShouldSerializeOnlineOrdering() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void OnlineOrderingRowChangeEventHandler(object sender, OnlineOrderingRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class OnlineOrderingDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSiteId;
            
            private DataColumn columnMaxCurrentBalance;
            
            private DataColumn columnMaxAR1To30Balance;
            
            private DataColumn columnMaxAR31To60Balance;
            
            private DataColumn columnMaxAR61To90Balance;
            
            private DataColumn columnMaxAR91To120Balance;
            
            private DataColumn columnMaxAR121to150Balance;
            
            private DataColumn columnMaxAR150PlusBalance;
            
            internal OnlineOrderingDataTable() : 
                    base("OnlineOrdering") {
                this.InitClass();
            }
            
            internal OnlineOrderingDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            internal DataColumn MaxCurrentBalanceColumn {
                get {
                    return this.columnMaxCurrentBalance;
                }
            }
            
            internal DataColumn MaxAR1To30BalanceColumn {
                get {
                    return this.columnMaxAR1To30Balance;
                }
            }
            
            internal DataColumn MaxAR31To60BalanceColumn {
                get {
                    return this.columnMaxAR31To60Balance;
                }
            }
            
            internal DataColumn MaxAR61To90BalanceColumn {
                get {
                    return this.columnMaxAR61To90Balance;
                }
            }
            
            internal DataColumn MaxAR91To120BalanceColumn {
                get {
                    return this.columnMaxAR91To120Balance;
                }
            }
            
            internal DataColumn MaxAR121to150BalanceColumn {
                get {
                    return this.columnMaxAR121to150Balance;
                }
            }
            
            internal DataColumn MaxAR150PlusBalanceColumn {
                get {
                    return this.columnMaxAR150PlusBalance;
                }
            }
            
            public OnlineOrderingRow this[int index] {
                get {
                    return ((OnlineOrderingRow)(this.Rows[index]));
                }
            }
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowChanged;
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowChanging;
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowDeleted;
            
            public event OnlineOrderingRowChangeEventHandler OnlineOrderingRowDeleting;
            
            public void AddOnlineOrderingRow(OnlineOrderingRow row) {
                this.Rows.Add(row);
            }
            
            public OnlineOrderingRow AddOnlineOrderingRow(int SiteId, System.Double MaxCurrentBalance, System.Double MaxAR1To30Balance, System.Double MaxAR31To60Balance, System.Double MaxAR61To90Balance, System.Double MaxAR91To120Balance, System.Double MaxAR121to150Balance, System.Double MaxAR150PlusBalance) {
                OnlineOrderingRow rowOnlineOrderingRow = ((OnlineOrderingRow)(this.NewRow()));
                rowOnlineOrderingRow.ItemArray = new object[] {
                        SiteId,
                        MaxCurrentBalance,
                        MaxAR1To30Balance,
                        MaxAR31To60Balance,
                        MaxAR61To90Balance,
                        MaxAR91To120Balance,
                        MaxAR121to150Balance,
                        MaxAR150PlusBalance};
                this.Rows.Add(rowOnlineOrderingRow);
                return rowOnlineOrderingRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                OnlineOrderingDataTable cln = ((OnlineOrderingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new OnlineOrderingDataTable();
            }
            
            internal void InitVars() {
                this.columnSiteId = this.Columns["SiteId"];
                this.columnMaxCurrentBalance = this.Columns["MaxCurrentBalance"];
                this.columnMaxAR1To30Balance = this.Columns["MaxAR1To30Balance"];
                this.columnMaxAR31To60Balance = this.Columns["MaxAR31To60Balance"];
                this.columnMaxAR61To90Balance = this.Columns["MaxAR61To90Balance"];
                this.columnMaxAR91To120Balance = this.Columns["MaxAR91To120Balance"];
                this.columnMaxAR121to150Balance = this.Columns["MaxAR121to150Balance"];
                this.columnMaxAR150PlusBalance = this.Columns["MaxAR150PlusBalance"];
            }
            
            private void InitClass() {
                this.columnSiteId = new DataColumn("SiteId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSiteId);
                this.columnMaxCurrentBalance = new DataColumn("MaxCurrentBalance", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxCurrentBalance);
                this.columnMaxAR1To30Balance = new DataColumn("MaxAR1To30Balance", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxAR1To30Balance);
                this.columnMaxAR31To60Balance = new DataColumn("MaxAR31To60Balance", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxAR31To60Balance);
                this.columnMaxAR61To90Balance = new DataColumn("MaxAR61To90Balance", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxAR61To90Balance);
                this.columnMaxAR91To120Balance = new DataColumn("MaxAR91To120Balance", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxAR91To120Balance);
                this.columnMaxAR121to150Balance = new DataColumn("MaxAR121to150Balance", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxAR121to150Balance);
                this.columnMaxAR150PlusBalance = new DataColumn("MaxAR150PlusBalance", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxAR150PlusBalance);
            }
            
            public OnlineOrderingRow NewOnlineOrderingRow() {
                return ((OnlineOrderingRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new OnlineOrderingRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(OnlineOrderingRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OnlineOrderingRowChanged != null)) {
                    this.OnlineOrderingRowChanged(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OnlineOrderingRowChanging != null)) {
                    this.OnlineOrderingRowChanging(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OnlineOrderingRowDeleted != null)) {
                    this.OnlineOrderingRowDeleted(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OnlineOrderingRowDeleting != null)) {
                    this.OnlineOrderingRowDeleting(this, new OnlineOrderingRowChangeEvent(((OnlineOrderingRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveOnlineOrderingRow(OnlineOrderingRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class OnlineOrderingRow : DataRow {
            
            private OnlineOrderingDataTable tableOnlineOrdering;
            
            internal OnlineOrderingRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableOnlineOrdering = ((OnlineOrderingDataTable)(this.Table));
            }
            
            public int SiteId {
                get {
                    try {
                        return ((int)(this[this.tableOnlineOrdering.SiteIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.SiteIdColumn] = value;
                }
            }
            
            public System.Double MaxCurrentBalance {
                get {
                    try {
                        return ((System.Double)(this[this.tableOnlineOrdering.MaxCurrentBalanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxCurrentBalanceColumn] = value;
                }
            }
            
            public System.Double MaxAR1To30Balance {
                get {
                    try {
                        return ((System.Double)(this[this.tableOnlineOrdering.MaxAR1To30BalanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR1To30BalanceColumn] = value;
                }
            }
            
            public System.Double MaxAR31To60Balance {
                get {
                    try {
                        return ((System.Double)(this[this.tableOnlineOrdering.MaxAR31To60BalanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR31To60BalanceColumn] = value;
                }
            }
            
            public System.Double MaxAR61To90Balance {
                get {
                    try {
                        return ((System.Double)(this[this.tableOnlineOrdering.MaxAR61To90BalanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR61To90BalanceColumn] = value;
                }
            }
            
            public System.Double MaxAR91To120Balance {
                get {
                    try {
                        return ((System.Double)(this[this.tableOnlineOrdering.MaxAR91To120BalanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR91To120BalanceColumn] = value;
                }
            }
            
            public System.Double MaxAR121to150Balance {
                get {
                    try {
                        return ((System.Double)(this[this.tableOnlineOrdering.MaxAR121to150BalanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR121to150BalanceColumn] = value;
                }
            }
            
            public System.Double MaxAR150PlusBalance {
                get {
                    try {
                        return ((System.Double)(this[this.tableOnlineOrdering.MaxAR150PlusBalanceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOnlineOrdering.MaxAR150PlusBalanceColumn] = value;
                }
            }
            
            public bool IsSiteIdNull() {
                return this.IsNull(this.tableOnlineOrdering.SiteIdColumn);
            }
            
            public void SetSiteIdNull() {
                this[this.tableOnlineOrdering.SiteIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxCurrentBalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxCurrentBalanceColumn);
            }
            
            public void SetMaxCurrentBalanceNull() {
                this[this.tableOnlineOrdering.MaxCurrentBalanceColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxAR1To30BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR1To30BalanceColumn);
            }
            
            public void SetMaxAR1To30BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR1To30BalanceColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxAR31To60BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR31To60BalanceColumn);
            }
            
            public void SetMaxAR31To60BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR31To60BalanceColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxAR61To90BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR61To90BalanceColumn);
            }
            
            public void SetMaxAR61To90BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR61To90BalanceColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxAR91To120BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR91To120BalanceColumn);
            }
            
            public void SetMaxAR91To120BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR91To120BalanceColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxAR121to150BalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR121to150BalanceColumn);
            }
            
            public void SetMaxAR121to150BalanceNull() {
                this[this.tableOnlineOrdering.MaxAR121to150BalanceColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxAR150PlusBalanceNull() {
                return this.IsNull(this.tableOnlineOrdering.MaxAR150PlusBalanceColumn);
            }
            
            public void SetMaxAR150PlusBalanceNull() {
                this[this.tableOnlineOrdering.MaxAR150PlusBalanceColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class OnlineOrderingRowChangeEvent : EventArgs {
            
            private OnlineOrderingRow eventRow;
            
            private DataRowAction eventAction;
            
            public OnlineOrderingRowChangeEvent(OnlineOrderingRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public OnlineOrderingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
